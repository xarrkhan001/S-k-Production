var e,t,n={"./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm":(e,t,n)=>{e.exports=n.p+"ort-wasm-simd-threaded.jsep.wasm"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb":(e,t,n)=>{e.exports=n.p+"ort.bundle.min.mjs"},"?2ce3":()=>{},"?7992":()=>{},"?5af5":()=>{},"?2b25":()=>{},"?db59":()=>{},"?383f":()=>{},"?fa4b":()=>{},"./node_modules/@huggingface/jinja/dist/index.js":(e,t,n)=>{n.r(t),n.d(t,{Environment:()=>oe,Interpreter:()=>ae,Template:()=>fe,parse:()=>j,tokenize:()=>d});var r=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),s=class{constructor(e,t){this.value=e,this.type=t}};function o(e){return/\w/.test(e)}function a(e){return/[0-9]/.test(e)}var i=[["{%",r.OpenStatement],["%}",r.CloseStatement],["{{",r.OpenExpression],["}}",r.CloseExpression],["(",r.OpenParen],[")",r.CloseParen],["{",r.OpenCurlyBracket],["}",r.CloseCurlyBracket],["[",r.OpenSquareBracket],["]",r.CloseSquareBracket],[",",r.Comma],[".",r.Dot],[":",r.Colon],["|",r.Pipe],["<=",r.ComparisonBinaryOperator],[">=",r.ComparisonBinaryOperator],["==",r.ComparisonBinaryOperator],["!=",r.ComparisonBinaryOperator],["<",r.ComparisonBinaryOperator],[">",r.ComparisonBinaryOperator],["+",r.AdditiveBinaryOperator],["-",r.AdditiveBinaryOperator],["~",r.AdditiveBinaryOperator],["*",r.MultiplicativeBinaryOperator],["/",r.MultiplicativeBinaryOperator],["%",r.MultiplicativeBinaryOperator],["=",r.Equals]],l=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function d(e,t={}){const n=[],d=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%-])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%-]})\n/g,"$1")),e.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}(e,t);let u=0,c=0;const p=e=>{let t="";for(;e(d[u]);)if("\\"!==d[u]){if(t+=d[u++],u>=d.length)throw new SyntaxError("Unexpected end of input")}else{if(++u,u>=d.length)throw new SyntaxError("Unexpected end of input");const e=d[u++],n=l.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n}return t};e:for(;u<d.length;){const e=n.at(-1)?.type;if(void 0===e||e===r.CloseStatement||e===r.CloseExpression||e===r.Comment){let e="";for(;u<d.length&&("{"!==d[u]||"%"!==d[u+1]&&"{"!==d[u+1]&&"#"!==d[u+1]);)e+=d[u++];if(e.length>0){n.push(new s(e,r.Text));continue}}if("{"===d[u]&&"#"===d[u+1]){u+=2;let e="";for(;"#"!==d[u]||"}"!==d[u+1];){if(u+2>=d.length)throw new SyntaxError("Missing end of comment tag");e+=d[u++]}n.push(new s(e,r.Comment)),u+=2;continue}p((e=>/\s/.test(e)));const t=d[u];if("-"===t||"+"===t){const e=n.at(-1)?.type;if(e===r.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case r.Identifier:case r.NumericLiteral:case r.StringLiteral:case r.CloseParen:case r.CloseSquareBracket:break;default:{++u;const e=p(a);n.push(new s(`${t}${e}`,e.length>0?r.NumericLiteral:r.UnaryOperator));continue}}}for(const[e,t]of i){if("}}"===e&&c>0)continue;if(d.slice(u,u+e.length)===e){n.push(new s(e,t)),t===r.OpenExpression?c=0:t===r.OpenCurlyBracket?++c:t===r.CloseCurlyBracket&&--c,u+=e.length;continue e}}if("'"!==t&&'"'!==t)if(a(t)){let e=p(a);if("."===d[u]&&a(d[u+1])){++u;e=`${e}.${p(a)}`}n.push(new s(e,r.NumericLiteral))}else{if(!o(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=p(o);n.push(new s(e,r.Identifier))}}else{++u;const e=p((e=>e!==t));n.push(new s(e,r.StringLiteral)),++u}}return n}var u=class{type="Statement"},c=class extends u{constructor(e){super(),this.body=e}type="Program"},p=class extends u{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},m=class extends u{constructor(e,t,n,r){super(),this.loopvar=e,this.iterable=t,this.body=n,this.defaultBlock=r}type="For"},h=class extends u{type="Break"},f=class extends u{type="Continue"},_=class extends u{constructor(e,t,n){super(),this.assignee=e,this.value=t,this.body=n}type="Set"},g=class extends u{constructor(e,t,n){super(),this.name=e,this.args=t,this.body=n}type="Macro"},w=class extends u{constructor(e){super(),this.value=e}type="Comment"},b=class extends u{type="Expression"},y=class extends b{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},M=class extends b{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},x=class extends b{constructor(e){super(),this.value=e}type="Identifier"},v=class extends b{constructor(e){super(),this.value=e}type="Literal"},T=class extends v{type="IntegerLiteral"},k=class extends v{type="FloatLiteral"},P=class extends v{type="StringLiteral"},$=class extends v{type="ArrayLiteral"},C=class extends v{type="TupleLiteral"},S=class extends v{type="ObjectLiteral"},F=class extends b{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},E=class extends b{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},I=class extends u{constructor(e,t){super(),this.filter=e,this.body=t}type="FilterStatement"},A=class extends b{constructor(e,t){super(),this.lhs=e,this.test=t}type="SelectExpression"},z=class extends b{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},L=class extends b{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},O=class extends b{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},D=class extends b{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"},B=class extends b{constructor(e){super(),this.argument=e}type="SpreadExpression"},N=class extends u{constructor(e,t,n){super(),this.call=e,this.callerArgs=t,this.body=n}type="CallStatement"},R=class extends b{constructor(e,t,n){super(),this.condition=e,this.trueExpr=t,this.falseExpr=n}type="Ternary"};function j(e){const t=new c([]);let n=0;function o(t,r){const s=e[n++];if(!s||s.type!==t)throw new Error(`Parser Error: ${r}. ${s.type} !== ${t}.`);return s}function a(e){if(!u(e))throw new SyntaxError(`Expected ${e}`);++n}function i(){switch(e[n].type){case r.Comment:return new w(e[n++].value);case r.Text:return new P(o(r.Text,"Expected text token").value);case r.OpenStatement:return function(){if(o(r.OpenStatement,"Expected opening statement token"),e[n].type!==r.Identifier)throw new SyntaxError(`Unknown statement, got ${e[n].type}`);const t=e[n].value;let s;switch(t){case"set":++n,s=function(){const e=v();let t=null;const s=[];if(l(r.Equals))++n,t=v();else{for(o(r.CloseStatement,"Expected %} token");!d("endset");)s.push(i());o(r.OpenStatement,"Expected {% token"),a("endset")}return o(r.CloseStatement,"Expected closing statement token"),new _(e,t,s)}();break;case"if":++n,s=b(),o(r.OpenStatement,"Expected {% token"),a("endif"),o(r.CloseStatement,"Expected %} token");break;case"macro":++n,s=function(){const e=Z();if("Identifier"!==e.type)throw new SyntaxError("Expected identifier following macro statement");const t=Q();o(r.CloseStatement,"Expected closing statement token");const n=[];for(;!d("endmacro");)n.push(i());return new g(e,t,n)}(),o(r.OpenStatement,"Expected {% token"),a("endmacro"),o(r.CloseStatement,"Expected %} token");break;case"for":++n,s=function(){const e=v(!0);if(!(e instanceof x||e instanceof C))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);if(!u("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++n;const t=j();o(r.CloseStatement,"Expected closing statement token");const s=[];for(;!d("endfor","else");)s.push(i());const a=[];if(d("else"))for(++n,++n,o(r.CloseStatement,"Expected closing statement token");!d("endfor");)a.push(i());return new m(e,t,s,a)}(),o(r.OpenStatement,"Expected {% token"),a("endfor"),o(r.CloseStatement,"Expected %} token");break;case"call":{++n;let e=null;l(r.OpenParen)&&(e=Q());const t=Z();if("Identifier"!==t.type)throw new SyntaxError("Expected identifier following call statement");const u=Q();o(r.CloseStatement,"Expected closing statement token");const c=[];for(;!d("endcall");)c.push(i());o(r.OpenStatement,"Expected '{%'"),a("endcall"),o(r.CloseStatement,"Expected closing statement token");const p=new M(t,u);s=new N(p,e,c);break}case"break":++n,o(r.CloseStatement,"Expected closing statement token"),s=new h;break;case"continue":++n,o(r.CloseStatement,"Expected closing statement token"),s=new f;break;case"filter":{++n;let e=Z();e instanceof x&&l(r.OpenParen)&&(e=H(e)),o(r.CloseStatement,"Expected closing statement token");const t=[];for(;!d("endfilter");)t.push(i());o(r.OpenStatement,"Expected '{%'"),a("endfilter"),o(r.CloseStatement,"Expected '%}'"),s=new I(e,t);break}default:throw new SyntaxError(`Unknown statement type: ${t}`)}return s}();case r.OpenExpression:return function(){o(r.OpenExpression,"Expected opening expression token");const e=j();return o(r.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function l(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function d(...t){return e[n]?.type===r.OpenStatement&&e[n+1]?.type===r.Identifier&&t.includes(e[n+1]?.value)}function u(...t){return n+t.length<=e.length&&t.every(((t,r)=>"Identifier"===e[n+r].type&&t===e[n+r].value))}function b(){const e=j();o(r.CloseStatement,"Expected closing statement token");const t=[],s=[];for(;!d("elif","else","endif");)t.push(i());if(d("elif")){++n,++n;const e=b();s.push(e)}else if(d("else"))for(++n,++n,o(r.CloseStatement,"Expected closing statement token");!d("endif");)s.push(i());return new p(e,t,s)}function v(e=!1){const t=e?Z:j,s=[t()],o=l(r.Comma);for(;o&&(++n,s.push(t()),l(r.Comma)););return o?new C(s):s[0]}function j(){return V()}function V(){const e=G();if(u("if")){++n;const t=G();if(u("else")){++n;const r=V();return new R(t,e,r)}return new A(e,t)}return e}function G(){let t=q();for(;u("or");){const r=e[n];++n;const s=q();t=new F(r,t,s)}return t}function q(){let t=U();for(;u("and");){const r=e[n];++n;const s=U();t=new F(r,t,s)}return t}function U(){let t;for(;u("not");){const r=e[n];++n;const s=U();t=new L(r,s)}return t??function(){let t=W();for(;;){let o;if(u("not","in"))o=new s("not in",r.Identifier),n+=2;else if(u("in"))o=e[n++];else{if(!l(r.ComparisonBinaryOperator))break;o=e[n++]}const a=W();t=new F(o,t,a)}return t}()}function W(){let t=J();for(;l(r.AdditiveBinaryOperator);){const r=e[n];++n;const s=J();t=new F(r,t,s)}return t}function H(e){let t=new M(e,Q());return t=X(t),l(r.OpenParen)&&(t=H(t)),t}function Q(){o(r.OpenParen,"Expected opening parenthesis for arguments list");const t=function(){const t=[];for(;!l(r.CloseParen);){let s;if(e[n].type===r.MultiplicativeBinaryOperator&&"*"===e[n].value){++n;const e=j();s=new B(e)}else if(s=j(),l(r.Equals)){if(++n,!(s instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const e=j();s=new D(s,e)}t.push(s),l(r.Comma)&&++n}return t}();return o(r.CloseParen,"Expected closing parenthesis for arguments list"),t}function K(){const e=[];let t=!1;for(;!l(r.CloseSquareBracket);)l(r.Colon)?(e.push(void 0),++n,t=!0):(e.push(j()),l(r.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new O(...e)}return e[0]}function X(t){for(;l(r.Dot)||l(r.OpenSquareBracket);){const s=e[n];let a;++n;const i=s.type===r.OpenSquareBracket;if(i)a=K(),o(r.CloseSquareBracket,"Expected closing square bracket");else if(a=Z(),"Identifier"!==a.type)throw new SyntaxError("Expected identifier following dot operator");t=new y(t,a,i)}return t}function J(){let t=Y();for(;l(r.MultiplicativeBinaryOperator);){const r=e[n++],s=Y();t=new F(r,t,s)}return t}function Y(){let e=function(){let e=function(){const e=X(Z());return l(r.OpenParen)?H(e):e}();for(;l(r.Pipe);){++n;let t=Z();if(!(t instanceof x))throw new SyntaxError("Expected identifier for the filter");l(r.OpenParen)&&(t=H(t)),e=new E(e,t)}return e}();for(;u("is");){++n;const t=u("not");t&&++n;const r=Z();if(!(r instanceof x))throw new SyntaxError("Expected identifier for the test");e=new z(e,t,r)}return e}function Z(){const t=e[n++];switch(t.type){case r.NumericLiteral:{const e=t.value;return e.includes(".")?new k(Number(e)):new T(Number(e))}case r.StringLiteral:{let s=t.value;for(;l(r.StringLiteral);)s+=e[n++].value;return new P(s)}case r.Identifier:return new x(t.value);case r.OpenParen:{const e=v();return o(r.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),e}case r.OpenSquareBracket:{const e=[];for(;!l(r.CloseSquareBracket);)e.push(j()),l(r.Comma)&&++n;return++n,new $(e)}case r.OpenCurlyBracket:{const e=new Map;for(;!l(r.CloseCurlyBracket);){const t=j();o(r.Colon,"Expected colon between key and value in object literal");const s=j();e.set(t,s),l(r.Comma)&&++n}return++n,new S(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(i());return t}function V(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let s=e;s<t;s+=n)r.push(s);return r}function G(e,t,n,r=1){const s=Math.sign(r);s>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const o=[];for(let a=t;s*a<s*n;a+=r)o.push(e[a]);return o}function q(e){return function(e,t){const n=new Intl.DateTimeFormat(void 0,{month:"long"}),r=new Intl.DateTimeFormat(void 0,{month:"short"}),s=e=>e<10?"0"+e:e.toString();return t.replace(/%[YmdbBHM%]/g,(t=>{switch(t){case"%Y":return e.getFullYear().toString();case"%m":return s(e.getMonth()+1);case"%d":return s(e.getDate());case"%b":return r.format(e);case"%B":return n.format(e);case"%H":return s(e.getHours());case"%M":return s(e.getMinutes());case"%%":return"%";default:return t}}))}(new Date,e)}var U=class extends Error{},W=class extends Error{},H=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new J(!!this.value)}toString(){return String(this.value)}},Q=class extends H{type="IntegerValue"},K=class extends H{type="FloatValue";toString(){return this.value%1==0?this.value.toFixed(1):this.value.toString()}},X=class extends H{type="StringValue";builtins=new Map([["upper",new ne((()=>new X(this.value.toUpperCase())))],["lower",new ne((()=>new X(this.value.toLowerCase())))],["strip",new ne((()=>new X(this.value.trim())))],["title",new ne((()=>new X(this.value.replace(/\b\w/g,(e=>e.toUpperCase())))))],["capitalize",new ne((()=>new X(this.value.charAt(0).toUpperCase()+this.value.slice(1))))],["length",new Q(this.value.length)],["rstrip",new ne((()=>new X(this.value.trimEnd())))],["lstrip",new ne((()=>new X(this.value.trimStart())))],["startswith",new ne((e=>{if(0===e.length)throw new Error("startswith() requires at least one argument");const t=e[0];if(t instanceof X)return new J(this.value.startsWith(t.value));if(t instanceof ee){for(const e of t.value){if(!(e instanceof X))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(e.value))return new J(!0)}return new J(!1)}throw new Error("startswith() argument must be a string or tuple of strings")}))],["endswith",new ne((e=>{if(0===e.length)throw new Error("endswith() requires at least one argument");const t=e[0];if(t instanceof X)return new J(this.value.endsWith(t.value));if(t instanceof ee){for(const e of t.value){if(!(e instanceof X))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(e.value))return new J(!0)}return new J(!1)}throw new Error("endswith() argument must be a string or tuple of strings")}))],["split",new ne((e=>{const t=e[0]??new re;if(!(t instanceof X||t instanceof re))throw new Error("sep argument must be a string or null");const n=e[1]??new Q(-1);if(!(n instanceof Q))throw new Error("maxsplit argument must be a number");let r=[];if(t instanceof re){const e=this.value.trimStart();for(const{0:t,index:s}of e.matchAll(/\S+/g)){if(-1!==n.value&&r.length>=n.value&&void 0!==s){r.push(t+e.slice(s+t.length));break}r.push(t)}}else{if(""===t.value)throw new Error("empty separator");r=this.value.split(t.value),-1!==n.value&&r.length>n.value&&r.push(r.splice(n.value).join(t.value))}return new ee(r.map((e=>new X(e))))}))],["replace",new ne((e=>{if(e.length<2)throw new Error("replace() requires at least two arguments");const t=e[0],n=e[1];if(!(t instanceof X&&n instanceof X))throw new Error("replace() arguments must be strings");let r;if(r=e.length>2?"KeywordArgumentsValue"===e[2].type?e[2].value.get("count")??new re:e[2]:new re,!(r instanceof Q||r instanceof re))throw new Error("replace() count argument must be a number or null");return new X(function(e,t,n,r){if(0===r)return e;let s=null==r||r<0?1/0:r;const o=0===t.length?new RegExp("(?=)","gu"):new RegExp(t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"gu");return e.replaceAll(o,(e=>s>0?(--s,n):e))}(this.value,t.value,n.value,r.value))}))]])},J=class extends H{type="BooleanValue"},Y=class extends H{type="ObjectValue";__bool__(){return new J(this.value.size>0)}builtins=new Map([["get",new ne((([e,t])=>{if(!(e instanceof X))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new re}))],["items",new ne((()=>this.items()))],["keys",new ne((()=>this.keys()))],["values",new ne((()=>this.values()))]]);items(){return new ee(Array.from(this.value.entries()).map((([e,t])=>new ee([new X(e),t]))))}keys(){return new ee(Array.from(this.value.keys()).map((e=>new X(e))))}values(){return new ee(Array.from(this.value.values()))}},Z=class extends Y{type="KeywordArgumentsValue"},ee=class extends H{type="ArrayValue";builtins=new Map([["length",new Q(this.value.length)]]);__bool__(){return new J(this.value.length>0)}},te=class extends ee{type="TupleValue"},ne=class extends H{type="FunctionValue"},re=class extends H{type="NullValue"},se=class extends H{type="UndefinedValue"},oe=class{constructor(e){this.parent=e}variables=new Map([["namespace",new ne((e=>{if(0===e.length)return new Y(new Map);if(1!==e.length||!(e[0]instanceof Y))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof ne],["odd",e=>{if(!(e instanceof Q))throw new Error(`cannot odd on ${e.type}`);return e.value%2!=0}],["even",e=>{if(!(e instanceof Q))throw new Error(`cannot even on ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["none",e=>"NullValue"===e.type],["string",e=>"StringValue"===e.type],["number",e=>e instanceof Q||e instanceof K],["integer",e=>e instanceof Q],["iterable",e=>"ArrayValue"===e.type||"StringValue"===e.type],["mapping",e=>"ObjectValue"===e.type],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value],["eq",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,ie(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new se}catch{return new se}}};var ae=class{global;constructor(e){this.global=e??new oe}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new J(n.value==r.value);case"!=":return new J(n.value!=r.value)}if(n instanceof se||r instanceof se){if(r instanceof se&&["in","not in"].includes(e.operator.value))return new J("not in"===e.operator.value);throw new Error(`Cannot perform operation ${e.operator.value} on undefined values`)}if(n instanceof re||r instanceof re)throw new Error("Cannot perform operation on null values");if("~"===e.operator.value)return new X(n.value.toString()+r.value.toString());if((n instanceof Q||n instanceof K)&&(r instanceof Q||r instanceof K)){const t=n.value,s=r.value;switch(e.operator.value){case"+":case"-":case"*":{const o="+"===e.operator.value?t+s:"-"===e.operator.value?t-s:t*s;return n instanceof K||r instanceof K?new K(o):new Q(o)}case"/":return new K(t/s);case"%":{const e=t%s;return n instanceof K||r instanceof K?new K(e):new Q(e)}case"<":return new J(t<s);case">":return new J(t>s);case">=":return new J(t>=s);case"<=":return new J(t<=s)}}else if(n instanceof ee&&r instanceof ee){if("+"===e.operator.value)return new ee(n.value.concat(r.value))}else if(r instanceof ee){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new J(t);case"not in":return new J(!t)}}if((n instanceof X||r instanceof X)&&"+"===e.operator.value)return new X(n.value.toString()+r.value.toString());if(n instanceof X&&r instanceof X)switch(e.operator.value){case"in":return new J(r.value.includes(n.value));case"not in":return new J(!r.value.includes(n.value))}if(n instanceof X&&r instanceof Y)switch(e.operator.value){case"in":return new J(r.value.has(n.value));case"not in":return new J(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateArguments(e,t){const n=[],r=new Map;for(const s of e)if("SpreadExpression"===s.type){const e=s,r=this.evaluate(e.argument,t);if(!(r instanceof ee))throw new Error(`Cannot unpack non-iterable type: ${r.type}`);for(const e of r.value)n.push(e)}else if("KeywordArgumentExpression"===s.type){const e=s;r.set(e.key.value,this.evaluate(e.value,t))}else{if(r.size>0)throw new Error("Positional arguments must come before keyword arguments");n.push(this.evaluate(s,t))}return[n,r]}applyFilter(e,t,n){if("Identifier"===t.type){const r=t;if("tojson"===r.value)return new X(le(e));if(e instanceof ee)switch(r.value){case"list":return e;case"first":return e.value[0];case"last":return e.value[e.value.length-1];case"length":return new Q(e.value.length);case"reverse":return new ee(e.value.reverse());case"sort":return new ee(e.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"IntegerValue":case"FloatValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));case"join":return new X(e.value.map((e=>e.value)).join(""));case"string":return new X(le(e));case"unique":{const t=new Set,n=[];for(const r of e.value)t.has(r.value)||(t.add(r.value),n.push(r));return new ee(n)}default:throw new Error(`Unknown ArrayValue filter: ${r.value}`)}else if(e instanceof X)switch(r.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const t=e.builtins.get(r.value);if(t instanceof ne)return t.value([],n);if(t instanceof Q)return t;throw new Error(`Unknown StringValue filter: ${r.value}`)}case"trim":return new X(e.value.trim());case"indent":return new X(e.value.split("\n").map(((e,t)=>0===t||0===e.length?e:"    "+e)).join("\n"));case"join":case"string":return e;case"int":{const t=parseInt(e.value,10);return new Q(isNaN(t)?0:t)}case"float":{const t=parseFloat(e.value);return new K(isNaN(t)?0:t)}default:throw new Error(`Unknown StringValue filter: ${r.value}`)}else if(e instanceof Q||e instanceof K)switch(r.value){case"abs":return e instanceof Q?new Q(Math.abs(e.value)):new K(Math.abs(e.value));case"int":return new Q(Math.floor(e.value));case"float":return new K(e.value);default:throw new Error(`Unknown NumericValue filter: ${r.value}`)}else if(e instanceof Y)switch(r.value){case"items":return new ee(Array.from(e.value.entries()).map((([e,t])=>new ee([new X(e),t]))));case"length":return new Q(e.value.size);default:throw new Error(`Unknown ObjectValue filter: ${r.value}`)}else if(e instanceof J)switch(r.value){case"bool":return new J(e.value);case"int":return new Q(e.value?1:0);case"float":return new K(e.value?1:0);case"string":return new X(e.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${r.value}`)}throw new Error(`Cannot apply filter "${r.value}" to type: ${e.type}`)}if("CallExpression"===t.type){const r=t;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const s=r.callee.value;if("tojson"===s){const[,t]=this.evaluateArguments(r.args,n),s=t.get("indent")??new re;if(!(s instanceof Q||s instanceof re))throw new Error("If set, indent must be a number");return new X(le(e,s.value))}if("join"===s){let t;if(e instanceof X)t=Array.from(e.value);else{if(!(e instanceof ee))throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`);t=e.value.map((e=>e.value))}const[o,a]=this.evaluateArguments(r.args,n),i=o.at(0)??a.get("separator")??new X("");if(!(i instanceof X))throw new Error("separator must be a string");return new X(t.join(i.value))}if("int"===s||"float"===s){const[t,o]=this.evaluateArguments(r.args,n),a=t.at(0)??o.get("default")??("int"===s?new Q(0):new K(0));if(e instanceof X){const t="int"===s?parseInt(e.value,10):parseFloat(e.value);return isNaN(t)?a:"int"===s?new Q(t):new K(t)}if(e instanceof Q||e instanceof K)return e;if(e instanceof J)return"int"===s?new Q(e.value?1:0):new K(e.value?1:0);throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}if("default"===s){const[t,s]=this.evaluateArguments(r.args,n),o=t[0]??new X(""),a=t[1]??s.get("boolean")??new J(!1);if(!(a instanceof J))throw new Error("`default` filter flag must be a boolean");return e instanceof se||a.value&&!e.__bool__().value?o:e}if(e instanceof ee){switch(s){case"selectattr":case"rejectattr":{const t="selectattr"===s;if(e.value.some((e=>!(e instanceof Y))))throw new Error(`\`${s}\` can only be applied to array of objects`);if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error(`arguments of \`${s}\` must be strings`);const[o,a,i]=r.args.map((e=>this.evaluate(e,n)));let l;if(a){const e=n.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);l=e}else l=(...e)=>e[0].__bool__().value;const d=e.value.filter((e=>{const n=e.value.get(o.value),r=!!n&&l(n,i);return t?r:!r}));return new ee(d)}case"map":{const[,t]=this.evaluateArguments(r.args,n);if(t.has("attribute")){const n=t.get("attribute");if(!(n instanceof X))throw new Error("attribute must be a string");const r=t.get("default"),s=e.value.map((e=>{if(!(e instanceof Y))throw new Error("items in map must be an object");return e.value.get(n.value)??r??new se}));return new ee(s)}throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${s}`)}if(e instanceof X){switch(s){case"indent":{const[t,s]=this.evaluateArguments(r.args,n),o=t.at(0)??s.get("width")??new Q(4);if(!(o instanceof Q))throw new Error("width must be a number");const a=t.at(1)??s.get("first")??new J(!1),i=t.at(2)??s.get("blank")??new J(!1),l=e.value.split("\n"),d=" ".repeat(o.value),u=l.map(((e,t)=>!a.value&&0===t||!i.value&&0===e.length?e:d+e));return new X(u.join("\n"))}case"replace":{const t=e.builtins.get("replace");if(!(t instanceof ne))throw new Error("replace filter not available");const[s,o]=this.evaluateArguments(r.args,n);return t.value([...s,new Z(o)],n)}}throw new Error(`Unknown StringValue filter: ${s}`)}throw new Error(`Cannot apply filter "${s}" to type: ${e.type}`)}throw new Error(`Unknown filter: ${t.type}`)}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);return this.applyFilter(n,e.filter,t)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const s=r(n);return new J(e.negate?!s:s)}evaluateSelectExpression(e,t){return this.evaluate(e.test,t).__bool__().value?this.evaluate(e.lhs,t):new se}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new J(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evaluateTernaryExpression(e,t){return this.evaluate(e.condition,t).__bool__().value?this.evaluate(e.trueExpr,t):this.evaluate(e.falseExpr,t)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.toString())}return new X(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const[n,r]=this.evaluateArguments(e.args,t);r.size>0&&n.push(new Z(r));const s=this.evaluate(e.callee,t);if("FunctionValue"!==s.type)throw new Error(`Cannot call something that is not a function: got ${s.type}`);return s.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof ee||e instanceof X))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),s=this.evaluate(t.stop,n),o=this.evaluate(t.step,n);if(!(r instanceof Q||r instanceof se))throw new Error("Slice start must be numeric or undefined");if(!(s instanceof Q||s instanceof se))throw new Error("Slice stop must be numeric or undefined");if(!(o instanceof Q||o instanceof se))throw new Error("Slice step must be numeric or undefined");return e instanceof ee?new ee(G(e.value,r.value,s.value,o.value)):new X(G(Array.from(e.value),r.value,s.value,o.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,s;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new X(e.property.value);if(n instanceof Y){if(!(r instanceof X))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof ee||n instanceof X)if(r instanceof Q)s=n.value.at(r.value),n instanceof X&&(s=new X(n.value.at(r.value)));else{if(!(r instanceof X))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);s=n.builtins.get(r.value)}else{if(!(r instanceof X))throw new Error(`Cannot access property with non-string: got ${r.type}`);s=n.builtins.get(r.value)}return s instanceof H?s:new se}evaluateSet(e,t){const n=e.value?this.evaluate(e.value,t):this.evaluateBlock(e.body,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else if("TupleLiteral"===e.assignee.type){const r=e.assignee;if(!(n instanceof ee))throw new Error(`Cannot unpack non-iterable type in set: ${n.type}`);const s=n.value;if(s.length!==r.value.length)throw new Error(`Too ${r.value.length>s.length?"few":"many"} items to unpack in set`);for(let e=0;e<r.value.length;++e){const n=r.value[e];if("Identifier"!==n.type)throw new Error(`Cannot unpack to non-identifier in set: ${n.type}`);t.setVariable(n.value,s[e])}}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,s=this.evaluate(r.object,t);if(!(s instanceof Y))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");s.value.set(r.property.value,n)}}return new re}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new oe(t);let r,s;if("SelectExpression"===e.iterable.type){const t=e.iterable;s=this.evaluate(t.lhs,n),r=t.test}else s=this.evaluate(e.iterable,n);if(!(s instanceof ee||s instanceof Y))throw new Error(`Expected iterable or object type in for loop: got ${s.type}`);s instanceof Y&&(s=s.keys());const o=[],a=[];for(let t=0;t<s.value.length;++t){const i=new oe(n),l=s.value[t];let d;if("Identifier"===e.loopvar.type)d=t=>t.setVariable(e.loopvar.value,l);else{if("TupleLiteral"!==e.loopvar.type)throw new Error(`Invalid loop variable(s): ${e.loopvar.type}`);{const t=e.loopvar;if("ArrayValue"!==l.type)throw new Error(`Cannot unpack non-iterable type: ${l.type}`);const n=l;if(t.value.length!==n.value.length)throw new Error(`Too ${t.value.length>n.value.length?"few":"many"} items to unpack`);d=e=>{for(let r=0;r<t.value.length;++r){if("Identifier"!==t.value[r].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[r].type}`);e.setVariable(t.value[r].value,n.value[r])}}}}if(r){d(i);if(!this.evaluate(r,i).__bool__().value)continue}o.push(l),a.push(d)}let i="",l=!0;for(let t=0;t<o.length;++t){const r=new Map([["index",new Q(t+1)],["index0",new Q(t)],["revindex",new Q(o.length-t)],["revindex0",new Q(o.length-t-1)],["first",new J(0===t)],["last",new J(t===o.length-1)],["length",new Q(o.length)],["previtem",t>0?o[t-1]:new se],["nextitem",t<o.length-1?o[t+1]:new se]]);n.setVariable("loop",new Y(r)),a[t](n);try{i+=this.evaluateBlock(e.body,n).value}catch(e){if(e instanceof W)continue;if(e instanceof U)break;throw e}l=!1}if(l){i+=this.evaluateBlock(e.defaultBlock,n).value}return new X(i)}evaluateMacro(e,t){return t.setVariable(e.name.value,new ne(((t,n)=>{const r=new oe(n);let s;t=t.slice(),"KeywordArgumentsValue"===t.at(-1)?.type&&(s=t.pop());for(let n=0;n<e.args.length;++n){const o=e.args[n],a=t[n];if("Identifier"===o.type){const e=o;if(!a)throw new Error(`Missing positional argument: ${e.value}`);r.setVariable(e.value,a)}else{if("KeywordArgumentExpression"!==o.type)throw new Error(`Unknown argument type: ${o.type}`);{const e=o,t=a??s?.value.get(e.key.value)??this.evaluate(e.value,r);r.setVariable(e.key.value,t)}}}return this.evaluateBlock(e.body,r)}))),new re}evaluateCallStatement(e,t){const n=new ne(((t,n)=>{const r=new oe(n);if(e.callerArgs)for(let n=0;n<e.callerArgs.length;++n){const s=e.callerArgs[n];if("Identifier"!==s.type)throw new Error(`Caller parameter must be an identifier, got ${s.type}`);r.setVariable(s.value,t[n]??new se)}return this.evaluateBlock(e.body,r)})),[r,s]=this.evaluateArguments(e.call.args,t);r.push(new Z(s));const o=this.evaluate(e.call.callee,t);if("FunctionValue"!==o.type)throw new Error(`Cannot call something that is not a function: got ${o.type}`);const a=new oe(t);return a.setVariable("caller",n),o.value(r,a)}evaluateFilterStatement(e,t){const n=this.evaluateBlock(e.body,t);return this.applyFilter(n,e.filter,t)}evaluate(e,t){if(!e)return new se;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"Macro":return this.evaluateMacro(e,t);case"CallStatement":return this.evaluateCallStatement(e,t);case"Break":throw new U;case"Continue":throw new W;case"IntegerLiteral":return new Q(e.value);case"FloatLiteral":return new K(e.value);case"StringLiteral":return new X(e.value);case"ArrayLiteral":return new ee(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new te(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const n=new Map;for(const[r,s]of e.value){const e=this.evaluate(r,t);if(!(e instanceof X))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(s,t))}return new Y(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"FilterStatement":return this.evaluateFilterStatement(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);case"SelectExpression":return this.evaluateSelectExpression(e,t);case"Ternary":return this.evaluateTernaryExpression(e,t);case"Comment":return new re;default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function ie(e){switch(typeof e){case"number":return Number.isInteger(e)?new Q(e):new K(e);case"string":return new X(e);case"boolean":return new J(e);case"undefined":return new se;case"object":return null===e?new re:Array.isArray(e)?new ee(e.map(ie)):new Y(new Map(Object.entries(e).map((([e,t])=>[e,ie(t)]))));case"function":return new ne(((t,n)=>ie(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}function le(e,t,n){const r=n??0;switch(e.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(e.value);case"ArrayValue":case"ObjectValue":{const n=t?" ".repeat(t):"",s="\n"+n.repeat(r),o=s+n;if("ArrayValue"===e.type){const n=e.value.map((e=>le(e,t,r+1)));return t?`[${o}${n.join(`,${o}`)}${s}]`:`[${n.join(", ")}]`}{const n=Array.from(e.value.entries()).map((([e,n])=>{const s=`"${e}": ${le(n,t,r+1)}`;return t?`${o}${s}`:s}));return t?`{${n.join(",")}${s}}`:`{${n.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${e.type}`)}}var de="\n",ue="{%- ",ce=" -%}";function pe(...e){return ue+e.join(" ")+ce}function me(e,t,n){return e.map((e=>function(e,t,n){const r=n.repeat(t);switch(e.type){case"Program":return me(e.body,t,n);case"If":return function(e,t,n){const r=n.repeat(t),s=[];let o=e;for(;o&&(s.push({test:o.test,body:o.body}),1===o.alternate.length&&"If"===o.alternate[0].type);)o=o.alternate[0];let a=r+pe("if",he(s[0].test))+de+me(s[0].body,t+1,n);for(let e=1;e<s.length;++e)a+=de+r+pe("elif",he(s[e].test))+de+me(s[e].body,t+1,n);o&&o.alternate.length>0&&(a+=de+r+pe("else")+de+me(o.alternate,t+1,n));return a+=de+r+pe("endif"),a}(e,t,n);case"For":return function(e,t,n){const r=n.repeat(t);let s="";if("SelectExpression"===e.iterable.type){const t=e.iterable;s=`${he(t.lhs)} if ${he(t.test)}`}else s=he(e.iterable);let o=r+pe("for",he(e.loopvar),"in",s)+de+me(e.body,t+1,n);e.defaultBlock.length>0&&(o+=de+r+pe("else")+de+me(e.defaultBlock,t+1,n));return o+=de+r+pe("endfor"),o}(e,t,n);case"Set":return function(e,t,n){const r=n.repeat(t),s=he(e.assignee),o=e.value?he(e.value):"",a=r+pe("set",`${s}${e.value?" = "+o:""}`);if(0===e.body.length)return a;return a+de+me(e.body,t+1,n)+de+r+pe("endset")}(e,t,n);case"Macro":return function(e,t,n){const r=n.repeat(t),s=e.args.map(he).join(", ");return r+pe("macro",`${e.name.value}(${s})`)+de+me(e.body,t+1,n)+de+r+pe("endmacro")}(e,t,n);case"Break":return r+pe("break");case"Continue":return r+pe("continue");case"CallStatement":return function(e,t,n){const r=n.repeat(t),s=e.callerArgs&&e.callerArgs.length>0?`(${e.callerArgs.map(he).join(", ")})`:"",o=he(e.call);let a=r+pe(`call${s}`,o)+de;return a+=me(e.body,t+1,n)+de,a+=r+pe("endcall"),a}(e,t,n);case"FilterStatement":return function(e,t,n){const r=n.repeat(t),s="Identifier"===e.filter.type?e.filter.value:he(e.filter);let o=r+pe("filter",s)+de;return o+=me(e.body,t+1,n)+de,o+=r+pe("endfilter"),o}(e,t,n);case"Comment":return r+"{# "+e.value+" #}";default:return r+"{{- "+he(e)+" -}}"}}(e,t,n))).join(de)}function he(e,t=-1){switch(e.type){case"SpreadExpression":return`*${he(e.argument)}`;case"Identifier":return e.value;case"IntegerLiteral":case"FloatLiteral":return`${e.value}`;case"StringLiteral":return JSON.stringify(e.value);case"BinaryExpression":{const n=e,r=function(e){switch(e.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return"and"===e.operator.value?1:"in"===e.operator.value||"not in"===e.operator.value?2:0}return 0}(n),s=he(n.left,r),o=he(n.right,r+1),a=`${s} ${n.operator.value} ${o}`;return r<t?`(${a})`:a}case"UnaryExpression":{const t=e;return t.operator.value+("not"===t.operator.value?" ":"")+he(t.argument,1/0)}case"CallExpression":{const t=e,n=t.args.map(he).join(", ");return`${he(t.callee)}(${n})`}case"MemberExpression":{const t=e;let n=he(t.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(t.object.type)||(n=`(${n})`);let r=he(t.property);return t.computed||"Identifier"===t.property.type||(r=`(${r})`),t.computed?`${n}[${r}]`:`${n}.${r}`}case"FilterExpression":{const t=e,n=he(t.operand,1/0);return"CallExpression"===t.filter.type?`${n} | ${he(t.filter)}`:`${n} | ${t.filter.value}`}case"SelectExpression":{const t=e;return`${he(t.lhs)} if ${he(t.test)}`}case"TestExpression":{const t=e;return`${he(t.operand)} is${t.negate?" not":""} ${t.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const t=e.value.map(he),n="ArrayLiteral"===e.type?"[]":"()";return`${n[0]}${t.join(", ")}${n[1]}`}case"ObjectLiteral":return`{${Array.from(e.value.entries()).map((([e,t])=>`${he(e)}: ${he(t)}`)).join(", ")}}`;case"SliceExpression":{const t=e;return`${t.start?he(t.start):""}:${t.stop?he(t.stop):""}${t.step?`:${he(t.step)}`:""}`}case"KeywordArgumentExpression":{const t=e;return`${t.key.value}=${he(t.value)}`}case"Ternary":{const n=e,r=`${he(n.trueExpr)} if ${he(n.condition,0)} else ${he(n.falseExpr)}`;return t>-1?`(${r})`:r}default:throw new Error(`Unknown expression type: ${e.type}`)}}var fe=class{parsed;constructor(e){const t=d(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=j(t)}render(e){const t=new oe;if(function(e){e.set("false",!1),e.set("true",!0),e.set("none",null),e.set("raise_exception",(e=>{throw new Error(e)})),e.set("range",V),e.set("strftime_now",q),e.set("True",!0),e.set("False",!1),e.set("None",null)}(t),e)for(const[n,r]of Object.entries(e))t.set(n,r);return new ae(t).run(this.parsed).value}format(e){return function(e,t="\t"){const n="number"==typeof t?" ".repeat(t):t;return me(e.body,0,n).replace(/\n$/,"")}(this.parsed,e?.indent||"\t")}}},"./node_modules/onnxruntime-common/dist/esm/backend-impl.js":(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>o,resolveBackendAndExecutionProviders:()=>i});const r=new Map,s=[],o=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{const o=r.get(e);if(void 0===o)r.set(e,{backend:t,priority:n});else{if(o.priority>n)return;if(o.priority===n&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){const t=s.indexOf(e);-1!==t&&s.splice(t,1);for(let t=0;t<s.length;t++)if(r.get(s[t]).priority<=n)return void s.splice(t,0,e);s.push(e)}}},a=async e=>{const t=r.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{const n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},i=async e=>{const t=e.executionProviders||[],n=t.map((e=>"string"==typeof e?e:e.name)),r=0===n.length?s:n;let o;const i=[],l=new Set;for(const e of r){const t=await a(e);"string"==typeof t?i.push({name:e,err:t}):(o||(o=t),o===t&&l.add(e))}if(!o)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(const{name:e,err:t}of i)n.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);const d=t.filter((e=>l.has("string"==typeof e?e:e.name)));return[o,new Proxy(e,{get:(e,t)=>"executionProviders"===t?d:Reflect.get(e,t)})]}},"./node_modules/onnxruntime-common/dist/esm/backend.js":(e,t,n)=>{n.r(t),n.d(t,{registerBackend:()=>r.registerBackend});var r=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js")},"./node_modules/onnxruntime-common/dist/esm/env-impl.js":(e,t,n)=>{n.r(t),n.d(t,{env:()=>o});var r=n("./node_modules/onnxruntime-common/dist/esm/version.js");let s="warning";const o={wasm:{},webgl:{},webgpu:{},versions:{common:r.version},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);s=e}},get logLevel(){return s}};Object.defineProperty(o,"logLevel",{enumerable:!0})},"./node_modules/onnxruntime-common/dist/esm/env.js":(e,t,n)=>{n.r(t),n.d(t,{env:()=>r});const r=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js").env},"./node_modules/onnxruntime-common/dist/esm/index.js":(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>o.InferenceSession,TRACE:()=>i.TRACE,TRACE_FUNC_BEGIN:()=>i.TRACE_FUNC_BEGIN,TRACE_FUNC_END:()=>i.TRACE_FUNC_END,Tensor:()=>a.Tensor,env:()=>s.env,registerBackend:()=>r.registerBackend});var r=n("./node_modules/onnxruntime-common/dist/esm/backend.js"),s=n("./node_modules/onnxruntime-common/dist/esm/env.js"),o=n("./node_modules/onnxruntime-common/dist/esm/inference-session.js"),a=n("./node_modules/onnxruntime-common/dist/esm/tensor.js"),i=(n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js"),n("./node_modules/onnxruntime-common/dist/esm/tensor-factory.js"),n("./node_modules/onnxruntime-common/dist/esm/trace.js"));n("./node_modules/onnxruntime-common/dist/esm/onnx-model.js"),n("./node_modules/onnxruntime-common/dist/esm/onnx-value.js")},"./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js":(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>a});var r=n("./node_modules/onnxruntime-common/dist/esm/backend-impl.js"),s=n("./node_modules/onnxruntime-common/dist/esm/tensor.js"),o=n("./node_modules/onnxruntime-common/dist/esm/trace.js");class a{constructor(e){this.handler=e}async run(e,t,n){(0,o.TRACE_FUNC_BEGIN)();const r={};let a={};if("object"!=typeof e||null===e||e instanceof s.Tensor||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof s.Tensor)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(const e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else{let e=!1;const o=Object.getOwnPropertyNames(t);for(const n of this.outputNames)if(-1!==o.indexOf(n)){const o=t[n];(null===o||o instanceof s.Tensor)&&(e=!0,i=!1,r[n]=o)}if(e){if("object"==typeof n&&null!==n)a=n;else if(void 0!==n)throw new TypeError("'options' must be an object.")}else a=t}}else if(void 0!==t)throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const t of this.inputNames)if(void 0===e[t])throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(const e of this.outputNames)r[e]=null;const l=await this.handler.run(e,r,a),d={};for(const e in l)if(Object.hasOwnProperty.call(l,e)){const t=l[e];t instanceof s.Tensor?d[e]=t:d[e]=new s.Tensor(t.type,t.data,t.dims)}return(0,o.TRACE_FUNC_END)(),d}async release(){return this.handler.dispose()}static async create(e,t,n,s){let i;(0,o.TRACE_FUNC_BEGIN)();let l={};if("string"==typeof e){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else if(e instanceof Uint8Array){if(i=e,"object"==typeof t&&null!==t)l=t;else if(void 0!==t)throw new TypeError("'options' must be an object.")}else{if(!(e instanceof ArrayBuffer||"undefined"!=typeof SharedArrayBuffer&&e instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{const r=e;let o=0,a=e.byteLength;if("object"==typeof t&&null!==t)l=t;else if("number"==typeof t){if(o=t,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=r.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${r.byteLength}).`);if(a=e.byteLength-o,"number"==typeof n){if(a=n,!Number.isSafeInteger(a))throw new RangeError("'byteLength' must be an integer.");if(a<=0||o+a>r.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${r.byteLength-o}].`);if("object"==typeof s&&null!==s)l=s;else if(void 0!==s)throw new TypeError("'options' must be an object.")}else if(void 0!==n)throw new TypeError("'byteLength' must be a number.")}else if(void 0!==t)throw new TypeError("'options' must be an object.");i=new Uint8Array(r,o,a)}}const[d,u]=await(0,r.resolveBackendAndExecutionProviders)(l),c=await d.createInferenceSessionHandler(i,u);return(0,o.TRACE_FUNC_END)(),new a(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}},"./node_modules/onnxruntime-common/dist/esm/inference-session.js":(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>r});const r=n("./node_modules/onnxruntime-common/dist/esm/inference-session-impl.js").InferenceSession},"./node_modules/onnxruntime-common/dist/esm/onnx-model.js":(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/onnx-value.js":(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js":(e,t,n)=>{n.r(t),n.d(t,{tensorToDataURL:()=>r,tensorToImageData:()=>s});const r=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let s,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[3]):(s=e.dims[3],o=e.dims[2]);const a=void 0!==t?.format?t.format:"RGB",i=t?.norm;let l,d;void 0===i||void 0===i.mean?l=[255,255,255,255]:"number"==typeof i.mean?l=[i.mean,i.mean,i.mean,i.mean]:(l=[i.mean[0],i.mean[1],i.mean[2],0],void 0!==i.mean[3]&&(l[3]=i.mean[3])),void 0===i||void 0===i.bias?d=[0,0,0,0]:"number"==typeof i.bias?d=[i.bias,i.bias,i.bias,i.bias]:(d=[i.bias[0],i.bias[1],i.bias[2],0],void 0!==i.bias[3]&&(d[3]=i.bias[3]));const u=o*s;let c=0,p=u,m=2*u,h=-1;"RGBA"===a?(c=0,p=u,m=2*u,h=3*u):"RGB"===a?(c=0,p=u,m=2*u):"RBG"===a&&(c=0,m=u,p=2*u);for(let t=0;t<o;t++)for(let n=0;n<s;n++){const s=(e.data[c++]-d[0])*l[0],o=(e.data[p++]-d[1])*l[1],a=(e.data[m++]-d[2])*l[2],i=-1===h?255:(e.data[h++]-d[3])*l[3];r.fillStyle="rgba("+s+","+o+","+a+","+i+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},s=(e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let s,o,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[1],a=e.dims[3]):(s=e.dims[3],o=e.dims[2],a=e.dims[1]);const i=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let d,u;void 0===l||void 0===l.mean?d=[255,255,255,255]:"number"==typeof l.mean?d=[l.mean,l.mean,l.mean,l.mean]:(d=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(d[3]=l.mean[3])),void 0===l||void 0===l.bias?u=[0,0,0,0]:"number"==typeof l.bias?u=[l.bias,l.bias,l.bias,l.bias]:(u=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(u[3]=l.bias[3]));const c=o*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let m=0,h=1,f=2,_=3,g=0,w=c,b=2*c,y=-1;"RGBA"===i?(g=0,w=c,b=2*c,y=3*c):"RGB"===i?(g=0,w=c,b=2*c):"RBG"===i&&(g=0,b=c,w=2*c),r=n.createImageData(s,o);for(let t=0;t<o*s;m+=p,h+=p,f+=p,_+=p,t++)r.data[m]=(e.data[g++]-u[0])*d[0],r.data[h]=(e.data[w++]-u[1])*d[1],r.data[f]=(e.data[b++]-u[2])*d[2],r.data[_]=-1===y?255:(e.data[y++]-u[3])*d[3]}return r}},"./node_modules/onnxruntime-common/dist/esm/tensor-conversion.js":(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js":(e,t,n)=>{n.r(t),n.d(t,{bufferToTensor:()=>s,tensorFromGpuBuffer:()=>i,tensorFromImage:()=>o,tensorFromMLTensor:()=>l,tensorFromPinnedBuffer:()=>d,tensorFromTexture:()=>a});var r=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const s=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:s}=t,o=t.norm??{mean:255,bias:0};let a,i;a="number"==typeof o.mean?[o.mean,o.mean,o.mean,o.mean]:[o.mean[0],o.mean[1],o.mean[2],o.mean[3]??255],i="number"==typeof o.bias?[o.bias,o.bias,o.bias,o.bias]:[o.bias[0],o.bias[1],o.bias[2],o.bias[3]??0];const l=void 0!==t.format?t.format:"RGBA",d=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*s,c="RGBA"===d?new Float32Array(4*u):new Float32Array(3*u);let p=4,m=0,h=1,f=2,_=3,g=0,w=u,b=2*u,y=-1;"RGB"===l&&(p=3,m=0,h=1,f=2,_=-1),"RGBA"===d?y=3*u:"RBG"===d?(g=0,b=u,w=2*u):"BGR"===d&&(b=0,w=u,g=2*u);for(let t=0;t<u;t++,m+=p,f+=p,h+=p,_+=p)c[g++]=(e[m]+i[0])/a[0],c[w++]=(e[h]+i[1])/a[1],c[b++]=(e[f]+i[2])/a[2],-1!==y&&-1!==_&&(c[y++]=(e[_]+i[3])/a[3]);return"RGBA"===d?new r.Tensor("float32",c,[1,4,n,s]):new r.Tensor("float32",c,[1,3,n,s])},o=async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,o="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,a="string"==typeof e;let i,l=t??{};const d=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=d();n.width=e.width,n.height=e.height;const r=u(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,s=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,s=t.resizedWidth),void 0!==t){if(l=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");l.tensorFormat="RGBA",l.height=n,l.width=s}else l.tensorFormat="RGBA",l.height=n,l.width=s;r.drawImage(e,0,0),i=r.getImageData(0,0,s,n).data}}else{if(!r){if(o){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=d();n.width=e.width,n.height=e.height;const r=u(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),i=r.getImageData(0,0,n,t).data,l.height=t,l.width=n,s(i,l)}throw new Error("Can not access image data")}if(a)return new Promise(((t,n)=>{const r=d(),o=u(r);if(!e||!o)return n();const a=new Image;a.crossOrigin="Anonymous",a.src=e,a.onload=()=>{r.width=a.width,r.height=a.height,o.drawImage(a,0,0,r.width,r.height);const e=o.getImageData(0,0,r.width,r.height);l.height=r.height,l.width=r.width,t(s(e.data,l))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(l=t),l.format="RGBA",l.height=n,l.width=r,void 0!==t){const t=d();t.width=r,t.height=n;const s=u(t);if(null==s)throw new Error("Can not access image data");s.putImageData(e,0,0),i=s.getImageData(0,0,r,n).data}else i=e.data}}if(void 0!==i)return s(i,l);throw new Error("Input data provided is not supported - aborted tensor creation")},a=(e,t)=>{const{width:n,height:s,download:o,dispose:a}=t,i=[1,s,n,4];return new r.Tensor({location:"texture",type:"float32",texture:e,dims:i,download:o,dispose:a})},i=(e,t)=>{const{dataType:n,dims:s,download:o,dispose:a}=t;return new r.Tensor({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:s,download:o,dispose:a})},l=(e,t)=>{const{dataType:n,dims:s,download:o,dispose:a}=t;return new r.Tensor({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:s,download:o,dispose:a})},d=(e,t,n)=>new r.Tensor({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})},"./node_modules/onnxruntime-common/dist/esm/tensor-factory.js":(e,t,n)=>{n.r(t)},"./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js":(e,t,n)=>{n.r(t),n.d(t,{NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP:()=>s,NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP:()=>r,checkTypedArray:()=>a});const r=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),s=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let o=!1;const a=()=>{if(!o){o=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n=globalThis.Float16Array,a=void 0!==n&&n.from;e&&(r.set("int64",BigInt64Array),s.set(BigInt64Array,"int64")),t&&(r.set("uint64",BigUint64Array),s.set(BigUint64Array,"uint64")),a?(r.set("float16",n),s.set(n,"float16")):r.set("float16",Uint16Array)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-impl.js":(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>i});var r=n("./node_modules/onnxruntime-common/dist/esm/tensor-conversion-impl.js"),s=n("./node_modules/onnxruntime-common/dist/esm/tensor-factory-impl.js"),o=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl-type-mapping.js"),a=n("./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js");class i{constructor(e,t,n){let r,s;if((0,o.checkTypedArray)(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{const t=o.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,i;if("string"==typeof e)if(r=e,i=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const n=o.NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);a="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)a=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");a=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(i=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",a=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",a=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",a=Uint8Array.from(e);else{const t=o.NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,a=e}if(void 0===i)i=[a.length];else if(!Array.isArray(i))throw new TypeError("A tensor's dims must be a number array");s=i,this.cpuData=a,this.dataLocation="cpu"}const i=(0,a.calculateSize)(s);if(this.cpuData&&i!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(i/2)!==this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=i}static async fromImage(e,t){return(0,s.tensorFromImage)(e,t)}static fromTexture(e,t){return(0,s.tensorFromTexture)(e,t)}static fromGpuBuffer(e,t){return(0,s.tensorFromGpuBuffer)(e,t)}static fromMLTensor(e,t){return(0,s.tensorFromMLTensor)(e,t)}static fromPinnedBuffer(e,t,n){return(0,s.tensorFromPinnedBuffer)(e,t,n)}toDataURL(e){return(0,r.tensorToDataURL)(this,e)}toImageData(e){return(0,r.tensorToImageData)(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return(0,a.tensorReshape)(this,e)}}},"./node_modules/onnxruntime-common/dist/esm/tensor-utils-impl.js":(e,t,n)=>{n.r(t),n.d(t,{calculateSize:()=>s,tensorReshape:()=>o});var r=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js");const s=e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},o=(e,t)=>{switch(e.location){case"cpu":return new r.Tensor(e.type,e.data,t);case"cpu-pinned":return new r.Tensor({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new r.Tensor({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new r.Tensor({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new r.Tensor({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}},"./node_modules/onnxruntime-common/dist/esm/tensor.js":(e,t,n)=>{n.r(t),n.d(t,{Tensor:()=>r});const r=n("./node_modules/onnxruntime-common/dist/esm/tensor-impl.js").Tensor},"./node_modules/onnxruntime-common/dist/esm/trace.js":(e,t,n)=>{n.r(t),n.d(t,{TRACE:()=>s,TRACE_FUNC_BEGIN:()=>a,TRACE_FUNC_END:()=>i});var r=n("./node_modules/onnxruntime-common/dist/esm/env-impl.js");const s=(e,t)=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&console.timeStamp(`${e}::ORT::${t}`)},o=(e,t)=>{const n=(new Error).stack?.split(/\r\n|\r|\n/g)||[];let r=!1;for(let o=0;o<n.length;o++){if(r&&!n[o].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[o].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void s("CPU",r)}n[o].includes("TRACE_FUNC")&&(r=!0)}},a=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&o("BEGIN",e)},i=e=>{(void 0===r.env.trace?r.env.wasm.trace:r.env.trace)&&o("END",e)}},"./node_modules/onnxruntime-common/dist/esm/version.js":(e,t,n)=>{n.r(t),n.d(t,{version:()=>r});const r="1.21.0"},"./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96":(e,t,n)=>{n.r(t),n.d(t,{InferenceSession:()=>z,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>E,TRACE_FUNC_END:()=>I,Tensor:()=>C,default:()=>bc,env:()=>p,registerBackend:()=>a});var r,s,o,a,i,l,d,u,c,p,m,h,f,_,g,w,b,y,M,x,v,T,k,P,$,C,S,F,E,I,A,z,L=Object.defineProperty,O=Object.getOwnPropertyDescriptor,D=Object.getOwnPropertyNames,B=Object.prototype.hasOwnProperty,N=(r=function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')},typeof require<"u"?require:typeof Proxy<"u"?new Proxy(r,{get:(e,t)=>(typeof require<"u"?require:e)[t]}):r),R=(e,t)=>()=>(e&&(t=e(e=0)),t),j=(e,t)=>{for(var n in t)L(e,n,{get:t[n],enumerable:!0})},V=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let s of D(t))!B.call(e,s)&&s!==n&&L(e,s,{get:()=>t[s],enumerable:!(r=O(t,s))||r.enumerable});return e})(L({},"__esModule",{value:!0}),e),G=R((()=>{s=new Map,o=[],a=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let r=s.get(e);if(void 0===r)s.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=o.indexOf(e);-1!==t&&o.splice(t,1);for(let t=0;t<o.length;t++)if(s.get(o[t]).priority<=n)return void o.splice(t,0,e);o.push(e)}}},i=async e=>{let t=s.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},l=async e=>{let t,n=e.executionProviders||[],r=n.map((e=>"string"==typeof e?e:e.name)),s=0===r.length?o:r,a=[],l=new Set;for(let e of s){let n=await i(e);"string"==typeof n?a.push({name:e,err:n}):(t||(t=n),t===n&&l.add(e))}if(!t)throw new Error(`no available backend found. ERR: ${a.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(let{name:e,err:t}of a)r.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);let d=n.filter((e=>l.has("string"==typeof e?e:e.name)));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?d:Reflect.get(e,t)})]}})),q=R((()=>{G()})),U=R((()=>{d="1.22.0-dev.20250409-89f8206ba4"})),W=R((()=>{U(),u="warning",c={wasm:{},webgl:{},webgpu:{},versions:{common:d},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);u=e}},get logLevel(){return u}},Object.defineProperty(c,"logLevel",{enumerable:!0})})),H=R((()=>{W(),p=c})),Q=R((()=>{m=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let s,o;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[3]):(s=e.dims[3],o=e.dims[2]);let a,i,l=void 0!==t?.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?a=[255,255,255,255]:"number"==typeof d.mean?a=[d.mean,d.mean,d.mean,d.mean]:(a=[d.mean[0],d.mean[1],d.mean[2],0],void 0!==d.mean[3]&&(a[3]=d.mean[3])),void 0===d||void 0===d.bias?i=[0,0,0,0]:"number"==typeof d.bias?i=[d.bias,d.bias,d.bias,d.bias]:(i=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(i[3]=d.bias[3]));let u=o*s,c=0,p=u,m=2*u,h=-1;"RGBA"===l?(c=0,p=u,m=2*u,h=3*u):"RGB"===l?(c=0,p=u,m=2*u):"RBG"===l&&(c=0,m=u,p=2*u);for(let t=0;t<o;t++)for(let n=0;n<s;n++){let s=(e.data[c++]-i[0])*a[0],o=(e.data[p++]-i[1])*a[1],l=(e.data[m++]-i[2])*a[2],d=-1===h?255:(e.data[h++]-i[3])*a[3];r.fillStyle="rgba("+s+","+o+","+l+","+d+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},h=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let s,o,a;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(s=e.dims[2],o=e.dims[1],a=e.dims[3]):(s=e.dims[3],o=e.dims[2],a=e.dims[1]);let i,l,d=void 0!==t&&void 0!==t.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?i=[255,255,255,255]:"number"==typeof u.mean?i=[u.mean,u.mean,u.mean,u.mean]:(i=[u.mean[0],u.mean[1],u.mean[2],255],void 0!==u.mean[3]&&(i[3]=u.mean[3])),void 0===u||void 0===u.bias?l=[0,0,0,0]:"number"==typeof u.bias?l=[u.bias,u.bias,u.bias,u.bias]:(l=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(l[3]=u.bias[3]));let c=o*s;if(void 0!==t&&(void 0!==t.format&&4===a&&"RGBA"!==t.format||3===a&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,m=0,h=1,f=2,_=3,g=0,w=c,b=2*c,y=-1;"RGBA"===d?(g=0,w=c,b=2*c,y=3*c):"RGB"===d?(g=0,w=c,b=2*c):"RBG"===d&&(g=0,b=c,w=2*c),n=r.createImageData(s,o);for(let t=0;t<o*s;m+=p,h+=p,f+=p,_+=p,t++)n.data[m]=(e.data[g++]-l[0])*i[0],n.data[h]=(e.data[w++]-l[1])*i[1],n.data[f]=(e.data[b++]-l[2])*i[2],n.data[_]=-1===y?255:(e.data[y++]-l[3])*i[3]}return n}})),K=R((()=>{Y(),f=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:s,width:o}=t,a=t.norm??{mean:255,bias:0};n="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],r="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];let i=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",d=s*o,u="RGBA"===l?new Float32Array(4*d):new Float32Array(3*d),c=4,p=0,m=1,h=2,f=3,_=0,g=d,w=2*d,b=-1;"RGB"===i&&(c=3,p=0,m=1,h=2,f=-1),"RGBA"===l?b=3*d:"RBG"===l?(_=0,w=d,g=2*d):"BGR"===l&&(w=0,g=d,_=2*d);for(let t=0;t<d;t++,p+=c,h+=c,m+=c,f+=c)u[_++]=(e[p]+r[0])/n[0],u[g++]=(e[m]+r[1])/n[1],u[w++]=(e[h]+r[2])/n[2],-1!==b&&-1!==f&&(u[b++]=(e[f]+r[3])/n[3]);return new $("float32",u,"RGBA"===l?[1,4,s,o]:[1,3,s,o])},_=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,o=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,a="string"==typeof e,i=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},d=e=>typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let s=d(r);if(null==s)throw new Error("Can not access image data");{let r=e.height,o=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,o=t.resizedWidth),void 0!==t){if(i=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");i.tensorFormat="RGBA",i.height=r,i.width=o}else i.tensorFormat="RGBA",i.height=r,i.width=o;s.drawImage(e,0,0),n=s.getImageData(0,0,o,r).data}}else{if(!s){if(o){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let s=d(r);if(null!=s){let t=e.height,r=e.width;return s.drawImage(e,0,0,r,t),n=s.getImageData(0,0,r,t).data,i.height=t,i.width=r,f(n,i)}throw new Error("Can not access image data")}if(a)return new Promise(((t,n)=>{let r=l(),s=d(r);if(!e||!s)return n();let o=new Image;o.crossOrigin="Anonymous",o.src=e,o.onload=()=>{r.width=o.width,r.height=o.height,s.drawImage(o,0,0,r.width,r.height);let e=s.getImageData(0,0,r.width,r.height);i.height=r.height,i.width=r.width,t(f(e.data,i))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,s;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,s=t.resizedWidth):(r=e.height,s=e.width),void 0!==t&&(i=t),i.format="RGBA",i.height=r,i.width=s,void 0!==t){let t=l();t.width=s,t.height=r;let o=d(t);if(null==o)throw new Error("Can not access image data");o.putImageData(e,0,0),n=o.getImageData(0,0,s,r).data}else n=e.data}}if(void 0!==n)return f(n,i);throw new Error("Input data provided is not supported - aborted tensor creation")},g=(e,t)=>{let{width:n,height:r,download:s,dispose:o}=t;return new $({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:s,dispose:o})},w=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:o}=t;return new $({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:s,dispose:o})},b=(e,t)=>{let{dataType:n,dims:r,download:s,dispose:o}=t;return new $({location:"ml-tensor",type:n??"float32",mlTensor:e,dims:r,download:s,dispose:o})},y=(e,t,n)=>new $({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),X=R((()=>{M=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),x=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),v=!1,T=()=>{if(!v){v=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=globalThis.Float16Array,r=typeof n<"u"&&n.from;e&&(M.set("int64",BigInt64Array),x.set(BigInt64Array,"int64")),t&&(M.set("uint64",BigUint64Array),x.set(BigUint64Array,"uint64")),r?(M.set("float16",n),x.set(n,"float16")):M.set("float16",Uint16Array)}}})),J=R((()=>{Y(),k=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},P=(e,t)=>{switch(e.location){case"cpu":return new $(e.type,e.data,t);case"cpu-pinned":return new $({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new $({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new $({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});case"ml-tensor":return new $({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),Y=R((()=>{Q(),K(),X(),J(),$=class{constructor(e,t,n){let r,s;if(T(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,s=e.dims,e.location){case"cpu-pinned":{let t=M.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;case"ml-tensor":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint64"!==r&&"int8"!==r&&"uint8"!==r&&"bool"!==r&&"uint4"!==r&&"int4"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,a;if("string"==typeof e)if(r=e,a=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");o=t}else{let n=M.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array||"uint4"===e||"int4"===e)throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${n.name} as data.`);o="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else if(t instanceof n)o=t;else if(t instanceof Uint8ClampedArray){if("uint8"!==e)throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");o=Uint8Array.from(t)}else{if(!("float16"===e&&t instanceof Uint16Array&&n!==Uint16Array))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);o=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length)}}else if(a=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",o=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",o=Uint8Array.from(e)}}else if(e instanceof Uint8ClampedArray)r="uint8",o=Uint8Array.from(e);else{let t=x.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,o=e}if(void 0===a)a=[o.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");s=a,this.cpuData=o,this.dataLocation="cpu"}let o=k(s);if(this.cpuData&&o!==this.cpuData.length&&("uint4"!==r&&"int4"!==r||Math.ceil(o/2)!==this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=s,this.size=o}static async fromImage(e,t){return _(e,t)}static fromTexture(e,t){return g(e,t)}static fromGpuBuffer(e,t){return w(e,t)}static fromMLTensor(e,t){return b(e,t)}static fromPinnedBuffer(e,t,n){return y(e,t,n)}toDataURL(e){return m(this,e)}toImageData(e){return h(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return P(this,e)}}})),Z=R((()=>{Y(),C=$})),ee=R((()=>{W(),S=(e,t)=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||console.timeStamp(`${e}::ORT::${t}`)},F=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let s=0;s<n.length;s++){if(r&&!n[s].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[s].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void S("CPU",r)}n[s].includes("TRACE_FUNC")&&(r=!0)}},E=e=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||F("BEGIN",e)},I=e=>{(typeof c.trace>"u"?!c.wasm.trace:!c.trace)||F("END",e)}})),te=R((()=>{G(),Z(),ee(),A=class e{constructor(e){this.handler=e}async run(e,t,n){E();let r={},s={};if("object"!=typeof e||null===e||e instanceof C||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof C)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,a=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==a.indexOf(n)){let s=t[n];(null===s||s instanceof C)&&(e=!0,o=!1,r[n]=s)}if(e){if("object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else s=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(let e of this.outputNames)r[e]=null;let a=await this.handler.run(e,r,s),i={};for(let e in a)if(Object.hasOwnProperty.call(a,e)){let t=a[e];i[e]=t instanceof C?t:new C(t.type,t.data,t.dims)}return I(),i}async release(){return this.handler.dispose()}static async create(t,n,r,s){E();let o,a={};if("string"==typeof t){if(o=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(o=t,"object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,i=0,l=t.byteLength;if("object"==typeof n&&null!==n)a=n;else if("number"==typeof n){if(i=n,!Number.isSafeInteger(i))throw new RangeError("'byteOffset' must be an integer.");if(i<0||i>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-i,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||i+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-i}].`);if("object"==typeof s&&null!==s)a=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");o=new Uint8Array(e,i,l)}}let[i,d]=await l(a),u=await i.createInferenceSessionHandler(o,d);return I(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}})),ne=R((()=>{te(),z=A})),re=R((()=>{})),se=R((()=>{})),oe=R((()=>{})),ae=R((()=>{})),ie={};j(ie,{InferenceSession:()=>z,TRACE:()=>S,TRACE_FUNC_BEGIN:()=>E,TRACE_FUNC_END:()=>I,Tensor:()=>C,env:()=>p,registerBackend:()=>a});var le=R((()=>{q(),H(),ne(),Z(),re(),se(),ee(),oe(),ae()})),de=R((()=>{})),ue={};j(ue,{default:()=>me});var ce,pe,me,he=R((()=>{cc(),od(),sd(),ce="ort-wasm-proxy-worker",(pe=globalThis.self?.name===ce)&&(self.onmessage=e=>{let{type:t,in:n}=e.data;try{switch(t){case"init-wasm":je(n.wasm).then((()=>{Eu(n).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}))}),(e=>{postMessage({type:t,err:e})}));break;case"init-ep":{let{epName:e,env:r}=n;Iu(r,e).then((()=>{postMessage({type:t})}),(e=>{postMessage({type:t,err:e})}));break}case"copy-from":{let{buffer:e}=n,r=Ou(e);postMessage({type:t,out:r});break}case"create":{let{model:e,options:r}=n;Du(e,r).then((e=>{postMessage({type:t,out:e})}),(e=>{postMessage({type:t,err:e})}));break}case"release":Bu(n),postMessage({type:t});break;case"run":{let{sessionId:e,inputIndices:r,inputs:s,outputIndices:o,options:a}=n;Ru(e,r,s,o,new Array(o.length).fill(null),a).then((e=>{e.some((e=>"cpu"!==e[3]))?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:e},Vu([...s,...e]))}),(e=>{postMessage({type:t,err:e})}));break}case"end-profiling":ju(n),postMessage({type:t})}}catch(e){postMessage({type:t,err:e})}}),me=pe?null:e=>new Worker(e??ve,{type:"module",name:ce})})),fe={};j(fe,{default:()=>we});var _e,ge,we,be,ye,Me,xe,ve,Te,ke,Pe,$e,Ce,Se,Fe,Ee,Ie,Ae,ze,Le,Oe,De,Be,Ne,Re,je,Ve,Ge,qe,Ue,We,He,Qe,Ke,Xe,Je,Ye,Ze,et,tt,nt,rt,st,ot,at,it,lt,dt,ut,ct,pt,mt,ht,ft,_t,gt,wt,bt,yt,Mt,xt,vt,Tt,kt,Pt,$t,Ct,St,Ft,Et,It,At,zt,Lt,Ot,Dt,Bt,Nt,Rt,jt,Vt,Gt,qt,Ut,Wt,Ht,Qt,Kt,Xt,Jt,Yt,Zt,en,tn,nn,rn,sn,on,an,ln,dn,un,cn,pn,mn,hn,fn,_n,gn,wn,bn,yn,Mn,xn,vn,Tn,kn,Pn,$n,Cn,Sn,Fn,En,In,An,zn,Ln,On,Dn,Bn,Nn,Rn,jn,Vn,Gn,qn,Un,Wn,Hn,Qn,Kn,Xn,Jn,Yn,Zn,er,tr,nr,rr,sr,or,ar,ir,lr,dr,ur,cr,pr,mr,hr,fr,_r,gr,wr,br,yr,Mr,xr,vr,Tr,kr,Pr,$r,Cr,Sr,Fr,Er,Ir,Ar,zr,Lr,Or,Dr,Br,Nr,Rr,jr,Vr,Gr,qr,Ur,Wr,Hr,Qr,Kr,Xr,Jr,Yr,Zr,es,ts,ns,rs,ss,os,as,is,ls,ds,us,cs,ps,ms,hs,fs,_s,gs,ws,bs,ys,Ms,xs,vs,Ts,ks,Ps,$s,Cs,Ss,Fs,Es,Is,As,zs,Ls,Os,Ds,Bs,Ns,Rs,js,Vs,Gs,qs,Us,Ws,Hs,Qs,Ks,Xs,Js,Ys,Zs,eo,to,no,ro,so,oo,ao,io,lo,uo,co,po,mo,ho,fo,_o,go,wo,bo,yo,Mo,xo,vo,To,ko,Po,$o,Co,So,Fo,Eo,Io,Ao,zo,Lo,Oo,Do,Bo,No,Ro,jo,Vo,Go,qo,Uo,Wo,Ho,Qo,Ko,Xo,Jo,Yo,Zo,ea,ta,na,ra,sa,oa,aa,ia,la,da,ua,ca,pa,ma,ha,fa,_a,ga,wa,ba,ya,Ma,xa,va,Ta,ka,Pa,$a,Ca,Sa,Fa,Ea,Ia,Aa,za,La,Oa,Da,Ba,Na,Ra,ja,Va,Ga,qa,Ua,Wa,Ha,Qa,Ka,Xa,Ja,Ya,Za,ei,ti,ni,ri,si,oi,ai,ii,li,di,ui,ci,pi,mi,hi,fi,_i,gi,wi,bi,yi,Mi,xi,vi,Ti,ki,Pi,$i,Ci,Si,Fi,Ei,Ii,Ai,zi,Li,Oi,Di,Bi,Ni,Ri,ji,Vi,Gi,qi,Ui,Wi,Hi,Qi,Ki,Xi,Ji,Yi,Zi,el,tl,nl,rl,sl,ol,al,il,ll,dl,ul,cl,pl,ml,hl,fl,_l,gl,wl,bl,yl,Ml,xl,vl,Tl,kl,Pl,$l,Cl,Sl,Fl,El,Il,Al,zl,Ll,Ol,Dl,Bl,Nl,Rl,jl,Vl,Gl,ql,Ul,Wl,Hl,Ql,Kl,Xl,Jl,Yl,Zl,ed,td,nd,rd=R((()=>{_e=import.meta.url,ge=async function(e={}){var t,r,s=e,o=new Promise(((e,n)=>{t=e,r=n})),a="object"==typeof window,i=typeof WorkerGlobalScope<"u",l=i&&self.name?.startsWith("em-pthread");s.mountExternalData=(e,t)=>{e.startsWith("./")&&(e=e.substring(2)),(s.Eb||(s.Eb=new Map)).set(e,t)},s.unmountExternalData=()=>{delete s.Eb};var d=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let u=e=>async(...t)=>{try{if(s.Fb)throw Error("Session already started");let n=s.Fb={dc:t[0],errors:[]},r=await e(...t);if(s.Fb!==n)throw Error("Session mismatch");s.Jb?.flush();let o=n.errors;if(0<o.length){let e=await Promise.all(o);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return r}finally{s.Fb=null}};s.jsepInit=(e,t)=>{if("webgpu"===e){[s.Jb,s.Ub,s.Yb,s.Kb,s.Xb,s.jb,s.Zb,s.ac,s.Vb,s.Wb,s.$b]=t;let e=s.Jb;s.jsepRegisterBuffer=(t,n,r,s)=>e.registerBuffer(t,n,r,s),s.jsepGetBuffer=t=>e.getBuffer(t),s.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),s.jsepOnCreateSession=t=>{e.onCreateSession(t)},s.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},s.jsepOnRunStart=t=>e.onRunStart(t),s.bc=(t,n)=>{e.upload(t,n)}}else if("webnn"===e){let e=t[0];[s.nc,s.Nb,s.webnnEnsureTensor,s.Ob,s.webnnDownloadTensor]=t.slice(1),s.webnnReleaseTensorId=s.Nb,s.webnnUploadTensor=s.Ob,s.webnnOnRunStart=t=>e.onRunStart(t),s.webnnOnRunEnd=e.onRunEnd.bind(e),s.webnnRegisterMLContext=(t,n)=>{e.registerMLContext(t,n)},s.webnnOnReleaseSession=t=>{e.onReleaseSession(t)},s.webnnCreateMLTensorDownloader=(t,n)=>e.createMLTensorDownloader(t,n),s.webnnRegisterMLTensor=(t,n,r,s)=>e.registerMLTensor(t,n,r,s),s.webnnCreateMLContext=t=>e.createMLContext(t),s.webnnRegisterMLConstant=(t,n,r,o,a,i)=>e.registerMLConstant(t,n,r,o,a,s.Eb,i),s.webnnRegisterGraphInput=e.registerGraphInput.bind(e),s.webnnIsGraphInput=e.isGraphInput.bind(e),s.webnnCreateTemporaryTensor=e.createTemporaryTensor.bind(e),s.webnnIsInt64Supported=e.isInt64Supported.bind(e)}};let c=()=>{let e=(e,t,n)=>(...r)=>{let s=Vt,o=t?.();r=e(...r);let a=t?.();return o!==a&&(e=a,n(o),t=n=null),Vt!=s?new Promise(((e,t)=>{Qt={resolve:e,reject:t}})):r};(()=>{for(let t of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])s[t]=e(s[t],(()=>s[t]),(e=>s[t]=e))})(),void 0!==u&&(s._OrtRun=u(s._OrtRun),s._OrtRunWithBinding=u(s._OrtRunWithBinding)),c=void 0};s.asyncInit=()=>{c?.()};var p,m,h=Object.assign({},s),f=(e,t)=>{throw t},_="";(a||i)&&(i?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),_e&&(_=_e),_=_.startsWith("blob:")?"":_.slice(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),i&&(m=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),p=async e=>{if(O(e))return new Promise(((t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n(r.status)},r.onerror=n,r.send(null)}));var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw Error(t.status+" : "+t.url)});var g=console.log.bind(console),w=console.error.bind(console),b=g,y=w;Object.assign(s,h),h=null;var M,x,v,T,k,P,$,C,S,F,E,I,A,z=s.wasmBinary,L=!1,O=e=>e.startsWith("file://");function D(){return M.buffer!=T.buffer&&H(),T}function B(){return M.buffer!=T.buffer&&H(),k}function N(){return M.buffer!=T.buffer&&H(),P}function R(){return M.buffer!=T.buffer&&H(),$}function j(){return M.buffer!=T.buffer&&H(),C}function V(){return M.buffer!=T.buffer&&H(),S}function G(){return M.buffer!=T.buffer&&H(),F}function q(){return M.buffer!=T.buffer&&H(),A}if(l){let e=function(t){try{var n=t.data,r=n.Bb;if("load"===r){let t=[];self.onmessage=e=>t.push(e),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let n of t)e(n);self.onmessage=e};for(let e of n.Rb)s[e]&&!s[e].proxy||(s[e]=(...t)=>{postMessage({Bb:"callHandler",Qb:e,args:t})},"print"==e&&(b=s[e]),"printErr"==e&&(y=s[e]));M=n.kc,H(),U(n.lc)}else if("run"===r){xe(n.Ab),_r(n.Ab,0,0,1,0,0),be(),Ct(n.Ab),W||(pr(),W=!0);try{ve(n.fc,n.Hb)}catch(e){if("unwind"!=e)throw e}}else"setimmediate"!==n.target&&("checkMailbox"===r?W&&St():r&&(y(`worker: received unknown command ${r}`),y(n)))}catch(e){throw gr(),e}};var U,W=!1;y=function(...e){e=e.join(" "),console.error(e)},self.alert=function(...e){postMessage({Bb:"alert",text:e.join(" "),ic:mr()})},self.onunhandledrejection=e=>{throw e.reason||e},self.onmessage=e}function H(){var e=M.buffer;s.HEAP8=T=new Int8Array(e),s.HEAP16=P=new Int16Array(e),s.HEAPU8=k=new Uint8Array(e),s.HEAPU16=$=new Uint16Array(e),s.HEAP32=C=new Int32Array(e),s.HEAPU32=S=new Uint32Array(e),s.HEAPF32=F=new Float32Array(e),s.HEAPF64=A=new Float64Array(e),s.HEAP64=E=new BigInt64Array(e),s.HEAPU64=I=new BigUint64Array(e)}function Q(){l?startWorker(s):dr.Ca()}l||(M=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),H());var K,X=0,J=null;function Y(){if(0==--X&&J){var e=J;J=null,e()}}function Z(e){throw y(e="Aborted("+e+")"),L=!0,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}function ee(){return{a:{L:re,Aa:ne,b:ke,$:$e,A:Ee,pa:Ie,X:Le,Z:Oe,qa:De,na:Be,ga:Ne,ma:Re,J:je,Y:Ve,V:Ge,oa:qe,W:Ue,va:Qe,E:tt,Q:rt,O:ct,D:mt,u:ht,r:ft,P:_t,z:Tt,R:kt,ja:Pt,T:Ft,aa:It,M:At,F:zt,ia:Ct,sa:Lt,t:Bt,Ba:Nt,w:Jt,o:Zt,l:nn,c:at,n:sn,j:dn,v:un,p:cn,f:pn,s:mn,m:hn,e:fn,k:_n,i:gn,g:wn,d:bn,da:yn,ea:Tn,fa:kn,ba:Pn,ca:$n,N:Fn,xa:En,ua:zn,h:Dn,C:Bn,G:Nn,ta:In,x:Rn,ra:jn,U:Vn,q:Sn,y:Gn,K:qn,S:Un,za:Kn,ya:Xn,ka:er,la:tr,_:pe,B:nr,I:rr,ha:sr,H:ar,a:M,wa:ue}}}var te={829644:(e,t,n,r,o)=>{if(void 0===s||!s.Eb)return 1;if((e=Fe(Number(e>>>0))).startsWith("./")&&(e=e.substring(2)),!(e=s.Eb.get(e)))return 2;if(t=Number(t>>>0),n=Number(n>>>0),r=Number(r>>>0),t+n>e.byteLength)return 3;try{let a=e.subarray(t,t+n);switch(o){case 0:B().set(a,r>>>0);break;case 1:s.mc?s.mc(r,a):s.bc(r,a);break;default:return 4}return 0}catch{return 4}},830468:(e,t,n)=>{s.Ob(e,B().subarray(t>>>0,t+n>>>0))},830532:()=>s.nc(),830574:e=>{s.Nb(e)},830611:()=>{s.Vb()},830642:()=>{s.Wb()},830671:()=>{s.$b()},830696:e=>s.Ub(e),830729:e=>s.Yb(e),830761:(e,t,n)=>{s.Kb(Number(e),Number(t),Number(n),!0)},830824:(e,t,n)=>{s.Kb(Number(e),Number(t),Number(n))},830881:()=>typeof wasmOffsetConverter<"u",830938:e=>{s.jb("Abs",e,void 0)},830989:e=>{s.jb("Neg",e,void 0)},831040:e=>{s.jb("Floor",e,void 0)},831093:e=>{s.jb("Ceil",e,void 0)},831145:e=>{s.jb("Reciprocal",e,void 0)},831203:e=>{s.jb("Sqrt",e,void 0)},831255:e=>{s.jb("Exp",e,void 0)},831306:e=>{s.jb("Erf",e,void 0)},831357:e=>{s.jb("Sigmoid",e,void 0)},831412:(e,t,n)=>{s.jb("HardSigmoid",e,{alpha:t,beta:n})},831491:e=>{s.jb("Log",e,void 0)},831542:e=>{s.jb("Sin",e,void 0)},831593:e=>{s.jb("Cos",e,void 0)},831644:e=>{s.jb("Tan",e,void 0)},831695:e=>{s.jb("Asin",e,void 0)},831747:e=>{s.jb("Acos",e,void 0)},831799:e=>{s.jb("Atan",e,void 0)},831851:e=>{s.jb("Sinh",e,void 0)},831903:e=>{s.jb("Cosh",e,void 0)},831955:e=>{s.jb("Asinh",e,void 0)},832008:e=>{s.jb("Acosh",e,void 0)},832061:e=>{s.jb("Atanh",e,void 0)},832114:e=>{s.jb("Tanh",e,void 0)},832166:e=>{s.jb("Not",e,void 0)},832217:(e,t,n)=>{s.jb("Clip",e,{min:t,max:n})},832286:e=>{s.jb("Clip",e,void 0)},832338:(e,t)=>{s.jb("Elu",e,{alpha:t})},832396:e=>{s.jb("Gelu",e,void 0)},832448:e=>{s.jb("Relu",e,void 0)},832500:(e,t)=>{s.jb("LeakyRelu",e,{alpha:t})},832564:(e,t)=>{s.jb("ThresholdedRelu",e,{alpha:t})},832634:(e,t)=>{s.jb("Cast",e,{to:t})},832692:e=>{s.jb("Add",e,void 0)},832743:e=>{s.jb("Sub",e,void 0)},832794:e=>{s.jb("Mul",e,void 0)},832845:e=>{s.jb("Div",e,void 0)},832896:e=>{s.jb("Pow",e,void 0)},832947:e=>{s.jb("Equal",e,void 0)},833e3:e=>{s.jb("Greater",e,void 0)},833055:e=>{s.jb("GreaterOrEqual",e,void 0)},833117:e=>{s.jb("Less",e,void 0)},833169:e=>{s.jb("LessOrEqual",e,void 0)},833228:(e,t,n,r,o)=>{s.jb("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},833403:(e,t,n,r,o)=>{s.jb("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},833577:(e,t,n,r,o)=>{s.jb("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},833751:(e,t,n,r,o)=>{s.jb("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},833926:(e,t,n,r,o)=>{s.jb("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834100:(e,t,n,r,o)=>{s.jb("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834273:(e,t,n,r,o)=>{s.jb("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834446:(e,t,n,r,o)=>{s.jb("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834623:(e,t,n,r,o)=>{s.jb("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834803:(e,t,n,r,o)=>{s.jb("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},834983:e=>{s.jb("Where",e,void 0)},835036:(e,t,n)=>{s.jb("Transpose",e,{perm:t?Array.from(j().subarray(Number(t)>>>0,Number(n)>>>0)):[]})},835160:(e,t,n,r)=>{s.jb("DepthToSpace",e,{blocksize:t,mode:Fe(n),format:r?"NHWC":"NCHW"})},835293:(e,t,n,r)=>{s.jb("DepthToSpace",e,{blocksize:t,mode:Fe(n),format:r?"NHWC":"NCHW"})},835426:(e,t,n,r,o,a,i,l,d,u,c,p,m,h,f)=>{s.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[o],pads:[a,i],strides:[l],wIsConst:()=>!!D()[u>>>0],outputPadding:c?Array.from(j().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:m?Array.from(j().subarray(Number(m)>>>0,Number(h)>>>0)):[],activation:Fe(f)})},835859:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(j().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),pads:Array.from(j().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(j().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),wIsConst:()=>!!D()[d>>>0],outputPadding:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],outputShape:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[],activation:Fe(h)})},836520:(e,t,n,r,o,a,i,l,d,u,c,p,m,h,f)=>{s.jb("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[o],pads:[a,i],strides:[l],wIsConst:()=>!!D()[u>>>0],outputPadding:c?Array.from(j().subarray(Number(c)>>>0,Number(p)>>>0)):[],outputShape:m?Array.from(j().subarray(Number(m)>>>0,Number(h)>>>0)):[],activation:Fe(f)})},836953:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(j().subarray(Number(n)>>>0,2+(Number(n)>>>0)>>>0)),group:r,kernelShape:Array.from(j().subarray(Number(o)>>>0,2+(Number(o)>>>0)>>>0)),pads:Array.from(j().subarray(Number(a)>>>0,4+(Number(a)>>>0)>>>0)),strides:Array.from(j().subarray(Number(i)>>>0,2+(Number(i)>>>0)>>>0)),wIsConst:()=>!!D()[d>>>0],outputPadding:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],outputShape:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[],activation:Fe(h)})},837614:(e,t)=>{s.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},837705:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("AveragePool",e,{format:h?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(d)>>>0)):[],pads:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[]})},838184:(e,t)=>{s.jb("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},838275:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("AveragePool",e,{format:h?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(d)>>>0)):[],pads:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[]})},838754:(e,t)=>{s.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},838841:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("MaxPool",e,{format:h?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(d)>>>0)):[],pads:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[]})},839316:(e,t)=>{s.jb("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},839403:(e,t,n,r,o,a,i,l,d,u,c,p,m,h)=>{s.jb("MaxPool",e,{format:h?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:o,dilations:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[],kernel_shape:l?Array.from(j().subarray(Number(l)>>>0,Number(d)>>>0)):[],pads:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],strides:p?Array.from(j().subarray(Number(p)>>>0,Number(m)>>>0)):[]})},839878:(e,t,n,r,o)=>{s.jb("Gemm",e,{alpha:t,beta:n,transA:r,transB:o})},839982:e=>{s.jb("MatMul",e,void 0)},840036:(e,t,n,r)=>{s.jb("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840144:(e,t,n,r)=>{s.jb("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},840252:(e,t)=>{s.jb("Softmax",e,{axis:t})},840315:(e,t)=>{s.jb("Concat",e,{axis:t})},840375:(e,t,n,r,o)=>{s.jb("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},840531:e=>{s.jb("Expand",e,void 0)},840585:(e,t)=>{s.jb("Gather",e,{axis:Number(t)})},840656:(e,t)=>{s.jb("GatherElements",e,{axis:Number(t)})},840735:(e,t)=>{s.jb("GatherND",e,{batch_dims:Number(t)})},840814:(e,t,n,r,o,a,i,l,d,u,c)=>{s.jb("Resize",e,{antialias:t,axes:n?Array.from(j().subarray(Number(n)>>>0,Number(r)>>>0)):[],coordinateTransformMode:Fe(o),cubicCoeffA:a,excludeOutside:i,extrapolationValue:l,keepAspectRatioPolicy:Fe(d),mode:Fe(u),nearestMode:Fe(c)})},841176:(e,t,n,r,o,a,i)=>{s.jb("Slice",e,{starts:t?Array.from(j().subarray(Number(t)>>>0,Number(n)>>>0)):[],ends:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[],axes:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[]})},841440:e=>{s.jb("Tile",e,void 0)},841492:(e,t,n)=>{s.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841606:(e,t,n)=>{s.jb("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},841720:e=>{s.jb("Range",e,void 0)},841773:(e,t)=>{s.jb("Einsum",e,{equation:Fe(t)})},841854:(e,t,n,r,o)=>{s.jb("Pad",e,{mode:t,value:n,pads:r?Array.from(j().subarray(Number(r)>>>0,Number(o)>>>0)):[]})},841997:(e,t,n,r,o,a)=>{s.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!o,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842166:(e,t,n,r,o,a)=>{s.jb("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!o,trainingMode:!!r,format:a?"NHWC":"NCHW"})},842335:(e,t,n)=>{s.jb("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},842432:(e,t,n)=>{s.jb("DequantizeLinear",e,{axis:t,blockSize:n})},842522:(e,t,n,r,o)=>{s.jb("GridSample",e,{align_corners:t,mode:Fe(n),padding_mode:Fe(r),format:o?"NHWC":"NCHW"})},842692:(e,t,n,r,o)=>{s.jb("GridSample",e,{align_corners:t,mode:Fe(n),padding_mode:Fe(r),format:o?"NHWC":"NCHW"})},842862:(e,t)=>{s.jb("ScatterND",e,{reduction:Fe(t)})},842947:(e,t,n,r,o,a,i,l,d)=>{s.jb("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:o,doRotary:a,qkvHiddenSizes:i?Array.from(j().subarray(Number(l)>>>0,Number(l)+i>>>0)):[],pastPresentShareBuffer:!!d})},843219:e=>{s.jb("BiasAdd",e,void 0)},843274:e=>{s.jb("BiasSplitGelu",e,void 0)},843335:e=>{s.jb("FastGelu",e,void 0)},843391:(e,t,n,r,o,a,i,l,d,u,c,p,m,h,f,_)=>{s.jb("Conv",e,{format:p?"NHWC":"NCHW",auto_pad:t,dilations:n?Array.from(j().subarray(Number(n)>>>0,Number(r)>>>0)):[],group:o,kernel_shape:a?Array.from(j().subarray(Number(a)>>>0,Number(i)>>>0)):[],pads:l?Array.from(j().subarray(Number(l)>>>0,Number(d)>>>0)):[],strides:u?Array.from(j().subarray(Number(u)>>>0,Number(c)>>>0)):[],w_is_const:()=>!!D()[Number(m)>>>0],activation:Fe(h),activation_params:f?Array.from(G().subarray(Number(f)>>>0,Number(_)>>>0)):[]})},843975:e=>{s.jb("Gelu",e,void 0)},844027:(e,t,n,r,o,a,i,l,d)=>{s.jb("GroupQueryAttention",e,{numHeads:t,kvNumHeads:n,scale:r,softcap:o,doRotary:a,rotaryInterleaved:i,smoothSoftmax:l,localWindowSize:d})},844244:(e,t,n,r)=>{s.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844355:(e,t,n,r)=>{s.jb("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},844466:(e,t,n,r,o,a)=>{s.jb("MatMulNBits",e,{k:t,n,accuracyLevel:r,bits:o,blockSize:a})},844593:(e,t,n,r,o,a)=>{s.jb("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:o,doRotary:a})},844752:(e,t)=>{s.jb("QuickGelu",e,{alpha:t})},844816:(e,t,n,r,o)=>{s.jb("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:o})},844955:(e,t,n)=>{s.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845057:(e,t,n)=>{s.jb("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},845159:(e,t,n,r)=>{s.jb("GatherBlockQuantized",e,{gatherAxis:t,quantizeAxis:n,blockSize:r})},845280:e=>{s.Zb(e)},845314:(e,t)=>s.ac(Number(e),Number(t),s.Fb.dc,s.Fb.errors)};function ne(e,t,n){return Xt((async()=>{await s.Xb(Number(e),Number(t),Number(n))}))}function re(){return typeof wasmOffsetConverter<"u"}class se{name="ExitStatus";constructor(e){this.message=`Program terminated with exit(${e})`,this.status=e}}var oe=e=>{e.terminate(),e.onmessage=()=>{}},ae=[],ie=e=>{0==me.length&&(Me(),ye(me[0]));var t=me.pop();if(!t)return 6;he.push(t),ge[e.Ab]=t,t.Ab=e.Ab;var n={Bb:"run",fc:e.ec,Hb:e.Hb,Ab:e.Ab};return t.postMessage(n,e.Mb),0},le=0,de=(e,t,...n)=>{for(var r=2*n.length,s=Pr(),o=kr(8*r),a=o>>>3,i=0;i<n.length;i++){var l=n[i];"bigint"==typeof l?(E[a+2*i]=1n,E[a+2*i+1]=l):(E[a+2*i]=0n,q()[a+2*i+1>>>0]=l)}return e=wr(e,0,r,o,t),Tr(s),e};function ue(e){if(l)return de(0,1,e);if(v=e,!(0<le)){for(var t of he)oe(t);for(t of me)oe(t);me=[],he=[],ge={},L=!0}f(0,new se(e))}function ce(e){if(l)return de(1,0,e);pe(e)}var pe=e=>{if(v=e,l)throw ce(e),"unwind";ue(e)},me=[],he=[],fe=[],ge={},we=e=>{var t=e.Ab;delete ge[t],me.push(e),he.splice(he.indexOf(e),1),e.Ab=0,br(t)};function be(){fe.forEach((e=>e()))}var ye=e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).Bb;if(n.Gb&&n.Gb!=mr()){var o=ge[n.Gb];o?o.postMessage(n,n.Mb):y(`Internal error! Worker sent a message "${r}" to target pthread ${n.Gb}, but that thread no longer exists!`)}else"checkMailbox"===r?St():"spawnThread"===r?ie(n):"cleanupThread"===r?we(ge[n.hc]):"loaded"===r?(e.loaded=!0,t(e)):"alert"===r?alert(`Thread ${n.ic}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?s[n.Qb](...n.args):r&&y(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw y(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e};var n,r=[];for(n of[])s.propertyIsEnumerable(n)&&r.push(n);e.postMessage({Bb:"load",Rb:r,kc:M,lc:x})}));function Me(){var e=new Worker((()=>{let e=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new e(n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),n.b):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});me.push(e)}var xe=e=>{H();var t=V()[e+52>>>2>>>0];e=V()[e+56>>>2>>>0],vr(t,t-e),Tr(t)},ve=(e,t)=>{le=0,e=$r(e,t),0<le?v=e:yr(e)};class Te{constructor(e){this.Ib=e-24}}function ke(e,t,n){var r=new Te(e>>>=0);throw t>>>=0,n>>>=0,V()[r.Ib+16>>>2>>>0]=0,V()[r.Ib+4>>>2>>>0]=t,V()[r.Ib+8>>>2>>>0]=n,e}function Pe(e,t,n,r){return l?de(2,1,e,t,n,r):$e(e,t,n,r)}function $e(e,t,n,r){if(e>>>=0,n>>>=0,r>>>=0,void 0===d)return 6;var s=[];return l&&0===s.length?Pe(e,t>>>=0,n,r):(e={ec:n,Ab:e,Hb:r,Mb:s},l?(e.Bb="spawnThread",postMessage(e,s),0):ie(e))}var Ce=typeof TextDecoder<"u"?new TextDecoder:void 0,Se=(e,t=0,n=NaN)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Ce)return Ce.decode(e.buffer instanceof ArrayBuffer?e.subarray(t,n):e.slice(t,n));for(r="";t<n;){var s=e[t++];if(128&s){var o=63&e[t++];if(192==(224&s))r+=String.fromCharCode((31&s)<<6|o);else{var a=63&e[t++];65536>(s=224==(240&s)?(15&s)<<12|o<<6|a:(7&s)<<18|o<<12|a<<6|63&e[t++])?r+=String.fromCharCode(s):(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s))}}else r+=String.fromCharCode(s)}return r},Fe=(e,t)=>(e>>>=0)?Se(B(),e,t):"";function Ee(e,t,n){return l?de(3,1,e,t,n):0}function Ie(e,t){if(l)return de(4,1,e,t)}var Ae=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},ze=(e,t,n)=>{var r=B();if(t>>>=0,0<n){var s=t;n=t+n-1;for(var o=0;o<e.length;++o){var a=e.charCodeAt(o);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++o)),127>=a){if(t>=n)break;r[t++>>>0]=a}else{if(2047>=a){if(t+1>=n)break;r[t++>>>0]=192|a>>6}else{if(65535>=a){if(t+2>=n)break;r[t++>>>0]=224|a>>12}else{if(t+3>=n)break;r[t++>>>0]=240|a>>18,r[t++>>>0]=128|a>>12&63}r[t++>>>0]=128|a>>6&63}r[t++>>>0]=128|63&a}}r[t>>>0]=0,e=t-s}else e=0;return e};function Le(e,t){if(l)return de(5,1,e,t)}function Oe(e,t,n){if(l)return de(6,1,e,t,n)}function De(e,t,n){return l?de(7,1,e,t,n):0}function Be(e,t){if(l)return de(8,1,e,t)}function Ne(e,t,n){if(l)return de(9,1,e,t,n)}function Re(e,t,n,r){if(l)return de(10,1,e,t,n,r)}function je(e,t,n,r){if(l)return de(11,1,e,t,n,r)}function Ve(e,t,n,r){if(l)return de(12,1,e,t,n,r)}function Ge(e){if(l)return de(13,1,e)}function qe(e,t){if(l)return de(14,1,e,t)}function Ue(e,t,n){if(l)return de(15,1,e,t,n)}var We,He,Qe=()=>Z(""),Ke=e=>{for(var t="";B()[e>>>0];)t+=We[B()[e++>>>0]];return t},Xe={},Je={},Ye={};function Ze(e,t,n={}){return function(e,t,n={}){var r=t.name;if(!e)throw new He(`type "${r}" must have a positive integer typeid pointer`);if(Je.hasOwnProperty(e)){if(n.Sb)return;throw new He(`Cannot register type '${r}' twice`)}Je[e]=t,delete Ye[e],Xe.hasOwnProperty(e)&&(t=Xe[e],delete Xe[e],t.forEach((e=>e())))}(e,t,n)}var et=(e,t,n)=>{switch(t){case 1:return n?e=>D()[e>>>0]:e=>B()[e>>>0];case 2:return n?e=>N()[e>>>1>>>0]:e=>R()[e>>>1>>>0];case 4:return n?e=>j()[e>>>2>>>0]:e=>V()[e>>>2>>>0];case 8:return n?e=>E[e>>>3]:e=>I[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}};function tt(e,t,n){n>>>=0,Ze(e>>>=0,{name:t=Ke(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},Cb:nt,readValueFromPointer:et(t,n,-1==t.indexOf("u")),Db:null})}var nt=8;function rt(e,t,n,r){Ze(e>>>=0,{name:t=Ke(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},Cb:nt,readValueFromPointer:function(e){return this.fromWireType(B()[e>>>0])},Db:null})}var st=[],ot=[];function at(e){9<(e>>>=0)&&0==--ot[e+1]&&(ot[e]=void 0,st.push(e))}var it=e=>{if(!e)throw new He("Cannot use deleted val. handle = "+e);return ot[e]},lt=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=st.pop()||ot.length;return ot[t]=e,ot[t+1]=1,t}};function dt(e){return this.fromWireType(V()[e>>>2>>>0])}var ut={name:"emscripten::val",fromWireType:e=>{var t=it(e);return at(e),t},toWireType:(e,t)=>lt(t),Cb:nt,readValueFromPointer:dt,Db:null};function ct(e){return Ze(e>>>0,ut)}var pt=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(G()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(q()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}};function mt(e,t,n){n>>>=0,Ze(e>>>=0,{name:t=Ke(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,Cb:nt,readValueFromPointer:pt(t,n),Db:null})}function ht(e,t,n,r,s){if(e>>>=0,n>>>=0,t=Ke(t>>>0),-1===s&&(s=4294967295),s=e=>e,0===r){var o=32-8*n;s=e=>e<<o>>>o}var a=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};Ze(e,{name:t,fromWireType:s,toWireType:a,Cb:nt,readValueFromPointer:et(t,n,0!==r),Db:null})}function ft(e,t,n){function r(e){var t=V()[e>>>2>>>0];return e=V()[e+4>>>2>>>0],new s(D().buffer,e,t)}var s=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];Ze(e>>>=0,{name:n=Ke(n>>>0),fromWireType:r,Cb:nt,readValueFromPointer:r},{Sb:!0})}function _t(e,t){Ze(e>>>=0,{name:t=Ke(t>>>0),fromWireType:function(e){for(var t,n=V()[e>>>2>>>0],r=e+4,s=r,o=0;o<=n;++o){var a=r+o;o!=n&&0!=B()[a>>>0]||(s=Fe(s,a-s),void 0===t?t=s:(t+="\0",t+=s),s=a+1)}return hr(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var n="string"==typeof t;if(!(n||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new He("Cannot pass non-string to std::string");var r=n?Ae(t):t.length,s=fr(4+r+1),o=s+4;if(V()[s>>>2>>>0]=r,n)ze(t,o,r+1);else if(n)for(n=0;n<r;++n){var a=t.charCodeAt(n);if(255<a)throw hr(s),new He("String has UTF-16 code units that do not fit in 8 bits");B()[o+n>>>0]=a}else for(n=0;n<r;++n)B()[o+n>>>0]=t[n];return null!==e&&e.push(hr,s),s},Cb:nt,readValueFromPointer:dt,Db(e){hr(e)}})}var gt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,wt=(e,t)=>{for(var n=e>>1,r=n+t/2;!(n>=r)&&R()[n>>>0];)++n;if(32<(n<<=1)-e&&gt)return gt.decode(B().slice(e,n));for(n="",r=0;!(r>=t/2);++r){var s=N()[e+2*r>>>1>>>0];if(0==s)break;n+=String.fromCharCode(s)}return n},bt=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var s=0;s<n;++s){var o=e.charCodeAt(s);N()[t>>>1>>>0]=o,t+=2}return N()[t>>>1>>>0]=0,t-r},yt=e=>2*e.length,Mt=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var s=j()[e+4*n>>>2>>>0];if(0==s)break;++n,65536<=s?(s-=65536,r+=String.fromCharCode(55296|s>>10,56320|1023&s)):r+=String.fromCharCode(s)}return r},xt=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var s=0;s<e.length;++s){var o=e.charCodeAt(s);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++s)),j()[t>>>2>>>0]=o,(t+=4)+4>n)break}return j()[t>>>2>>>0]=0,t-r},vt=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t};function Tt(e,t,n){if(e>>>=0,t>>>=0,n=Ke(n>>>=0),2===t)var r=wt,s=bt,o=yt,a=e=>R()[e>>>1>>>0];else 4===t&&(r=Mt,s=xt,o=vt,a=e=>V()[e>>>2>>>0]);Ze(e,{name:n,fromWireType:e=>{for(var n,s=V()[e>>>2>>>0],o=e+4,i=0;i<=s;++i){var l=e+4+i*t;i!=s&&0!=a(l)||(o=r(o,l-o),void 0===n?n=o:(n+="\0",n+=o),o=l+t)}return hr(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new He(`Cannot pass non-string to C++ string type ${n}`);var a=o(r),i=fr(4+a+t);return V()[i>>>2>>>0]=a/t,s(r,i+4,a+t),null!==e&&e.push(hr,i),i},Cb:nt,readValueFromPointer:dt,Db(e){hr(e)}})}function kt(e,t){Ze(e>>>=0,{Tb:!0,name:t=Ke(t>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function Pt(e){_r(e>>>0,!i,1,!a,131072,!1),be()}var $t=e=>{if(!L)try{if(e(),!(0<le))try{l?yr(v):pe(v)}catch(e){e instanceof se||"unwind"==e||f(0,e)}}catch(e){e instanceof se||"unwind"==e||f(0,e)}};function Ct(e){e>>>=0,"function"==typeof Atomics.jc&&(Atomics.jc(j(),e>>>2,e).value.then(St),e+=128,Atomics.store(j(),e>>>2,1))}var St=()=>{var e=mr();e&&(Ct(e),$t(xr))};function Ft(e,t){(e>>>=0)==t>>>0?setTimeout(St):l?postMessage({Gb:e,Bb:"checkMailbox"}):(e=ge[e])&&e.postMessage({Bb:"checkMailbox"})}var Et=[];function It(e,t,n,r,s){for(t>>>=0,r/=2,Et.length=r,n=s>>>0>>>3,s=0;s<r;s++)Et[s]=E[n+2*s]?E[n+2*s+1]:q()[n+2*s+1>>>0];return(t?te[t]:ur[e])(...Et)}var At=()=>{le=0};function zt(e){e>>>=0,l?postMessage({Bb:"cleanupThread",hc:e}):we(ge[e])}function Lt(e){}var Ot=(e,t)=>{var n=Je[e];if(void 0===n)throw e=cr(e),n=Ke(e),hr(e),new He(`${t} has unknown type ${n}`);return n},Dt=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(V()[t>>>2>>>0]=lt(r)),e};function Bt(e,t,n){return t>>>=0,n>>>=0,e=it(e>>>0),t=Ot(t,"emval::as"),Dt(t,n,e)}function Nt(e,t){return t>>>=0,e=it(e>>>0),(t=Ot(t,"emval::as")).toWireType(null,e)}var Rt=e=>{try{e()}catch(e){Z(e)}},jt=0,Vt=null,Gt=0,qt=[],Ut={},Wt={},Ht=0,Qt=null,Kt=[];function Xt(e){return function(){if(!L){if(0===jt){var t=!1,n=!1;(t=>{e().then(t)})(((e=0)=>{if(!L&&(Gt=e,t=!0,n)){jt=2,Rt((()=>Fr(Vt))),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),e=!1;try{var r=(a=j()[Vt+8>>>2>>>0],a=dr[Wt[a]],--le,a())}catch(a){r=a,e=!0}var s=!1;if(!Vt){var o=Qt;o&&(Qt=null,(e?o.reject:o.resolve)(r),s=!0)}if(e&&!s)throw r}var a})),n=!0,t||(jt=1,Vt=function(){var e=fr(65548),t=e+12;V()[e>>>2>>>0]=t,V()[e+4>>>2>>>0]=t+65536,t=qt[0];var n=Ut[t];return void 0===n&&(n=Ht++,Ut[t]=n,Wt[n]=t),t=n,j()[e+8>>>2>>>0]=t,e}(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),Rt((()=>Cr(Vt))))}else 2===jt?(jt=0,Rt(Er),hr(Vt),Vt=null,Kt.forEach($t)):Z(`invalid state: ${jt}`);return Gt}}()}function Jt(e){return e>>>=0,Xt((async()=>{var t=await it(e);return lt(t)}))}var Yt=[];function Zt(e,t,n,r){return n>>>=0,r>>>=0,(e=Yt[e>>>0])(null,t=it(t>>>0),n,r)}var en={},tn=e=>{var t=en[e];return void 0===t?Ke(e):t};function nn(e,t,n,r,s){return n>>>=0,r>>>=0,s>>>=0,(e=Yt[e>>>0])(t=it(t>>>0),t[n=tn(n)],r,s)}var rn=()=>"object"==typeof globalThis?globalThis:Function("return this")();function sn(e){return 0==(e>>>=0)?lt(rn()):(e=tn(e),lt(rn()[e]))}var on=e=>{var t=Yt.length;return Yt.push(e),t},an=(e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Ot(V()[t+4*r>>>2>>>0],"parameter "+r);return n},ln=(e,t)=>Object.defineProperty(t,"name",{value:e});function dn(e,t,n){var r=(t=an(e,t>>>0)).shift();e--;var s="return function (obj, func, destructorsRef, args) {\n",o=0,a=[];0===n&&a.push("obj");for(var i=["retType"],l=[r],d=0;d<e;++d)a.push("arg"+d),i.push("argType"+d),l.push(t[d]),s+=`  var arg${d} = argType${d}.readValueFromPointer(args${o?"+"+o:""});\n`,o+=t[d].Cb;return s+=`  var rv = ${1===n?"new func":"func.call"}(${a.join(", ")});\n`,r.Tb||(i.push("emval_returnValue"),l.push(Dt),s+="  return emval_returnValue(retType, destructorsRef, rv);\n"),i.push(s+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=ln(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(i)(...l),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,on(ln(n,e))}function un(e){return e=tn(e>>>0),lt(s[e])}function cn(e,t){return t>>>=0,e=it(e>>>0),t=it(t),lt(e[t])}function pn(e){9<(e>>>=0)&&(ot[e+1]+=1)}function mn(){return lt([])}function hn(e){e=it(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return lt(t)}function fn(e){return lt(tn(e>>>0))}function _n(){return lt({})}function gn(e){for(var t=it(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}at(e)}function wn(e,t,n){t>>>=0,n>>>=0,e=it(e>>>0),t=it(t),n=it(n),e[t]=n}function bn(e,t){return t>>>=0,e=(e=Ot(e>>>0,"_emval_take_value")).readValueFromPointer(t),lt(e)}function yn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),j()[t>>>2>>>0]=e.getUTCSeconds(),j()[t+4>>>2>>>0]=e.getUTCMinutes(),j()[t+8>>>2>>>0]=e.getUTCHours(),j()[t+12>>>2>>>0]=e.getUTCDate(),j()[t+16>>>2>>>0]=e.getUTCMonth(),j()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,j()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,j()[t+28>>>2>>>0]=e}var Mn=e=>e%4==0&&(e%100!=0||e%400==0),xn=[0,31,60,91,121,152,182,213,244,274,305,335],vn=[0,31,59,90,120,151,181,212,243,273,304,334];function Tn(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),j()[t>>>2>>>0]=e.getSeconds(),j()[t+4>>>2>>>0]=e.getMinutes(),j()[t+8>>>2>>>0]=e.getHours(),j()[t+12>>>2>>>0]=e.getDate(),j()[t+16>>>2>>>0]=e.getMonth(),j()[t+20>>>2>>>0]=e.getFullYear()-1900,j()[t+24>>>2>>>0]=e.getDay();var n=(Mn(e.getFullYear())?xn:vn)[e.getMonth()]+e.getDate()-1|0;j()[t+28>>>2>>>0]=n,j()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),j()[t+32>>>2>>>0]=e}function kn(e){e>>>=0;var t=new Date(j()[e+20>>>2>>>0]+1900,j()[e+16>>>2>>>0],j()[e+12>>>2>>>0],j()[e+8>>>2>>>0],j()[e+4>>>2>>>0],j()[e>>>2>>>0],0),n=j()[e+32>>>2>>>0],r=t.getTimezoneOffset(),s=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=new Date(t.getFullYear(),0,1).getTimezoneOffset(),a=Math.min(o,s);return 0>n?j()[e+32>>>2>>>0]=+(s!=o&&a==r):0<n!=(a==r)&&(s=Math.max(o,s),t.setTime(t.getTime()+6e4*((0<n?a:s)-r))),j()[e+24>>>2>>>0]=t.getDay(),n=(Mn(t.getFullYear())?xn:vn)[t.getMonth()]+t.getDate()-1|0,j()[e+28>>>2>>>0]=n,j()[e>>>2>>>0]=t.getSeconds(),j()[e+4>>>2>>>0]=t.getMinutes(),j()[e+8>>>2>>>0]=t.getHours(),j()[e+12>>>2>>>0]=t.getDate(),j()[e+16>>>2>>>0]=t.getMonth(),j()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)}function Pn(e,t,n,r,s,o,a){return l?de(16,1,e,t,n,r,s,o,a):-52}function $n(e,t,n,r,s,o){if(l)return de(17,1,e,t,n,r,s,o)}var Cn={},Sn=()=>performance.timeOrigin+performance.now();function Fn(e,t){if(l)return de(18,1,e,t);if(Cn[e]&&(clearTimeout(Cn[e].id),delete Cn[e]),!t)return 0;var n=setTimeout((()=>{delete Cn[e],$t((()=>Mr(e,performance.timeOrigin+performance.now())))}),t);return Cn[e]={id:n,qc:t},0}function En(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var s=(new Date).getFullYear(),o=new Date(s,0,1).getTimezoneOffset();s=new Date(s,6,1).getTimezoneOffset();var a=Math.max(o,s);V()[e>>>2>>>0]=60*a,j()[t>>>2>>>0]=+(o!=s),e=(t=e=>{var t=Math.abs(e);return`UTC${0<=e?"-":"+"}${String(Math.floor(t/60)).padStart(2,"0")}${String(t%60).padStart(2,"0")}`})(o),t=t(s),s<o?(ze(e,n,17),ze(t,r,17)):(ze(e,r,17),ze(t,n,17))}var In=()=>Date.now(),An=1;function zn(e,t,n){if(!(0<=e&&3>=e))return 28;if(0===e)e=Date.now();else{if(!An)return 52;e=performance.timeOrigin+performance.now()}return E[n>>>0>>>3]=BigInt(Math.round(1e6*e)),0}var Ln=[],On=(e,t)=>{Ln.length=0;for(var n;n=B()[e++>>>0];){var r=105!=n;t+=(r&=112!=n)&&t%8?4:0,Ln.push(112==n?V()[t>>>2>>>0]:106==n?E[t>>>3]:105==n?j()[t>>>2>>>0]:q()[t>>>3>>>0]),t+=r?8:4}return Ln};function Dn(e,t,n){return e>>>=0,t=On(t>>>0,n>>>0),te[e](...t)}function Bn(e,t,n){return e>>>=0,t=On(t>>>0,n>>>0),te[e](...t)}var Nn=()=>{};function Rn(e,t){return y(Fe(e>>>0,t>>>0))}var jn=()=>{throw le+=1,"unwind"};function Vn(){return 4294901760}var Gn=()=>navigator.hardwareConcurrency;function qn(){return Z("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function Un(e){e>>>=0;var t=B().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);e:{r=(Math.min(4294901760,65536*Math.ceil(Math.max(e,r)/65536))-M.buffer.byteLength+65535)/65536|0;try{M.grow(r),H();var s=1;break e}catch{}s=void 0}if(s)return!0}return!1}var Wn=()=>(Z("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),Hn={},Qn=e=>{e.forEach((e=>{var t=Wn();t&&(Hn[t]=e)}))};function Kn(){var e=Error().stack.toString().split("\n");return"Error"==e[0]&&e.shift(),Qn(e),Hn.Lb=Wn(),Hn.cc=e,Hn.Lb}function Xn(e,t,n){if(e>>>=0,t>>>=0,Hn.Lb==e)var r=Hn.cc;else"Error"==(r=Error().stack.toString().split("\n"))[0]&&r.shift(),Qn(r);for(var s=3;r[s]&&Wn()!=e;)++s;for(e=0;e<n&&r[e+s];++e)j()[t+4*e>>>2>>>0]=Wn();return e}var Jn,Yn={},Zn=()=>{if(!Jn){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(e in Yn)void 0===Yn[e]?delete t[e]:t[e]=Yn[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);Jn=n}return Jn};function er(e,t){if(l)return de(19,1,e,t);e>>>=0,t>>>=0;var n=0;return Zn().forEach(((r,s)=>{var o=t+n;for(s=V()[e+4*s>>>2>>>0]=o,o=0;o<r.length;++o)D()[s++>>>0]=r.charCodeAt(o);D()[s>>>0]=0,n+=r.length+1})),0}function tr(e,t){if(l)return de(20,1,e,t);e>>>=0,t>>>=0;var n=Zn();V()[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),V()[t>>>2>>>0]=r,0}function nr(e){return l?de(21,1,e):52}function rr(e,t,n,r){return l?de(22,1,e,t,n,r):52}function sr(e,t,n,r){return l?de(23,1,e,t,n,r):70}var or=[null,[],[]];function ar(e,t,n,r){if(l)return de(24,1,e,t,n,r);t>>>=0,n>>>=0,r>>>=0;for(var s=0,o=0;o<n;o++){var a=V()[t>>>2>>>0],i=V()[t+4>>>2>>>0];t+=8;for(var d=0;d<i;d++){var u=B()[a+d>>>0],c=or[e];0===u||10===u?((1===e?b:y)(Se(c)),c.length=0):c.push(u)}s+=i}return V()[r>>>2>>>0]=s,0}l||function(){for(var e=s.numThreads-1;e--;)Me();ae.unshift((()=>{var e;X++,e=()=>Y(),l?e():Promise.all(me.map(ye)).then(e)}))}();for(var ir=Array(256),lr=0;256>lr;++lr)ir[lr]=String.fromCharCode(lr);We=ir,He=s.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},s.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},ot.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>ot.length/2-5-st.length;var dr,ur=[ue,ce,Pe,Ee,Ie,Le,Oe,De,Be,Ne,Re,je,Ve,Ge,qe,Ue,Pn,$n,Fn,er,tr,nr,rr,sr,ar];!async function(){function e(e,t){return dr=e.exports,dr=function(){var e=dr,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{qt.push(n);try{return r(...e)}finally{L||(qt.pop(),Vt&&1===jt&&0===qt.length&&(jt=0,le+=1,Rt(Sr),typeof Fibers<"u"&&Fibers.rc()))}}:r;return t}(),n=dr,r=e=>t=>e(t)>>>0,s=e=>()=>e()>>>0,(n=Object.assign({},n)).Da=r(n.Da),n.fb=s(n.fb),n.hb=r(n.hb),n.tb=r(n.tb),n.ub=s(n.ub),n.__cxa_get_exception_ptr=r(n.__cxa_get_exception_ptr),dr=n,fe.push(dr.ib),x=t,Y(),dr;var n,r,s}X++;var t=ee();if(s.instantiateWasm)return new Promise((n=>{s.instantiateWasm(t,((t,r)=>{e(t,r),n(t.exports)}))}));if(l)return new Promise((t=>{U=n=>{var r=new WebAssembly.Instance(n,ee());t(e(r,n))}}));K??=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",_):_+"ort-wasm-simd-threaded.jsep.wasm":new URL(n("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href;try{var o=await async function(e){var t=K;if(!z&&"function"==typeof WebAssembly.instantiateStreaming&&!O(t))try{var n=fetch(t,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(n,e)}catch(e){y(`wasm streaming compile failed: ${e}`),y("falling back to ArrayBuffer instantiation")}return async function(e,t){try{var n=await async function(e){if(!z)try{var t=await p(e);return new Uint8Array(t)}catch{}if(e==K&&z)e=new Uint8Array(z);else{if(!m)throw"both async and sync fetching of the wasm failed";e=m(e)}return e}(e);return await WebAssembly.instantiate(n,t)}catch(e){y(`failed to asynchronously prepare wasm: ${e}`),Z(e)}}(t,e)}(t);return e(o.instance,o.module)}catch(e){return r(e),Promise.reject(e)}}();var cr=e=>(cr=dr.Da)(e),pr=()=>(pr=dr.Ea)();s._OrtInit=(e,t)=>(s._OrtInit=dr.Fa)(e,t),s._OrtGetLastError=(e,t)=>(s._OrtGetLastError=dr.Ga)(e,t),s._OrtCreateSessionOptions=(e,t,n,r,o,a,i,l,d,u)=>(s._OrtCreateSessionOptions=dr.Ha)(e,t,n,r,o,a,i,l,d,u),s._OrtAppendExecutionProvider=(e,t,n,r,o)=>(s._OrtAppendExecutionProvider=dr.Ia)(e,t,n,r,o),s._OrtAddFreeDimensionOverride=(e,t,n)=>(s._OrtAddFreeDimensionOverride=dr.Ja)(e,t,n),s._OrtAddSessionConfigEntry=(e,t,n)=>(s._OrtAddSessionConfigEntry=dr.Ka)(e,t,n),s._OrtReleaseSessionOptions=e=>(s._OrtReleaseSessionOptions=dr.La)(e),s._OrtCreateSession=(e,t,n)=>(s._OrtCreateSession=dr.Ma)(e,t,n),s._OrtReleaseSession=e=>(s._OrtReleaseSession=dr.Na)(e),s._OrtGetInputOutputCount=(e,t,n)=>(s._OrtGetInputOutputCount=dr.Oa)(e,t,n),s._OrtGetInputOutputMetadata=(e,t,n,r)=>(s._OrtGetInputOutputMetadata=dr.Pa)(e,t,n,r),s._OrtFree=e=>(s._OrtFree=dr.Qa)(e),s._OrtCreateTensor=(e,t,n,r,o,a)=>(s._OrtCreateTensor=dr.Ra)(e,t,n,r,o,a),s._OrtGetTensorData=(e,t,n,r,o)=>(s._OrtGetTensorData=dr.Sa)(e,t,n,r,o),s._OrtReleaseTensor=e=>(s._OrtReleaseTensor=dr.Ta)(e),s._OrtCreateRunOptions=(e,t,n,r)=>(s._OrtCreateRunOptions=dr.Ua)(e,t,n,r),s._OrtAddRunConfigEntry=(e,t,n)=>(s._OrtAddRunConfigEntry=dr.Va)(e,t,n),s._OrtReleaseRunOptions=e=>(s._OrtReleaseRunOptions=dr.Wa)(e),s._OrtCreateBinding=e=>(s._OrtCreateBinding=dr.Xa)(e),s._OrtBindInput=(e,t,n)=>(s._OrtBindInput=dr.Ya)(e,t,n),s._OrtBindOutput=(e,t,n,r)=>(s._OrtBindOutput=dr.Za)(e,t,n,r),s._OrtClearBoundOutputs=e=>(s._OrtClearBoundOutputs=dr._a)(e),s._OrtReleaseBinding=e=>(s._OrtReleaseBinding=dr.$a)(e),s._OrtRunWithBinding=(e,t,n,r,o)=>(s._OrtRunWithBinding=dr.ab)(e,t,n,r,o),s._OrtRun=(e,t,n,r,o,a,i,l)=>(s._OrtRun=dr.bb)(e,t,n,r,o,a,i,l),s._OrtEndProfiling=e=>(s._OrtEndProfiling=dr.cb)(e),s._JsepOutput=(e,t,n)=>(s._JsepOutput=dr.db)(e,t,n),s._JsepGetNodeName=e=>(s._JsepGetNodeName=dr.eb)(e);var mr=()=>(mr=dr.fb)(),hr=s._free=e=>(hr=s._free=dr.gb)(e),fr=s._malloc=e=>(fr=s._malloc=dr.hb)(e),_r=(e,t,n,r,s,o)=>(_r=dr.kb)(e,t,n,r,s,o),gr=()=>(gr=dr.lb)(),wr=(e,t,n,r,s)=>(wr=dr.mb)(e,t,n,r,s),br=e=>(br=dr.nb)(e),yr=e=>(yr=dr.ob)(e),Mr=(e,t)=>(Mr=dr.pb)(e,t),xr=()=>(xr=dr.qb)(),vr=(e,t)=>(vr=dr.rb)(e,t),Tr=e=>(Tr=dr.sb)(e),kr=e=>(kr=dr.tb)(e),Pr=()=>(Pr=dr.ub)(),$r=s.dynCall_ii=(e,t)=>($r=s.dynCall_ii=dr.vb)(e,t),Cr=e=>(Cr=dr.wb)(e),Sr=()=>(Sr=dr.xb)(),Fr=e=>(Fr=dr.yb)(e),Er=()=>(Er=dr.zb)();return s.stackSave=()=>Pr(),s.stackRestore=e=>Tr(e),s.stackAlloc=e=>kr(e),s.setValue=function(e,t,n="i8"){switch(n.endsWith("*")&&(n="*"),n){case"i1":case"i8":D()[e>>>0]=t;break;case"i16":N()[e>>>1>>>0]=t;break;case"i32":j()[e>>>2>>>0]=t;break;case"i64":E[e>>>3]=BigInt(t);break;case"float":G()[e>>>2>>>0]=t;break;case"double":q()[e>>>3>>>0]=t;break;case"*":V()[e>>>2>>>0]=t;break;default:Z(`invalid type for setValue: ${n}`)}},s.getValue=function(e,t="i8"){switch(t.endsWith("*")&&(t="*"),t){case"i1":case"i8":return D()[e>>>0];case"i16":return N()[e>>>1>>>0];case"i32":return j()[e>>>2>>>0];case"i64":return E[e>>>3];case"float":return G()[e>>>2>>>0];case"double":return q()[e>>>3>>>0];case"*":return V()[e>>>2>>>0];default:Z(`invalid type for getValue: ${t}`)}},s.UTF8ToString=Fe,s.stringToUTF8=ze,s.lengthBytesUTF8=Ae,function e(){if(0<X)J=e;else if(l)t(s),Q();else{for(;0<ae.length;)ae.shift()(s);0<X?J=e:(s.calledRun=!0,L||(Q(),t(s)))}}(),s.PTR_SIZE=4,o},we=ge,be=globalThis.self?.name?.startsWith("em-pthread"),be&&ge()})),sd=R((()=>{de(),ye=typeof location>"u"?void 0:location.origin,Me=import.meta.url>"file:"&&import.meta.url<"file;",xe=()=>{if(Me){let e=URL;return new URL(new e(n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?46eb"),n.b).href,ye).href}return import.meta.url},ve=xe(),Te=()=>{if(ve&&!ve.startsWith("blob:"))return ve.substring(0,ve.lastIndexOf("/")+1)},ke=(e,t)=>{try{let n=t??ve;return(n?new URL(e,n):new URL(e)).origin===ye}catch{return!1}},Pe=(e,t)=>{let n=t??ve;try{return(n?new URL(e,n):new URL(e)).href}catch{return}},$e=(e,t)=>`${t??"./"}${e}`,Ce=async e=>{let t=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(t)},Se=async e=>(await import(e)).default,Fe=(he(),V(ue)).default,Ee=async()=>{if(!ve)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ke(ve))return[void 0,Fe()];let e=await Ce(ve);return[e,Fe(e)]},Ie=(rd(),V(fe)).default,Ae=async(e,t,n)=>{if(!e&&!t&&Ie&&ve&&ke(ve))return[void 0,Ie];{let r="ort-wasm-simd-threaded.jsep.mjs",s=e??Pe(r,t),o=n&&s&&!ke(s,t),a=o?await Ce(s):s??$e(r,t);return[o?a:void 0,await Se(a)]}}})),od=R((()=>{sd(),Le=!1,Oe=!1,De=!1,Be=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Ne=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Re=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},je=async e=>{if(Le)return Promise.resolve();if(Oe)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(De)throw new Error("previous call to 'initializeWebAssembly()' failed.");Oe=!0;let t=e.initTimeout,n=e.numThreads;if(!1!==e.simd)if("relaxed"===e.simd){if(!Re())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!Ne())throw new Error("WebAssembly SIMD is not supported in the current environment.");let r=Be();n>1&&!r&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+n+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=n=1);let s=e.wasmPaths,o="string"==typeof s?s:void 0,a=s?.mjs,i=a?.href??a,l=s?.wasm,d=l?.href??l,u=e.wasmBinary,[c,p]=await Ae(i,o,n>1),m=!1,h=[];if(t>0&&h.push(new Promise((e=>{setTimeout((()=>{m=!0,e()}),t)}))),h.push(new Promise(((e,t)=>{let r={numThreads:n};if(u)r.wasmBinary=u;else if(d||o)r.locateFile=e=>d??o+e;else if(i&&0!==i.indexOf("blob:"))r.locateFile=e=>new URL(e,i).href;else if(c){let e=Te();e&&(r.locateFile=t=>e+t)}p(r).then((t=>{Oe=!1,Le=!0,ze=t,e(),c&&URL.revokeObjectURL(c)}),(e=>{Oe=!1,De=!0,t(e)}))}))),await Promise.race(h),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Ve=()=>{if(Le&&ze)return ze;throw new Error("WebAssembly is not initialized yet.")}})),ad=R((()=>{od(),Ge=(e,t)=>{let n=Ve(),r=n.lengthBytesUTF8(e)+1,s=n._malloc(r);return n.stringToUTF8(e,s,r),t.push(s),s},qe=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,s])=>{let o=t?t+e:e;if("object"==typeof s)qe(s,o+".",n,r);else if("string"==typeof s||"number"==typeof s)r(o,s.toString());else{if("boolean"!=typeof s)throw new Error("Can't handle extra config type: "+typeof s);r(o,s?"1":"0")}}))},Ue=e=>{let t=Ve(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);t._OrtGetLastError(r,r+n);let s=Number(t.getValue(r,4===n?"i32":"i64")),o=t.getValue(r+n,"*"),a=o?t.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(n)}}})),id=R((()=>{od(),ad(),We=e=>{let t=Ve(),n=0,r=[],s=e||{};try{if(void 0===e?.logSeverityLevel)s.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)s.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(s.terminate=!1);let o=0;return void 0!==e?.tag&&(o=Ge(e.tag,r)),n=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,o),0===n&&Ue("Can't create run options."),void 0!==e?.extra&&qe(e.extra,"",new WeakSet,((e,s)=>{let o=Ge(e,r),a=Ge(s,r);0!==t._OrtAddRunConfigEntry(n,o,a)&&Ue(`Can't set a run config entry: ${e} - ${s}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),ld=R((()=>{od(),ad(),He=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Qe=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Ke=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},Xe=(e,t,n,r)=>{let s=Ge(t,r),o=Ge(n,r);0!==Ve()._OrtAddSessionConfigEntry(e,s,o)&&Ue(`Can't set a session config entry: ${t} - ${n}.`)},Je=async(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name,s=[];switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r?.deviceType;t&&Xe(e,"deviceType",t,n)}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);Xe(e,"preferredLayout",t.preferredLayout,n)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let o=Ge(t,n),a=s.length,i=0,l=0;if(a>0){i=Ve()._malloc(a*Ve().PTR_SIZE),n.push(i),l=Ve()._malloc(a*Ve().PTR_SIZE),n.push(l);for(let e=0;e<a;e++)Ve().setValue(i+e*Ve().PTR_SIZE,s[e][0],"*"),Ve().setValue(l+e*Ve().PTR_SIZE,s[e][1],"*")}0!==await Ve()._OrtAppendExecutionProvider(e,o,i,l,a)&&Ue(`Can't append execution provider: ${t}.`)}},Ye=async e=>{let t=Ve(),n=0,r=[],s=e||{};Ke(s);try{let e=He(s.graphOptimizationLevel??"all"),o=Qe(s.executionMode??"sequential"),a="string"==typeof s.logId?Ge(s.logId,r):0,i=s.logSeverityLevel??2;if(!Number.isInteger(i)||i<0||i>4)throw new Error(`log serverity level is not valid: ${i}`);let l=s.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let d="string"==typeof s.optimizedModelFilePath?Ge(s.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!s.enableCpuMemArena,!!s.enableMemPattern,o,!!s.enableProfiling,0,a,i,l,d),0===n&&Ue("Can't create session options."),s.executionProviders&&await Je(n,s.executionProviders,r),void 0!==s.enableGraphCapture){if("boolean"!=typeof s.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);Xe(n,"enableGraphCapture",s.enableGraphCapture.toString(),r)}if(s.freeDimensionOverrides)for(let[e,o]of Object.entries(s.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof o||!Number.isInteger(o)||o<0)throw new Error(`free dimension override value must be a non-negative integer: ${o}`);let s=Ge(e,r);0!==t._OrtAddFreeDimensionOverride(n,s,o)&&Ue(`Can't set a free dimension override: ${e} - ${o}.`)}return void 0!==s.extra&&qe(s.extra,"",new WeakSet,((e,t)=>{Xe(n,e,t,r)})),[n,r]}catch(e){throw 0!==n&&0!==t._OrtReleaseSessionOptions(n)&&Ue("Can't release session options."),r.forEach((e=>t._free(e))),e}}})),dd=R((()=>{Ze=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},et=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},tt=(e,t)=>{let n=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],r="number"==typeof t?t:t.reduce(((e,t)=>e*t),1);return n>0?Math.ceil(r*n):void 0},nt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},rt=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},st=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,ot=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint64"===e||"int8"===e||"uint8"===e||"bool"===e||"uint4"===e||"int4"===e,at=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}})),ud=R((()=>{de(),it=async e=>{if("string"==typeof e){{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,s=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let o=0;for(;;){let{done:e,value:t}=await s.read();if(e)break;let r=t.byteLength;new Uint8Array(n,o,r).set(t),o+=r}return new Uint8Array(n,0,r)}}}return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}})),cd=R((()=>{dd(),lt=["V","I","W","E","F"],dt=(e,t)=>{console.log(`[${lt[e]},${(new Date).toISOString()}]${t}`)},pt=(e,t)=>{ut=e,ct=t},mt=(e,t)=>{let n=rt(e);n>=rt(ut)&&dt(n,"function"==typeof t?t():t)},ht=(...e)=>{ct&&mt(...e)}})),pd=R((()=>{ft=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},_t=class{static calcShape(e,t,n=!1){let r=e.length,s=t.length;if(0===r)return t;if(0===s)return e;let o=Math.max(e.length,t.length),a=new Array(o);if(n){if(r<2||s<2)return;let n=ft.calcMatMulShape([e[r-2],e[r-1]],[t[s-2],t[s-1]]);if(void 0===n)return;[a[o-2],a[o-1]]=n}for(let i=n?3:1;i<=o;i++){let n=r-i<0?1:e[r-i],l=s-i<0?1:t[s-i];if(n!==l&&n>1&&l>1)return;let d=Math.max(n,l);if(n&&l)a[o-i]=Math.max(n,l);else{if(d>1)return;a[o-i]=0}}return a}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let s=1;s<=n;s++)if(1!==e[n-s]&&e[n-s]!==t[r-s])return!1;return!0}},gt=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),s=n-1;for(;s>=0;){if(e[s]%t==0){r[s]=e[s]/t;break}if(t%e[s]!=0)throw new Error("cannot convert shape");r[s]=1,t/=e[s],s--}for(s--;s>=0;s--)r[s]=e[s];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let s=t;s<n;s++){if(e[s]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=Number(e[s])}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},wt=class e{static adjustPoolAttributes(e,t,n,r,s,o){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<s.length){if(s[e]<0)throw new Error("dilations should be greater than or equal to 1")}else s.push(1);for(let e=0;e<2*n.length;e++)if(e<o.length){if(o[e]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[e]>=n[e]||o[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,s,o,a,i){if(i){if(o.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(a?1:2)],n[l],r[l],s[l],o,l,l+t.length-2,i)}}static computePoolOutputShape(t,n,r,s,o,a,i){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,s,o,a,i),l}static computeConvOutputShape(t,n,r,s,o,a,i){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,s,o,a,i),l}static computeShapeHelper(t,n,r,s,o,a,i,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],s[t],o[t],a[t],i,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,s,o,a,i){let l=n*(r-1)+1;if(!i||"NOTSET"===i)return Math.floor((e+s[o]+s[a]-l)/t+1);switch(i){case"VALID":return s[o]=0,s[a]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return s[o]=Math.floor("SAME_LOWER"===i?(n+1)/2:n/2),s[a]=n-s[o],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},bt=class{static getShapeOfGemmResult(e,t,n,r,s){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let o,a,i;t?(o=e[1],a=e[0]):(o=e[0],a=e[1]);let l=-1;if(r?(i=n[0],l=1):(i=n[1],l=0),n[l]!==a)throw new Error("dimension mismatch");if(o<=0||i<=0||a<=0)throw new Error("invalid shape specified");if(s&&!_t.isValidBroadcast(s,[o,i]))throw new Error("gemm: invalid bias shape for broadcast");return[o,i,a]}},yt=-34028234663852886e22,Mt=34028234663852886e22})),md=R((()=>{dd(),xt=(e,t)=>new(nt(t))(e)})),hd=R((()=>{cd(),vt=(e,t=!0)=>{if(e.byteLength%8!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let n=e.byteLength/8,r=new BigInt64Array(e.buffer,e.byteOffset,n),s=new Int32Array(n);for(let e=0;e<n;e++){let t=r[e];if(t>2147483647n||t<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${e}: ${t}`);s[e]=Number(t)}return t?new Uint8Array(s.buffer):s},Tt=(e,t=!0)=>{if(e.byteLength%4!=0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let n=e.byteLength/4,r=new Int32Array(e.buffer,e.byteOffset,n),s=BigInt64Array.from(r,BigInt);return t?new Uint8Array(s.buffer):s},kt=1,Pt=()=>kt++,$t=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),Ct=(e,t)=>{let n=$t.get(e);if(!n)throw new Error("Unsupported data type.");return t.length>0?Math.ceil(t.reduce(((e,t)=>e*t))*n/8):0},St=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:t,context:n,tensor:r,dataType:s,shape:o,shouldConvertInt64toInt32:a=!1}=e;this.sessionId=t,this.mlContext=n,this.mlTensor=r,this.dataType=s,this.tensorShape=o,this.shouldConvertInt64toInt32=a}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return Ct(this.dataType,this.tensorShape)}destroy(){ht("verbose",(()=>"[WebNN] TensorWrapper.destroy")),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,t){if(e){let e=await this.mlContext.readTensor(this.mlTensor),n=Tt(new Uint8Array(e));return t?void(t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength)).set(n):n.buffer}return t?this.mlContext.readTensor(this.mlTensor,t):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,t,n){return this.mlContext===e&&this.dataType===t&&this.tensorShape.length===n.length&&this.tensorShape.every(((e,t)=>e===n[t]))}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},Ft=class{constructor(e,t){this.tensorManager=e,this.wrapper=t}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,t,n,r){let s=t,o=this.tensorManager.getMLContext(e),a="int64"===s&&!o.opSupportLimits().input.dataTypes.includes("int64");if(a&&(s="int32",ht("verbose",(()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32"))),this.wrapper){if(this.wrapper.canReuseTensor(o,s,n))return this.wrapper.tensor;if(r){if(this.wrapper.byteLength!==Ct(s,n))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let i=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,s,n,i,!0,!0,a),r&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let t=e;if(this.wrapper){if(this.wrapper.shouldConvertInt64toInt32&&(t=vt(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),t.byteLength===this.wrapper.byteLength)return void this.wrapper.write(t);ht("verbose",(()=>"Data size does not match tensor size. Releasing tensor.")),this.releaseTensor()}this.activeUpload?this.activeUpload.set(t):this.activeUpload=new Uint8Array(t)}async download(e){if(this.activeUpload){let t=this.wrapper?.isInt64ToInt32Converted?Tt(this.activeUpload):this.activeUpload;return e?void(e instanceof ArrayBuffer?new Uint8Array(e).set(t):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(t)):t.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,e):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},Et=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let t=this.backend.getMLContext(e);if(!t)throw new Error("MLContext not found for session.");return t}reserveTensorId(){let e=Pt();return this.tensorTrackersById.set(e,new Ft(this)),e}releaseTensorId(e){let t=this.tensorTrackersById.get(e);t&&(this.tensorTrackersById.delete(e),t.tensorWrapper&&this.releaseTensor(t.tensorWrapper))}async ensureTensor(e,t,n,r,s){ht("verbose",(()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${t}, dataType: ${n}, shape: ${r}, copyOld: ${s}}`));let o=this.tensorTrackersById.get(t);if(!o)throw new Error("Tensor not found.");return o.ensureTensor(e,n,r,s)}upload(e,t){let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");n.upload(t)}async download(e,t){ht("verbose",(()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${t?.byteLength}}`));let n=this.tensorTrackersById.get(e);if(!n)throw new Error("Tensor not found.");return n.download(t)}releaseTensorsForSession(e){for(let t of this.freeTensors)t.sessionId===e&&t.destroy();this.freeTensors=this.freeTensors.filter((t=>t.sessionId!==e))}registerTensor(e,t,n,r){let s=this.getMLContext(e),o=Pt(),a=new St({sessionId:e,context:s,tensor:t,dataType:n,shape:r});return this.tensorTrackersById.set(o,new Ft(this,a)),this.externalTensors.add(a),o}async getCachedTensor(e,t,n,r,s,o,a=!1){let i=this.getMLContext(e);for(let[r,s]of this.freeTensors.entries())if(s.canReuseTensor(i,t,n)){ht("verbose",(()=>`[WebNN] Reusing tensor {dataType: ${t}, shape: ${n}}`));let s=this.freeTensors.splice(r,1)[0];return s.sessionId=e,s}ht("verbose",(()=>`[WebNN] MLContext.createTensor {dataType: ${t}, shape: ${n}}`));let l=await i.createTensor({dataType:t,shape:n,dimensions:n,usage:r,writable:s,readable:o});return new St({sessionId:e,context:i,tensor:l,dataType:t,shape:n,shouldConvertInt64toInt32:a})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},It=(...e)=>new Et(...e)})),fd=R((()=>{dd(),od(),md(),hd(),cd(),At=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),zt=(e,t)=>{if(e===t)return!0;if(void 0===e||void 0===t)return!1;let n=Object.keys(e).sort(),r=Object.keys(t).sort();return n.length===r.length&&n.every(((n,s)=>n===r[s]&&e[n]===t[n]))},Lt=class{constructor(e){this.tensorManager=It(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,pt(e.logLevel,!!e.debug)}get currentSessionId(){if(void 0===this.activeSessionId)throw new Error("No active session");return this.activeSessionId}onRunStart(e){ht("verbose",(()=>`[WebNN] onRunStart {sessionId: ${e}}`)),this.activeSessionId=e}onRunEnd(e){ht("verbose",(()=>`[WebNN] onRunEnd {sessionId: ${e}}`));let t=this.temporarySessionTensorIds.get(e);if(t){for(let e of t)ht("verbose",(()=>`[WebNN] releasing temporary tensor {tensorId: ${e}}`)),this.tensorManager.releaseTensorId(e);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex((t=>t.gpuDevice===e));if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:t}),t}}if(void 0===e){let e=this.mlContextCache.findIndex((e=>void 0===e.options&&void 0===e.gpuDevice));if(-1!==e)return this.mlContextCache[e].mlContext;{let e=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:e}),e}}let t=this.mlContextCache.findIndex((t=>zt(t.options,e)));if(-1!==t)return this.mlContextCache[t].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,t){this.mlContextBySessionId.set(e,t);let n=this.sessionIdsByMLContext.get(t);n||(n=new Set,this.sessionIdsByMLContext.set(t,n)),n.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let t=this.mlContextBySessionId.get(e);if(!t)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let n=this.sessionIdsByMLContext.get(t);if(n.delete(e),0===n.size){this.sessionIdsByMLContext.delete(t);let e=this.mlContextCache.findIndex((e=>e.mlContext===t));-1!==e&&this.mlContextCache.splice(e,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){ht("verbose",(()=>`[WebNN] releaseTensorId {tensorId: ${e}}`)),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,t,n,r,s){let o=At.get(n);if(!o)throw new Error(`Unsupported ONNX data type: ${n}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,t,o,r,s)}async createTemporaryTensor(e,t,n){ht("verbose",(()=>`[WebNN] createTemporaryTensor {onnxDataType: ${t}, shape: ${n}}`));let r=At.get(t);if(!r)throw new Error(`Unsupported ONNX data type: ${t}`);let s=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,s,r,n,!1);let o=this.temporarySessionTensorIds.get(e);return o?o.push(s):this.temporarySessionTensorIds.set(e,[s]),s}uploadTensor(e,t){if(!Ve().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");ht("verbose",(()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${t.byteLength}}`)),this.tensorManager.upload(e,t)}async downloadTensor(e,t){return this.tensorManager.download(e,t)}createMLTensorDownloader(e,t){return async()=>{let n=await this.tensorManager.download(e);return xt(n,t)}}registerMLTensor(e,t,n,r){let s=At.get(n);if(!s)throw new Error(`Unsupported ONNX data type: ${n}`);let o=this.tensorManager.registerTensor(e,t,s,r);return ht("verbose",(()=>`[WebNN] registerMLTensor {tensor: ${t}, dataType: ${s}, dimensions: ${r}} -> {tensorId: ${o}}`)),o}registerMLConstant(e,t,n,r,s,o,a=!1){if(!o)throw new Error("External mounted files are not available.");let i=e;e.startsWith("./")&&(i=e.substring(2));let l=o.get(i);if(!l)throw new Error(`File with name ${i} not found in preloaded files.`);if(t+n>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let d,u=l.slice(t,t+n).buffer;switch(s.dataType){case"float32":d=new Float32Array(u);break;case"float16":d=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(u):new Uint16Array(u);break;case"int32":d=new Int32Array(u);break;case"uint32":d=new Uint32Array(u);break;case"int64":a?(d=vt(new Uint8Array(u),!1),s.dataType="int32"):d=new BigInt64Array(u);break;case"uint64":d=new BigUint64Array(u);break;case"int8":d=new Int8Array(u);break;case"int4":case"uint4":case"uint8":d=new Uint8Array(u);break;default:throw new Error(`Unsupported data type: ${s.dataType} in creating WebNN Constant from external data.`)}return ht("verbose",(()=>`[WebNN] registerMLConstant {dataType: ${s.dataType}, shape: ${s.shape}}} ${a?"(Note: it was int64 data type and registered to int32 as workaround)":""}`)),r.constant(s,d)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,t){let n=this.sessionGraphInputs.get(e);return!!n&&n.includes(t)}isInt64Supported(e){return!!this.mlContextBySessionId.get(e)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}})),_d=R((()=>{})),gd=R((()=>{cd(),_d(),Ot=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),Dt=[],Bt=e=>16*Math.ceil(Number(e)/16),Nt=e=>{for(let t=0;t<Dt.length;t++){let n=Dt[t];if(e<=n)return n}return 16*Math.ceil(e/16)},Rt=1,jt=()=>Rt++,Vt=async(e,t,n,r)=>{let s=Bt(n),o=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,o,0,s),e.flush(),await o.mapAsync(GPUMapMode.READ);let i=o.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(i,0,n)),e}return new Uint8Array(i.slice(0,n))}finally{o.destroy()}},Gt=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[e]of Ot)Dt.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[]);this.sessionCount=0}upload(e,t){let n=t.buffer,r=t.byteOffset,s=t.byteLength,o=Bt(s),a=this.storageCache.get(e);if(!a)throw new Error("gpu data for uploading does not exist");if(Number(a.originalSize)!==s)throw new Error(`inconsistent data size. gpu data size=${a.originalSize}, data size=${s}`);let i=this.backend.device.createBuffer({mappedAtCreation:!0,size:o,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=i.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,s)),i.unmap();let d=this.backend.device.createCommandEncoder();d.copyBufferToBuffer(i,0,a.gpuData.buffer,0,o),this.backend.device.queue.submit([d.finish()]),i.destroy(),ht("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`))}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let s=Bt(n.originalSize),o=this.backend.getCommandEncoder();this.backend.endComputePass(),o.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,s)}registerExternalBuffer(e,t,n){let r;if(n){if(r=n[0],e===n[1])return ht("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!")}else r=jt();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),ht("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){void 0!==e&&(this.storageCache.delete(e),ht("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=Nt(e),s=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,o=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(s||o){let e=(s?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let a={id:jt(),type:0,buffer:n};return this.storageCache.set(a.id,{gpuData:a,originalSize:Number(e)}),ht("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${a.id}`)),a}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t="bigint"==typeof e?Number(e):e,n=this.storageCache.get(t);if(!n){if(0===this.storageCache.size)return 0;throw new Error("releasing data does not exist")}return ht("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${n.gpuData.id}`)),this.storageCache.delete(t),this.buffersPending.push(n.gpuData.buffer),n.originalSize}async download(e,t){let n=this.storageCache.get(Number(e));if(!n)throw new Error("data does not exist");await Vt(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){if(0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=Ot.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,0===this.sessionCount&&(ht("warning",(()=>"[WebGPU] Clearing webgpu buffer cache")),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.storageCache=new Map)}},qt=(...e)=>new Gt(...e)})),wd=R((()=>{Ut=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},Wt=e=>new Ut(e)})),bd=R((()=>{dd(),pd(),Ht=64,Qt=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},Kt=(e,t=1)=>{let n=Qt(e,t);return"string"==typeof n?n:n[0]},Xt=(e,t=1)=>{let n=Qt(e,t);return"string"==typeof n?n:n[1]},Jt=(...e)=>{let t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:gt.computeStrides(e)})})),t},Yt=e=>e%4==0?4:e%2==0?2:1,Zt=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,en=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,tn=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,nn=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,rn=(e,t,n,r,s)=>{let o="number"==typeof n,a=o?n:n.length,i=[...new Array(a).keys()],l=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,d=Qt(t,s),u="string"==typeof d?d:d[1],c="string"==typeof d?d:d[0],p={indices:l,value:u,storage:c,tensor:t},m=e=>"string"==typeof e?e:`${e}u`,h={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},f=o?"uniforms.":"",_=`${f}${e}_shape`,g=`${f}${e}_strides`,w="";for(let e=0;e<a-1;e++)w+=`\n    let dim${e} = current / ${nn(g,e,a)};\n    let rest${e} = current % ${nn(g,e,a)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;w+=`indices[${a-1}] = current;`;let b=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${w}\n    return indices;\n  }`,y=[];if(a>=2)for(let e=a-1;e>=0;e--)y.push(`${nn(g,e,a)} * (indices[${e}])`);let M=a<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${y.join("+")};\n  }`,x=(...e)=>0===a?"0u":`${p.indices}(${e.map(m).join(",")})`,v=(e,t)=>a<2?`${e}`:`${nn(e,t,a)}`,T={},k=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),P=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),$=a<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${u} {\n    return ${P(`i2o_${e}(indices)`)};\n  }`,C=a<2?"":(()=>{let t=i.map((e=>`d${e}: u32`)).join(", "),n=i.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${u} {\n    return get_${e}ByIndices(${x(n)});\n  }`})(),S=a<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${u}) {\n    ${k(`i2o_${e}(indices)`,"value")}\n  }`,F=a<2?"":(()=>{let t=i.map((e=>`d${e}: u32`)).join(", "),n=i.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${u}) {\n    set_${e}ByIndices(${x(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return h.offsetToIndices&&(e.push(b),t=!0),h.indicesToOffset&&(e.push(M),t=!0),h.broadcastedIndicesToOffset&&(Object.values(T).forEach((t=>e.push(t))),t=!0),h.set&&(e.push(F),t=!0),h.setByIndices&&(e.push(S),t=!0),h.get&&(e.push(C),t=!0),h.getByIndices&&(e.push($),t=!0),!o&&t&&e.unshift(`const ${_} = ${p.indices}(${n.join(",")});`,`const ${g} = ${p.indices}(${gt.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(h.offsetToIndices=!0,a<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(h.indicesToOffset=!0,a<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{h.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in T)return`${r}(${t})`;let s=[];for(let e=a-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-a);s.push(`${v(g,e)} * (${t} % ${v(_,e)})`)}return T[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${s.length>0?s.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:x,indicesGet:v,indicesSet:(e,t,n)=>a<2?`${e}=${n};`:`${nn(e,t,a)}=${n};`,set:(...t)=>{if(t.length!==a+1)throw new Error(`indices length must be ${a}`);let n=t[a];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,a).map(m).join(",");return 0===a?k("0u",n):1===a?k(r[0],n):(h.set=!0,h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:k,setByIndices:(t,n)=>a<2?k(t,n):(h.setByIndices=!0,h.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==a)throw new Error(`indices length must be ${a}`);let n=t.map(m).join(",");return 0===a?P("0u"):1===a?P(n[0]):(h.get=!0,h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:P,getByIndices:t=>a<2?P(t):(h.getByIndices=!0,h.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:g,shape:_,rank:a}},sn=(e,t,n,r=1)=>rn(e,t,n,"input",r),on=(e,t,n,r=1)=>rn(e,t,n,"output",r),an=(e,t,n)=>rn(e,t,n,"atomicOutput",1),ln=(e,t,n,r=1)=>rn(e,t,n,"internal",r),dn=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=Ht){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let s=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${s?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${s?"let global_idx = global_id.x;\n         let workgroup_index = workgroup_id.x;":`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n             workgroup_id.y * num_workgroups[0] + workgroup_id.x;\n         let global_idx = workgroup_index * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r="atomicOutput"===e.usage?"atomic<i32>":e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let s=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${s}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map((t=>[e(t.type),t.length??1]))}},un=(e,t)=>new dn(e,t)})),yd=R((()=>{dd(),pd(),wd(),bd(),cn=(e,t)=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.");if(0!==t.length&&t.length!==e[0].dims.length)throw new Error(`perm size ${t.length} does not match input rank ${e[0].dims.length}`)},pn=(e,t)=>0!==t.length?t:[...new Array(e).keys()].reverse(),mn=(e,t)=>gt.sortBasedOnPerm(e,pn(e.length,t)),hn=(e,t,n,r)=>{let s=`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`;for(let n=0;n<t;++n)s+=`a[${e[n]}]=i[${n}];`;return s+"return a;}"},fn=(e,t)=>{let n=[],r=[];for(let s=0;s<e.length;++s)1!==e[s]&&n.push(e[s]),1!==e[t[s]]&&r.push(t[s]);return{newShape:n,newPerm:r}},_n=(e,t)=>{let n=0;for(let r=0;r<e.length;++r)if(1!==t[e[r]]){if(e[r]<n)return!1;n=e[r]}return!0},gn=(e,t)=>{let n,r=e.dataType,s=e.dims.length,o=pn(s,t),a=mn(e.dims,o),i=e.dims,l=a;if(s<2||_n(o,e.dims))return n=e=>{let t=sn("input",r,i,4),n=on("output",r,l,4);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    output[global_idx] = input[global_idx];\n  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let t=gt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64/4)},programUniforms:[{type:12,data:Math.ceil(t/4)}]}},getShaderSource:n};let{newShape:d,newPerm:u}=fn(e.dims,o),c=gt.areEqual(u,[2,3,1]),p=gt.areEqual(u,[3,1,2]);if(2===d.length||c||p){i=c?[d[0],d[1]*d[2]]:p?[d[0]*d[1],d[2]]:d,l=[i[1],i[0]];let t=16;return n=e=>{let n=sn("a",r,i.length),s=on("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s)}\n  var<workgroup> tile : array<array<${s.type.value}, ${t+1}>, ${t}>;\n  ${e.mainStart([t,t,1])}\n    let stride = (uniforms.output_shape[1] - 1) / ${t} + 1;\n    let workgroup_id_x = workgroup_index % stride;\n    let workgroup_id_y = workgroup_index / stride;\n    let input_col = workgroup_id_y * ${t}u + local_id.x;\n    let input_row = workgroup_id_x * ${t}u + local_id.y;\n    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {\n      tile[local_id.y][local_id.x] = ${n.getByIndices(`${n.type.indices}(input_row, input_col)`)};\n    }\n    workgroupBarrier();\n\n    let output_col = workgroup_id_x * ${t}u + local_id.x;\n    let output_row = workgroup_id_y * ${t}u + local_id.y;\n    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {\n      ${s.setByIndices(`${s.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}\n    }\n  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let n=gt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(l[1]/t),y:Math.ceil(l[0]/t)},programUniforms:[{type:12,data:n},...Jt(i,l)]}},getShaderSource:n}}return n=e=>{let t=sn("a",r,i.length),n=on("output",r,l.length);return`\n  ${e.registerUniform("output_size","u32").declareVariables(t,n)}\n\n  ${hn(o,s,t,n)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${n.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${n.setByOffset("global_idx",t.getByIndices("aIndices"))}\n  }`},{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>{let t=gt.size(a);return{outputs:[{dims:a,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...Jt(i,l)]}},getShaderSource:n}},wn=(e,t)=>{cn(e.inputs,t.perm),e.compute(gn(e.inputs[0],t.perm))},bn=e=>Wt({perm:e.perm})})),Md=R((()=>{dd(),pd(),bd(),xd(),yd(),yn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Mn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},xn={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},vn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Tn=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},kn=(e,t)=>{let n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]},Pn=(e,t)=>{let n=e.length+t.length,r=[],s=0;for(let o=0;o<n;o++)-1===t.indexOf(o)?r.push(e[s++]):r.push(1);return r},$n=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Cn=(e,t)=>{let n=[];if(!$n(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},Sn=(e,t,n,r,s,o,a)=>{let i=n[0].dims,l=gt.size(o),d=gt.size(a),u=sn("_A",n[0].dataType,i),c=on("output",s,o),p=64;1===l&&(p=256);let m=`\n          var<workgroup> aBestValues : array<f32, ${p}>;\n       `;return{name:e,shaderCache:{hint:`${t};${p}`,inputDependencies:["type"]},getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(u,c)}\n        ${m}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(p)}\n\n          let outputIndex = global_idx / ${p};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${xn[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${p}) {\n           let candidate = f32(${u.getByOffset("offset + k")});\n           bestValue = ${yn[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${p}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Mn[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex",""+("mean"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${vn[r]})`))};\n         }\n        }`,getRunData:()=>({outputs:[{dims:o,dataType:s}],dispatchGroup:{x:l},programUniforms:[{type:12,data:d}]})}},Fn=(e,t,n,r)=>{let s=1===e.inputs.length?n:qn(e.inputs,n),o=s.axes;0===o.length&&!s.noopWithEmptyAxes&&(o=e.inputs[0].dims.map(((e,t)=>t)));let a=gt.normalizeAxes(o,e.inputs[0].dims.length),i=a,l=e.inputs[0],d=Cn(i,e.inputs[0].dims.length);d.length>0&&(l=e.compute(gn(e.inputs[0],d),{inputs:[0],outputs:[-1]})[0],i=Tn(i.length,l.dims.length));let[u,c]=kn(l.dims,i),p=u;s.keepDims&&(p=Pn(u,a)),e.compute(Sn(t,s.cacheKey,[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},En=(e,t)=>{Fn(e,"ReduceMeanShared",t,"mean")},In=(e,t)=>{Fn(e,"ReduceL1Shared",t,"l1")},An=(e,t)=>{Fn(e,"ReduceL2Shared",t,"l2")},zn=(e,t)=>{Fn(e,"ReduceLogSumExpShared",t,"logSumExp")},Ln=(e,t)=>{Fn(e,"ReduceMaxShared",t,"max")},On=(e,t)=>{Fn(e,"ReduceMinShared",t,"min")},Dn=(e,t)=>{Fn(e,"ReduceProdShared",t,"prod")},Bn=(e,t)=>{Fn(e,"ReduceSumShared",t,"sum")},Nn=(e,t)=>{Fn(e,"ReduceSumSquareShared",t,"sumSquare")},Rn=(e,t)=>{Fn(e,"ReduceLogSumShared",t,"logSum")}})),xd=R((()=>{dd(),pd(),wd(),bd(),Md(),jn=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},Vn=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Gn=(e,t,n,r,s,o,a=!1,i=!1)=>{let l=[],d=n[0].dims,u=d.length,c=gt.normalizeAxes(s,u),p=!i&&0===c.length;d.forEach(((e,t)=>{p||c.indexOf(t)>=0?a&&l.push(1):l.push(e)}));let m=l.length,h=gt.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],s=sn("_A",n[0].dataType,u),i=on("output",o,m),l=r(s,i,c),h=l[2];for(let e=0,n=0;e<u;e++)p||c.indexOf(e)>=0?(a&&n++,h=`for(var j${e}: u32 = 0; j${e} < ${d[e]}; j${e}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${s.indicesSet("input_indices",e,`j${e}`)}\n                  ${h}\n                }`):(t.push(`${s.indicesSet("input_indices",e,i.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(s,i)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${s.type.indices};\n          let output_indices = ${i.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${h}\n          ${l[3]}\n          ${4===l.length?i.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:o}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:[{type:12,data:h},...Jt(d,l)]})}},qn=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),Wt({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Un=(e,t,n,r)=>{let s=e.inputs,o=1===s.length?n:qn(s,n);e.compute(Gn(t,{hint:o.cacheKey,inputDependencies:["rank"]},[s[0]],o.noopWithEmptyAxes&&0===o.axes.length?Vn:r,o.axes,s[0].dataType,o.keepDims,o.noopWithEmptyAxes),{inputs:[0]})},Wn=(e,t)=>{jn(e.inputs),Un(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},Hn=(e,t)=>{jn(e.inputs),Un(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},Qn=(e,t)=>{jn(e.inputs),Un(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},Kn=(e,t)=>{jn(e.inputs),Un(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},Xn=(e,t)=>{jn(e.inputs),Un(e,"ReduceMax",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},Jn=(e,t)=>{jn(e.inputs),Un(e,"ReduceMean",t,((t,n,r)=>{let s=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(s*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${s});`]}))},Yn=(e,t)=>{jn(e.inputs),Un(e,"ReduceMin",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},Zn=(e,t)=>{jn(e.inputs),Un(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},er=(e,t)=>{jn(e.inputs),Un(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},tr=(e,t)=>{jn(e.inputs),Un(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},nr=(e,t,n)=>{if(0===t.length)return n;let r=1,s=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:s*=e[n];return s<32&&r>1024},rr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Jn(e,t):En(e,t)},sr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hn(e,t):In(e,t)},or=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Qn(e,t):An(e,t)},ar=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kn(e,t):zn(e,t)},ir=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Xn(e,t):Ln(e,t)},lr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yn(e,t):On(e,t)},dr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zn(e,t):Dn(e,t)},ur=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?er(e,t):Bn(e,t)},cr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?tr(e,t):Nn(e,t)},pr=(e,t)=>{nr(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Wn(e,t):Rn(e,t)}})),vd=R((()=>{dd(),wd(),xd(),mr=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},hr=(e,t)=>{mr(e.inputs);e.compute(Gn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},fr=(e,t)=>{mr(e.inputs);e.compute(Gn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let s=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&s.push(`input_indices[${t}] = 0;`);return[`${s.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},_r=e=>Wt(e)})),Td=R((()=>{dd(),pd(),_d(),bd(),gr=(e,t)=>{let n=e[0],r=e[1],s=e[2],o=e[3],a=e[4],i=e[5];if(a&&i)throw new Error("Attention cannot have both past and attention_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],d=n.dims[1],u=n.dims[2];if(1!==s.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==u)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=s.dims[0]/3,p=c,m=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],m=t.qkvHiddenSizes[2]}let h=d;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==c+p+m)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let f=0;if(a){if(p!==m)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==a.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==a.dims[0])throw new Error('Input "past" first dimension must be 2');if(a.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(a.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(a.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(f=a.dims[3])}let _=h+f;if(o)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");if(i){if(4!==i.dims.length)throw new Error('Input "attention_bias" must have 4 dimensions');if(i.dims[0]!==l||i.dims[1]!==t.numHeads||i.dims[2]!==d||i.dims[3]!==_)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:h,totalSequenceLength:_,maxSequenceLength:-1,inputHiddenSize:u,hiddenSize:c,vHiddenSize:m,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(m/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},wr=(e,t,n)=>t&&e?`\n      let total_sequence_length_input = u32(${t.getByOffset("0")});\n      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);\n      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;\n      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;\n      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;\n      var past_sequence_length: u32 = 0;\n      if (is_first_prompt == false) {\n        past_sequence_length = total_sequence_length - sequence_length;\n      }\n       `:`\n    ${n?"let past_sequence_length = uniforms.past_sequence_length":""};\n    let present_sequence_length = total_sequence_length;\n    `,br=(e,t,n,r,s,o,a,i)=>{let l=Yt(a?1:o),d=64,u=o/l;u<d&&(d=32);let c=Math.ceil(o/l/d),p=[{type:12,data:t},{type:12,data:n},{type:12,data:r},{type:12,data:s},{type:12,data:u},{type:12,data:c}],m=Kt(e.dataType,l),h=Xt(1,l),f=["type"];a&&f.push("type"),i&&f.push("type");return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${d};${m};${l}`,inputDependencies:f},getShaderSource:t=>{let n=on("x",e.dataType,e.dims,l),r=[n],s=a?sn("seq_lens",a.dataType,a.dims):void 0;s&&r.push(s);let o=i?sn("total_sequence_length_input",i.dataType,i.dims):void 0;o&&r.push(o);let u=Xt(e.dataType);return`\n  var<workgroup> thread_max: array<f32, ${d}>;\n  var<workgroup> thread_sum: array<f32, ${d}>;\n  ${t.registerUniforms([{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}]).declareVariables(...r)}\n  ${t.mainStart([d,1,1])}\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let sequence_length = uniforms.sequence_length;\n    var total_sequence_length = uniforms.total_sequence_length;\n    ${wr(s,o,!1)}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = (global_idx / ${d}) * uniforms.total_sequence_length + local_offset;\n    let seq_causal_length = ${a?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};\n    var thread_max_vector = ${h}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      thread_max_vector = max(${h}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${d}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${h}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n      sum_vector += exp(${h}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${d}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        x[offset + i] = ${n.type.value}(${u}(1.0) / ${u}(seq_causal_length));\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {\n        var f32input = ${h}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n      ${a?`\n        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {\n          x[offset + total_seq_id] = ${n.type.value}(${u}(0));\n        }`:""};\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:s,z:t*n},programUniforms:p})}},yr=(e,t,n,r,s,o,a,i,l)=>{let d=a+o.kvSequenceLength,u=[o.batchSize,o.numHeads,o.sequenceLength,d],c=e>1&&r,p=o.kvNumHeads?o.kvNumHeads:o.numHeads,m=c?[o.batchSize,p,d,o.headSize]:void 0,h=o.nReps?o.nReps:1,f=0===o.scale?1/Math.sqrt(o.headSize):o.scale,_=Yt(o.headSize),g=o.headSize/_,w=12,b={x:Math.ceil(d/w),y:Math.ceil(o.sequenceLength/w),z:o.batchSize*o.numHeads},y=[{type:12,data:o.sequenceLength},{type:12,data:g},{type:12,data:d},{type:12,data:o.numHeads},{type:12,data:o.headSize},{type:1,data:f},{type:12,data:a},{type:12,data:o.kvSequenceLength},{type:12,data:h}],M=c&&r&&gt.size(r.dims)>0,x=["type","type"];M&&x.push("type"),s&&x.push("type"),i&&x.push("type"),l&&x.push("type");let v=[{dims:u,dataType:t.dataType,gpuDataType:0}];c&&v.push({dims:m,dataType:t.dataType,gpuDataType:0});return{name:"AttentionProbs",shaderCache:{hint:`${_};${void 0!==s};${void 0!==r};${e}`,inputDependencies:x},getRunData:()=>({outputs:v,dispatchGroup:b,programUniforms:y}),getShaderSource:e=>{let o=sn("q",t.dataType,t.dims,_),a=[o,sn("key",n.dataType,n.dims,_)];if(M){let e=sn("past_key",r.dataType,r.dims,_);a.push(e)}s&&a.push(sn("attention_bias",s.dataType,s.dims));let d=i?sn("seq_lens",i.dataType,i.dims):void 0;d&&a.push(d);let p=l?sn("total_sequence_length_input",l.dataType,l.dims):void 0;p&&a.push(p);let f=on("output",t.dataType,u),g=[f];c&&g.push(on("present_key",t.dataType,m,_));let b=Xt(1,_);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${o.type.storage}, 144>;\n  var<workgroup> tileK: array<${o.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...a,...g)}\n  ${e.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z % uniforms.num_heads;\n    let kvHeadIdx = ${1===h?"headIdx":"headIdx / uniforms.n_reps"};\n    let kv_num_heads = ${1===h?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n    let batchIdx = workgroup_id.z / uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let sequence_length = uniforms.M;\n    var total_sequence_length = uniforms.N;\n    ${wr(d,p,!0)}\n    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;\n    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n    ${M&&c?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};\n    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;\n    ${c?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}\n    var value = ${b}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n      ${M&&c?"\n              if (n + local_id.y < past_sequence_length) {\n                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];\n              }":"\n          if (n + local_id.y < uniforms.kv_sequence_length) {\n            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];\n          }"}\n      ${c?"if (n + local_id.y < present_sequence_length) {\n        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];\n      }":""}\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n          value += ${b}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {\n      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(_){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${_}`)}})()};\n        output[outputIdx] = ${f.type.value} (sum * uniforms.alpha) + ${s?"attention_bias[outputIdx]":"0.0"};\n    }\n  }`}}},Mr=(e,t,n,r,s,o,a=void 0,i=void 0)=>{let l=o+s.kvSequenceLength,d=s.nReps?s.nReps:1,u=s.vHiddenSize*d,c=e>1&&r,p=s.kvNumHeads?s.kvNumHeads:s.numHeads,m=c?[s.batchSize,p,l,s.headSize]:void 0,h=[s.batchSize,s.sequenceLength,u],f=12,_={x:Math.ceil(s.vHeadSize/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},g=[{type:12,data:s.sequenceLength},{type:12,data:l},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.headSize},{type:12,data:u},{type:12,data:o},{type:12,data:s.kvSequenceLength},{type:12,data:d}],w=c&&r&&gt.size(r.dims)>0,b=["type","type"];w&&b.push("type"),a&&b.push("type"),i&&b.push("type");let y=[{dims:h,dataType:t.dataType,gpuDataType:0}];c&&y.push({dims:m,dataType:t.dataType,gpuDataType:0});return{name:"AttentionScore",shaderCache:{hint:`${void 0!==r};${e}`,inputDependencies:b},getRunData:()=>({outputs:y,dispatchGroup:_,programUniforms:g}),getShaderSource:e=>{let s=sn("probs",t.dataType,t.dims),o=[s,sn("v",n.dataType,n.dims)];w&&o.push(sn("past_value",r.dataType,r.dims));let l=a?sn("seq_lens",a.dataType,a.dims):void 0;a&&o.push(l);let u=i?sn("total_sequence_length_input",i.dataType,i.dims):void 0;i&&o.push(u);let p=[on("output",t.dataType,h)];c&&p.push(on("present_value",t.dataType,m));return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${s.type.value}, 144>;\n  var<workgroup> tileV: array<${s.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}]).declareVariables(...o,...p)}\n  ${e.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z % uniforms.num_heads;\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let kvHeadIdx = ${1===d?"headIdx":"headIdx / uniforms.n_reps"};\n   let kv_num_heads = ${1===d?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};\n   let m = global_id.y;\n   let n = global_id.x;\n   let sequence_length = uniforms.M;\n   var total_sequence_length = uniforms.K;\n   ${wr(l,u,!0)}\n   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;\n   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch\n   ${w&&c?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};\n   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;\n   ${c?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}\n   var value = ${s.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        var idx = TILE_SIZE * local_id.y + local_id.x;\n        ${w&&c?"\n        if (w + local_id.y < past_sequence_length) {\n          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];\n        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {\n          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];\n        }\n      ":"\n            if (w + local_id.y < uniforms.kv_sequence_length) {\n              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];\n            }"}\n        ${c?"\n            if (w + local_id.y < present_sequence_length) {\n          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];\n        }":""}\n      }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + headIdx * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},xr=(e,t,n,r,s,o,a,i,l,d,u=void 0,c=void 0)=>{let p=Math.min(e.outputCount,1+(a?1:0)+(i?1:0)),m=p>1?d.pastSequenceLength:0,h=m+d.kvSequenceLength,f=l&&gt.size(l.dims)>0?l:void 0,_=[t,n];p>1&&a&&gt.size(a.dims)>0&&_.push(a),f&&_.push(f),u&&_.push(u),c&&_.push(c);let g=e.compute(yr(p,t,n,a,f,d,m,u,c),{inputs:_,outputs:p>1?[-1,1]:[-1]})[0];e.compute(br(g,d.batchSize,d.numHeads,m,d.sequenceLength,h,u,c),{inputs:u&&c?[g,u,c]:[g],outputs:[]});let w=[g,r];p>1&&i&&gt.size(i.dims)>0&&w.push(i),u&&w.push(u),c&&w.push(c),e.compute(Mr(p,g,r,i,d,m,u,c),{inputs:w,outputs:p>1?[0,2]:[0]})},vr=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,s=t.inputHiddenSize,o=t.headSize,a=12,i={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],d=[{type:12,data:r},{type:12,data:s},{type:12,data:o},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:i,programUniforms:d}),getShaderSource:e=>{let t=on("output_q",l[0].dataType,n),r=on("output_k",l[0].dataType,n),s=on("output_v",l[0].dataType,n),o=sn("input",l[0].dataType,l[0].dims),i=sn("weight",l[1].dataType,l[1].dims),d=sn("bias",l[2].dataType,l[2].dims),u=o.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${u}, 144>;\n  var<workgroup> tileWeightQ: array<${u}, 144>;\n  var<workgroup> tileWeightK: array<${u}, 144>;\n  var<workgroup> tileWeightV: array<${u}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(o,i,d,t,r,s)}\n  ${e.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${u}(0);\n    var valueK = ${u}(0);\n    var valueV = ${u}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:l,outputs:[-1,-1,-1]})},Tr=(e,t)=>{let n=gr(e.inputs,t),[r,s,o]=vr(e,n);return xr(e,r,s,o,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n)}})),kd=R((()=>{le(),dd(),pd(),wd(),bd(),kr=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},Pr=(e,t)=>{let{epsilon:n,spatial:r,format:s}=t,o=e[0].dims,a=r?Yt(o[o.length-1]):1,i="NHWC"===s&&o.length>1?a:1,l=gt.size(o)/a,d=r,u=d?o.length:o,c=sn("x",e[0].dataType,e[0].dims,a),p=sn("scale",e[1].dataType,e[1].dims,i),m=sn("bias",e[2].dataType,e[2].dims,i),h=sn("inputMean",e[3].dataType,e[3].dims,i),f=sn("inputVar",e[4].dataType,e[4].dims,i),_=on("y",e[0].dataType,u,a);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${a}`,inputDependencies:d?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,m,h,f,_)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===o.length?"0u":"NHWC"===s?`outputIndices[${o.length-1}] / ${a}`:"outputIndices[1]"};`;else if("NCHW"===s)e=`\n            ${_.indicesSet("outputIndices","0","0")}\n            let cOffset = ${_.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${o.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${m.getByOffset("cOffset")};\n    let inputMean = ${h.getByOffset("cOffset")};\n    let inputVar = ${f.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${_.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d?[{type:12,data:l},...Jt(o)]:[{type:12,data:l}]})}},$r=e=>Wt(e),Cr=(e,t)=>{let{inputs:n,outputCount:r}=e,s=$r({...t,outputCount:r});if(p.webgpu.validateInputContent&&kr(n,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Pr(n,s))}})),Pd=R((()=>{pd(),bd(),Sr=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Fr=e=>{let t=e[0].dims,n=e[0].dims[2],r=gt.size(t)/4,s=e[0].dataType,o=sn("input",s,t,4),a=sn("bias",s,[n],4),i=sn("residual",s,t,4),l=on("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(o,a,i,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${o.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${i.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},Er=e=>{Sr(e.inputs),e.compute(Fr(e.inputs))}})),$d=R((()=>{dd(),pd(),wd(),bd(),Ir=(e,t,n,r,s,o,a)=>{let i=Math.ceil(t/4),l="";l="string"==typeof s?`${s}(a)`:s("a");let d=sn("inputData",n,[i],4),u=on("outputData",r,[i],4),c=[{name:"vec_size",type:"u32"}];return a&&c.push(...a),`\n      ${e.registerUniforms(c).declareVariables(d,u)}\n\n  ${o??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${d.getByOffset("global_idx")};\n    ${u.setByOffset("global_idx",l)}\n  }`},Ar=(e,t,n,r,s,o=e.dataType,a,i)=>{let l=[{type:12,data:Math.ceil(gt.size(e.dims)/4)}];return a&&l.push(...a),{name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:t=>Ir(t,gt.size(e.dims),e.dataType,o,n,r,i),getRunData:t=>({outputs:[{dims:e.dims,dataType:o}],dispatchGroup:{x:Math.ceil(gt.size(t[0].dims)/64/4)},programUniforms:l})}},zr=e=>{e.compute(Ar(e.inputs[0],"Abs","abs"))},Lr=e=>{e.compute(Ar(e.inputs[0],"Acos","acos"))},Or=e=>{e.compute(Ar(e.inputs[0],"Acosh","acosh"))},Dr=e=>{e.compute(Ar(e.inputs[0],"Asin","asin"))},Br=e=>{e.compute(Ar(e.inputs[0],"Asinh","asinh"))},Nr=e=>{e.compute(Ar(e.inputs[0],"Atan","atan"))},Rr=e=>{e.compute(Ar(e.inputs[0],"Atanh","atanh"))},jr=e=>Wt(e),Vr=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Ar(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},Gr=e=>{let t,n,r=e.length>=2&&0!==e[1].data,s=e.length>=3&&0!==e[2].data;switch(e[0].dataType){case 1:t=r?e[1].getFloat32Array()[0]:-34028234663852886e22,n=s?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:t=r?e[1].getUint16Array()[0]:64511,n=s?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Wt({min:t,max:n})},qr=(e,t)=>{let n=t||Gr(e.inputs),r=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"Clip",(e=>`clamp(${e}, vec4<${r}>(uniforms.min), vec4<${r}>(uniforms.max))`),void 0,n.cacheKey,void 0,[{type:e.inputs[0].dataType,data:n.min},{type:e.inputs[0].dataType,data:n.max}],[{name:"min",type:r},{name:"max",type:r}]),{inputs:[0]})},Ur=e=>{e.compute(Ar(e.inputs[0],"Ceil","ceil"))},Wr=e=>{e.compute(Ar(e.inputs[0],"Cos","cos"))},Hr=e=>{e.compute(Ar(e.inputs[0],"Cosh","cosh"))},Qr=e=>Wt(e),Kr=(e,t)=>{let n=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Xr=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Jr=e=>{let t=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),Xr(t)))},Yr=e=>{e.compute(Ar(e.inputs[0],"Exp","exp"))},Zr=e=>{e.compute(Ar(e.inputs[0],"Floor","floor"))},es=e=>{let t=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),Xr(t)))},ts=(e,t)=>{let n=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},ns=e=>{e.compute(Ar(e.inputs[0],"Not",(e=>`!${e}`)))},rs=e=>{e.compute(Ar(e.inputs[0],"Neg",(e=>`-${e}`)))},ss=e=>{e.compute(Ar(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},os=e=>{let t=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},as=e=>{e.compute(Ar(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},is=e=>Wt(e),ls=(e,t)=>{let n=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},ds=e=>{e.compute(Ar(e.inputs[0],"Sin","sin"))},us=e=>{e.compute(Ar(e.inputs[0],"Sinh","sinh"))},cs=e=>{e.compute(Ar(e.inputs[0],"Sqrt","sqrt"))},ps=e=>{e.compute(Ar(e.inputs[0],"Tan","tan"))},ms=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,hs=e=>{e.compute(Ar(e.inputs[0],"Tanh",ms))},fs=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${ms("v")};\n}\n`,_s=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,gs=e=>{let t=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"FastGelu",_s,fs(t),void 0,e.inputs[0].dataType))},ws=(e,t)=>{let n=Xt(e.inputs[0].dataType);return e.compute(Ar(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},bs=e=>{e.compute(Ar(e.inputs[0],"Log","log"))},ys=(e,t)=>`\nconst alpha = vec4<${e}>(${t});\nconst one = ${e}(1.0);\nconst zero = ${e}(0.0);\n\nfn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {\n  let v = x *alpha;\n  var x1 : vec4<${e}>;\n  for (var i = 0; i < 4; i = i + 1) {\n    if (v[i] >= zero) {\n      x1[i] = one / (one + exp(-v[i]));\n    } else {\n      x1[i] = one - one / (one + exp(v[i]));\n    }\n  }\n  return x * x1;\n}\n`,Ms=e=>`quick_gelu_impl(${e})`,xs=(e,t)=>{let n=Xt(e.inputs[0].dataType);e.compute(Ar(e.inputs[0],"QuickGelu",Ms,ys(n,t.alpha),t.cacheKey,e.inputs[0].dataType))}})),Cd=R((()=>{pd(),bd(),$d(),vs=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Ts=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=sn("input",e[0].dataType,e[0].dims,4),r=sn("bias",e[0].dataType,[e[0].dims[2]],4),s=on("output",e[0].dataType,t,4),o=gt.size(t)/4,a=Kt(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,s)}\n\n  ${Xr(a)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${s.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},ks=e=>{vs(e.inputs),e.compute(Ts(e.inputs))}})),Sd=R((()=>{dd(),pd(),bd(),Ps=(e,t,n,r,s,o,a,i,l,d,u,c)=>{let p,m;"string"==typeof i?p=m=(e,t)=>`${i}((${e}),(${t}))`:"function"==typeof i?p=m=i:(p=i.scalar,m=i.vector);let h,f=on("outputData",u,r.length,4),_=sn("aData",l,t.length,4),g=sn("bData",d,n.length,4);if(s)if(o){let e=1===gt.size(t),r=1===gt.size(n),s=t.length>0&&t[t.length-1]%4==0,o=n.length>0&&n[n.length-1]%4==0;h=e||r?f.setByOffset("global_idx",m(e?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"),r?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"))):`\n            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${_.broadcastedIndicesToOffset("outputIndices",f)};\n            let offsetB = ${g.broadcastedIndicesToOffset("outputIndices",f)};\n            ${f.setByOffset("global_idx",m(a||s?_.getByOffset("offsetA / 4u"):`${_.type.value}(${_.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||o?g.getByOffset("offsetB / 4u"):`${g.type.value}(${g.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else h=f.setByOffset("global_idx",m(_.getByOffset("global_idx"),g.getByOffset("global_idx")));else{if(!o)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,s=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${f.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let offsetB${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,f)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,s)});\n          `};h=9===u?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(_,g,f)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},$s=(e,t,n,r,s,o,a=n.dataType)=>{let i=n.dims.map((e=>Number(e)??1)),l=r.dims.map((e=>Number(e)??1)),d=!gt.areEqual(i,l),u=i,c=gt.size(i),p=!1,m=!1,h=[d];if(d){let e=_t.calcShape(i,l,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");u=e.slice(),c=gt.size(u);let t=1===gt.size(i),n=1===gt.size(l),r=i.length>0&&i[i.length-1]%4==0,s=l.length>0&&l[l.length-1]%4==0;h.push(t),h.push(n),h.push(r),h.push(s);let o=1;for(let e=1;e<u.length;e++){let t=i[i.length-e];if(t!==l[l.length-e])break;o*=t}o%4==0?(m=!0,p=!0):(t||n||r||s)&&(p=!0)}else p=!0;return h.push(p),{name:e,shaderCache:{hint:t+h.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>Ps(e,i,l,u,p,d,m,s,n.dataType,r.dataType,a,o),getRunData:()=>({outputs:[{dims:u,dataType:a}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:Math.ceil(gt.size(u)/4)},...Jt(i,l,u)]})}},Cs=(e,t,n,r,s,o)=>{e.compute($s(t,s??"",e.inputs[0],e.inputs[1],n,r,o))},Ss=e=>{Cs(e,"Add",((e,t)=>`${e}+${t}`))},Fs=e=>{Cs(e,"Div",((e,t)=>`${e}/${t}`))},Es=e=>{Cs(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},Is=e=>{Cs(e,"Mul",((e,t)=>`${e}*${t}`))},As=e=>{let t=sn("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Cs(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},zs=e=>{Cs(e,"Sub",((e,t)=>`${e}-${t}`))},Ls=e=>{Cs(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},Os=e=>{Cs(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},Ds=e=>{Cs(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},Bs=e=>{Cs(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),Fd=R((()=>{dd(),pd(),wd(),bd(),Ns=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,s=n.dims.length;e.forEach(((e,o)=>{if(0!==o){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==s)throw new Error("input tensors should have the same shape");e.dims.forEach(((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")}))}}))},Rs=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,js=(e,t)=>{let n=e.length,r=[];for(let s=0;s<n;++s){let o=t.setByOffset("global_idx",e[s].getByIndices("indices"));1===n?r.push(o):0===s?r.push(`if (inputIndex == ${s}u) { ${o} }`):s===n-1?r.push(`else { ${o} }`):r.push(`else if (inputIndex == ${s}) { ${o} }`)}return r.join("\n")},Vs=(e,t,n,r)=>{let s=gt.size(n),o=new Array(e.length),a=new Array(e.length),i=0,l=[],d=[],u=[{type:12,data:s}];for(let n=0;n<e.length;++n)i+=e[n].dims[t],o[n]=i,d.push(e[n].dims.length),a[n]=sn(`input${n}`,r,d[n]),l.push("rank"),u.push({type:12,data:o[n]});for(let t=0;t<e.length;++t)u.push(...Jt(e[t].dims));u.push(...Jt(n));let c=on("output",r,n.length),p=c.indicesGet("indices",t),m=Array.from(Array(o.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...a,c)})()}\n\n  ${Rs(o.length,m)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${o.length}u>(${m});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${js(a,c)}\n  }`}},Gs=(e,t)=>{let n=e.inputs,r=n[0].dims,s=gt.normalizeAxis(t.axis,r.length);Ns(n,s);let o=r.slice();o[s]=n.reduce(((e,t)=>e+(t.dims.length>s?t.dims[s]:0)),0);let a=n.filter((e=>gt.size(e.dims)>0));e.compute(Vs(a,s,o,n[0].dataType),{inputs:a})},qs=e=>Wt({axis:e.axis})})),Ed=R((()=>{dd(),pd(),Us=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"Tanh":return"let e2x = exp(-2.0 * abs(value));\n              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);\n        ";case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ws=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},Hs=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},Qs=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[yt,Mt];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),Id=R((()=>{Ks=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Xs=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),Ad=R((()=>{Js=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),zd=R((()=>{dd(),pd(),bd(),Ed(),Ys=(e,t,n,r,s)=>{let o=r-n;return`\n      ${Array.from({length:n}).map(((n,a)=>`\n      if (${nn(t.shape,a,t.rank)} != 1) {\n        ${t.indicesSet(e,a,nn(s,a+o,r))}\n      } else {\n        ${t.indicesSet(e,a,0)}\n      }`)).join("")}\n`},Zs=(e,t,n,r,s=!1,o)=>{let a=e[0].dims,i=e[1].dims,l=a[a.length-2],d=i[i.length-1],u=a[a.length-1],c=Yt(d),p=Yt(u),m=Yt(l),h=gt.size(n)/c/m,f=e.length>2,_=r?r.slice(0,-2):n.slice(0,-2),g=[gt.size(_),l,d],w=[{type:12,data:h},{type:12,data:l},{type:12,data:d},{type:12,data:u}];Ws(t,w),w.push(...Jt(_,a,i)),f&&w.push(...Jt(e[2].dims)),w.push(...Jt(g));return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${c};${p};${m};${s}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:o?o(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:w}),getShaderSource:r=>{let o=ln("batch_dims",e[0].dataType,_.length),l=sn("a",e[0].dataType,a.length,p),d=sn("b",e[1].dataType,i.length,c),u=on("output",e[0].dataType,g.length,c),h=Kt(u.type.tensor),w=Us(t,u.type.value,h),b=[l,d],y="";if(f){let t=s?c:1;b.push(sn("bias",e[2].dataType,e[2].dims.length,t)),y=""+(s?`value += bias[col / ${t}];`:`value += ${u.type.value}(bias[row + i]);`)}let M=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Hs(t,M);return`\n  ${r.registerUniforms(M).registerInternalVariables(o).declareVariables(...b,u)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${c})) * ${c};\n    var index1 = global_idx / (uniforms.N / ${c});\n    let stride1 = uniforms.M / ${m};\n    let row = (index1 % stride1) * ${m};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${o.offsetToIndices("batch")};`}\n\n    var a_indices: ${l.type.indices};\n    ${Ys("a_indices",l,l.rank-2,o.rank,"batch_indices")}\n    ${l.indicesSet("a_indices",l.rank-2,0)}\n    ${l.indicesSet("a_indices",l.rank-1,0)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n\n    var b_indices: ${d.type.indices};\n    ${Ys("b_indices",d,d.rank-2,o.rank,"batch_indices")}\n    ${d.indicesSet("b_indices",d.rank-2,0)}\n    ${d.indicesSet("b_indices",d.rank-1,0)}\n    let b_offset = ${d.indicesToOffset("b_indices")};\n    var values: array<${u.type.value}, ${m}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${p}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<p;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${c}];`;for(let t=0;t<m;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${p}];`;for(let n=0;n<p;n++)e+=`\n            values[${t}] = fma(${d.type.value}(a_data${1===p?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${m}u; i++) {\n      var value = values[i];\n      ${y}\n      ${w}\n      let cur_indices = ${u.type.indices}(batch, row + i, col);\n      let offset = ${u.indicesToOffset("cur_indices")};\n      ${u.setByOffset(`offset / ${c}`,"value")};\n    }\n  }\n  `}}}})),Ld=R((()=>{dd(),pd(),bd(),Ed(),zd(),Id(),eo=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,to=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,no=(e,t,n="f32",r,s=!1,o=32,a=!1,i=32)=>{let l=t[1]*e[1],d=t[0]*e[0],u=s?l:o,c=s?o:l,p=u/t[0],m=o/t[1];if((!s||4!==p||4!==e[1])&&(s||3!==p&&4!==p)||u%t[0]!=0||o%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${s} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${u} must be divisible by workgroupSize[0]${t[0]}. tileInner ${o} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${u/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${d/e[0]}>, ${o}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${a?`${Math.ceil(i/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${m};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${eo(s,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${to(s,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},ro=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,so=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",oo=(e,t,n="f32",r,s=!1,o=32,a=!1,i=32,l=!1)=>{let d=e[1]*t[1],u=e[0]*t[0],c=s?d:o,p=s?o:d;if(p%t[1]!=0||c%t[0]!=0||o%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${o} must be divisible by workgroupSize[1]${t[1]}`);let m=p/t[1],h=c/t[0],f=o/t[1],_=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${d};\n    let globalColStart = i32(workgroupId.x) * ${u};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${ro(s,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${o}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${d};\n\nlet tileRowA = i32(localId.y) * ${m};\nlet tileColA = i32(localId.x) * ${h};\nlet tileRowB = i32(localId.y) * ${f};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${h}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${ro(s,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${f}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${so(s)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${u}>, ${o}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${o};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(i/o)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n    ${_}\n  }\n`},ao=(e,t,n,r,s=!1)=>{let[o,a,i,l]=r,d=Kt(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${Ks(e,d)} {\n      var value = ${Ks(e,d)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        var aIndices: ${a.type.indices};\n        ${Ys("aIndices",a,a.rank-2,o.rank,"batchIndices")}\n        ${a.indicesSet("aIndices",a.rank-2,"u32(row)")}\n        ${a.indicesSet("aIndices",a.rank-1,"u32(colIn)")}\n        value = ${a.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${o.type.indices}) -> ${Ks(e,d)} {\n      var value = ${Ks(e,d)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        var bIndices: ${i.type.indices};\n        ${Ys("bIndices",i,i.rank-2,o.rank,"batchIndices")}\n        ${i.indicesSet("bIndices",i.rank-2,"u32(row)")}\n        ${i.indicesSet("bIndices",i.rank-1,"u32(colIn)")}\n        value = ${i.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Ks(e,d)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${s?"bias[colIn]":`${Ks(e,d)}(bias[row])`};`:""}\n        ${n}\n        ${l.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},io=(e,t,n,r,s=!1,o)=>{let a=e[0].dims,i=e[1].dims,l=a.slice(0,-2),d=i.slice(0,-2),u=r?r.slice(0,-2):n.slice(0,-2),c=gt.size(u),p=a[a.length-2],m=a[a.length-1],h=i[i.length-1],f=m%4==0&&h%4==0,_=p<=8?[4,1,1]:[4,4,1],g=[8,8,1],w=[Math.ceil(h/g[0]/_[0]),Math.ceil(p/g[1]/_[1]),Math.ceil(c/g[2]/_[2])],b=f?4:1,y=[...l,p,m/b],M=y.length,x=[...d,m,h/b],v=x.length,T=[c,p,h/b],k=[{type:6,data:p},{type:6,data:h},{type:6,data:m}];Ws(t,k),k.push(...Jt(u,y,x));let P=["rank","rank"],$=e.length>2;$&&(k.push(...Jt(e[2].dims)),P.push("rank")),k.push(...Jt(T));return{name:"MatMul",shaderCache:{hint:`${_};${t.activation};${f};${s}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:o?o(n):n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:k}),getShaderSource:n=>{let r=u.length,o=ln("batchDims",e[0].dataType,r,1),a=Kt(e[0].dataType),i=sn("a",e[0].dataType,M,b),l=sn("b",e[1].dataType,v,b),d=on("result",e[0].dataType,T.length,b),c=[i,l];if($){let t=s?b:1;c.push(sn("bias",e[2].dataType,e[2].dims.length,t))}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Hs(t,p);let m=Kt(d.type.tensor),h=Us(t,d.type.value,m),w=ao(b,$,h,[o,i,l,d],s);return`\n  ${n.registerUniforms(p).registerInternalVariables(o).declareVariables(...c,d)}\n  ${w}\n  ${f?no(_,g,a,o):oo(_,g,a,o)}\n                   `}}}})),Od=R((()=>{dd(),cd(),bd(),Ed(),Id(),Ad(),Ld(),lo=(e,t,n,r,s=!1,o,a=4,i=4,l=4,d="f32")=>{let u=e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}},c=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",p=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",m=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",_=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${_} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${_} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${_} % inChannels;\n    var resData = ${Ks(a,d)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${m} && xCol >= 0 && xCol < ${h}) {\n      ${c}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${d}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\n    }\n    return resData;`,w=e?t&&r?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${Ks(a,d)}(0.0);`:r&&n?`\n    let col = colIn * ${a};\n    ${g}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${Ks(a,d)}(0.0);`,b=e?r&&n?u(i):`\n    let col = colIn * ${i};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${u(i)}\n    }\n    return ${Ks(i,d)}(0.0);`:`\n    let col = colIn * ${i};\n    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {\n      ${u(i)}\n    }\n    return ${Ks(i,d)}(0.0);`,y=Ks(l,d),M=Ks(e?a:i,d),x=Ks(e?i:a,d),v=Us(o,y,d);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${M} {\n      ${e?w:b}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {\n      ${e?b:w}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${y}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${p}\n      ${Xs(s)}\n      ${v}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},uo=(e,t,n,r,s,o,a,i,l)=>{let d="NHWC"===t.format,u=d?e[0].dims[3]:e[0].dims[1],c=n[0],p=d?n[2]:n[3],m=d?n[1]:n[2],h=d?n[3]:n[1],f=d&&(u%4==0||u%3==0)&&h%4==0,_=d?h:p*m,g=d?p*m:h,w=[8,8,1],b=r<=8?[4,1,1]:[4,4,1],y=[Math.ceil(_/w[0]/b[0]),Math.ceil(g/w[1]/b[1]),Math.ceil(c/w[2]/b[2])];ht("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${y}`));let M=f?d&&u%4!=0?3:4:1,x=w[1]*b[1],v=w[0]*b[0],T=Math.max(w[0]*M,w[1]),k=r%x==0,P=s%v==0,$=o%T==0,C=f?[M,4,4]:[1,1,1],S=[{type:6,data:r},{type:6,data:s},{type:6,data:o},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ws(t,S),S.push(...Jt(e[0].dims,e[1].dims));let F=["rank","rank"];a&&(S.push(...Jt(e[2].dims)),F.push("rank")),S.push(...Jt(n));return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${M};${f};${k};${P};${$};${x};${v};${T}`,inputDependencies:F},getRunData:()=>({outputs:[{dims:l?l(n):n,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:S}),getShaderSource:r=>{let s=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Hs(t,s);let o=f?4:1,l=Kt(e[0].dataType),u=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${l}>`:l}) {\n        result[flatIndex] = ${f?`vec4<${l}>`:l}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${l}>`:l}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,c=[sn("x",e[0].dataType,e[0].dims.length,3===M?1:M),sn("w",e[1].dataType,e[1].dims.length,o)],p=on("result",e[0].dataType,n.length,o);if(a){let t=sn("bias",e[2].dataType,e[2].dims.length,o);c.push(t),u+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${l}>`:l} {\n          return bias[coords.${d?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${Js("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(s).declareVariables(...c,p)}\n        ${u}\n        ${lo(d,k,P,$,a,t,C[0],C[1],C[2],l)}\n        ${f?no(b,w,l,void 0,!d,T):oo(b,w,l,void 0,!d,T,!1,void 0,i)}`}}}})),Dd=R((()=>{dd(),cd(),pd(),bd(),Ed(),Id(),co=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t},po=e=>"number"==typeof e?[e,e,e]:e,mo=(e,t)=>t<=1?e:e+(e-1)*(t-1),ho=(e,t,n,r=1)=>{let s=mo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)},fo=(e,t,n,r,s)=>{null==s&&(s=ho(e,t[0],r[0]));let o=[0,0,0,n];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(o[n]=Math.trunc((e[n]-t[n]+2*s)/r[n]+1));return o},_o=(e,t,n,r,s,o,a,i,l,d)=>{let u,c,p,m;if("VALID"===e&&(e=0),"number"==typeof e){u={top:e,bottom:e,left:e,right:e,front:e,back:e};let h=fo([t,n,r,1],[i,l,d],1,[s,o,a],e);c=h[0],p=h[1],m=h[2]}else if(Array.isArray(e)){if(!e.every(((e,t,n)=>e===n[0])))throw Error(`Unsupported padding parameter: ${e}`);u={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let h=fo([t,n,r,1],[i,l,d],1,[s,o,a],e[0]);c=h[0],p=h[1],m=h[2]}else{if("SAME_UPPER"!==e)throw Error(`Unknown padding parameter: ${e}`);{c=Math.ceil(t/s),p=Math.ceil(n/o),m=Math.ceil(r/a);let e=(c-1)*s+i-t,h=(p-1)*o+l-n,f=(m-1)*a+d-r,_=Math.floor(e/2),g=e-_,w=Math.floor(h/2),b=h-w,y=Math.floor(f/2);u={top:w,bottom:b,left:y,right:f-y,front:_,back:g}}}return{padInfo:u,outDepth:c,outHeight:p,outWidth:m}},go=(e,t,n,r,s,o=!1,a="channelsLast")=>{let i,l,d,u,c;if("channelsLast"===a)[i,l,d,u,c]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[i,c,l,d,u]=e}let[p,,m,h,f]=t,[_,g,w]=po(n),[b,y,M]=po(r),x=mo(m,b),v=mo(h,y),T=mo(f,M),{padInfo:k,outDepth:P,outHeight:$,outWidth:C}=_o(s,l,d,u,_,g,w,x,v,T),S=o?p*c:p,F=[0,0,0,0,0];return"channelsFirst"===a?F=[i,S,P,$,C]:"channelsLast"===a&&(F=[i,P,$,C,S]),{batchSize:i,dataFormat:a,inDepth:l,inHeight:d,inWidth:u,inChannels:c,outDepth:P,outHeight:$,outWidth:C,outChannels:S,padInfo:k,strideDepth:_,strideHeight:g,strideWidth:w,filterDepth:m,filterHeight:h,filterWidth:f,effectiveFilterDepth:x,effectiveFilterHeight:v,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:y,dilationWidth:M,inShape:e,outShape:F,filterShape:t}},wo=(e,t,n,r,s,o)=>{let a="channelsLast"===o,i=(a?e[0].dims[3]:e[0].dims[1],{x:n.map(((e,t)=>t))}),l=[Math.ceil(co(i.x.map((e=>n[e])))/64),1,1];ht("verbose",(()=>`[conv3d_naive_webgpu] dispatch = ${l}`));let d=[{type:12,data:gt.size(n)},{type:12,data:r},{type:12,data:s},{type:12,data:t.strides},{type:12,data:t.dilations}];Ws(t,d),d.push(...Jt(e[0].dims,e[1].dims));let u=["rank","rank"],c=3===e.length;c&&(d.push(...Jt(e[2].dims)),u.push("rank")),d.push(...Jt(n));return{name:"Conv3DNaive",shaderCache:{hint:`${t.cacheKey};${a};1;${c}`,inputDependencies:u},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:l[0],y:l[1],z:l[2]},programUniforms:d}),getShaderSource:o=>{let i=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:r.length},{name:"pads",type:"u32",length:s.length},{name:"strides",type:"u32",length:t.strides.length},{name:"dilations",type:"u32",length:t.dilations.length}];Hs(t,i);let l=Kt(e[0].dataType),d=sn("x",e[0].dataType,e[0].dims.length,1),u=sn("W",e[1].dataType,e[1].dims.length,1),p=[d,u],m=on("result",e[0].dataType,n.length,1),h="";if(c){let t=sn("bias",e[2].dataType,e[2].dims.length,1);p.push(t),h+=`\n        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${l} {\n          return bias[${nn("coords",a?4:1,5)}];\n        }`}let f=Ks(1,l),_=Us(t,f,l);return`\n            ${h}\n            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${d.getByIndices("aIndices")};\n            }\n            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {\n              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);\n              return ${u.getByIndices("aIndices")};\n            }\n          ${o.registerUniforms(i).declareVariables(...p,m)}\n          ${o.mainStart()}\n          ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n              let coords = ${m.offsetToIndices("global_idx")};\n              let batch = ${nn("coords",0,d.rank)};\n              let d2 = ${nn("coords",a?d.rank-1:1,d.rank)};\n              let xFRCCorner = vec3<u32>(${nn("coords",a?1:2,d.rank)},\n              ${nn("coords",a?2:3,d.rank)},\n              ${nn("coords",a?3:4,d.rank)}) * uniforms.strides - uniforms.pads;\n              let xFCorner = xFRCCorner.x;\n              let xRCorner = xFRCCorner.y;\n              let xCCorner = xFRCCorner.z;\n              let xShapeY = ${nn("uniforms.x_shape",a?1:2,d.rank)};\n              let xShapeZ = ${nn("uniforms.x_shape",a?2:3,d.rank)};\n              let xShapeW = ${nn("uniforms.x_shape",a?3:4,d.rank)};\n              let xShapeU = ${nn("uniforms.x_shape",a?4:1,d.rank)};\n              let inputDepthNearestVec4 = (xShapeU / 4) * 4;\n              let inputDepthVec4Remainder = xShapeU % 4;\n\n              var value = 0.0;\n              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {\n                let xF = xFCorner + wF * uniforms.dilations[0];\n                if (xF < 0 || xF >= xShapeY) {\n                  continue;\n                }\n\n                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {\n                  let xR = xRCorner + wR * uniforms.dilations[1];\n                  if (xR < 0 || xR >= xShapeZ) {\n                    continue;\n                  }\n\n                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {\n                    let xC = xCCorner + wC * uniforms.dilations[2];\n                    if (xC < 0 || xC >= xShapeW) {\n                      continue;\n                    }\n\n                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {\n                      ${a?"let xValues = vec4<f32>(\n                               getX(batch, xF, xR, xC, d1),\n                               getX(batch, xF, xR, xC, d1 + 1),\n                               getX(batch, xF, xR, xC, d1 + 2),\n                               getX(batch, xF, xR, xC, d1 + 3));\n                            ":"let xValues = vec4<f32>(\n                               getX(batch, d1, xF, xR, xC),\n                               getX(batch, d1 + 1, xF, xR, xC),\n                               getX(batch, d1 + 2, xF, xR, xC),\n                               getX(batch, d1 + 3, xF, xR, xC));\n                            "}\n                            let wValues = vec4<f32>(\n                              getW(d2, d1, wF, wR, wC),\n                              getW(d2, d1 + 1, wF, wR, wC),\n                              getW(d2, d1 + 2, wF, wR, wC),\n                              getW(d2, d1 + 3, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                    if (inputDepthVec4Remainder == 1) {\n                        ${a?"value += getX(batch, xF, xR, xC, inputDepthNearestVec4)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);":"value += getX(batch, inputDepthNearestVec4, xF, xR, xC)\n                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);"}\n                    } else if (inputDepthVec4Remainder == 2) {\n                      ${a?"let xValues = vec2<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));\n                      ":"let xValues = vec2<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));\n                    "}\n                    let wValues = vec2<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    } else if (inputDepthVec4Remainder == 3) {\n                      ${a?"let xValues = vec3<f32>(\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),\n                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));\n                      ":"let xValues = vec3<f32>(\n                        getX(batch, inputDepthNearestVec4, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),\n                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));\n                    "}\n                    let wValues = vec3<f32>(\n                      getW(d2, inputDepthNearestVec4, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),\n                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));\n                      value += dot(xValues, wValues);\n                    }\n                  }\n                }\n              }\n              ${c?"value = value + getBiasByOutputCoords(coords)":""};\n              ${_}\n              result[global_idx] = f32(value);\n          }`}}}})),Bd=R((()=>{dd(),pd(),bd(),Ed(),bo=(e,t,n,r)=>{let s=e.length>2,o=s?"value += b[output_channel];":"",a=e[0].dims,i=e[1].dims,l="NHWC"===t.format,d=l?n[3]:n[1],u=d/t.group,c=l&&u>=4?Yt(d):1,p=gt.size(n)/c,m=[{type:12,data:p},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:u}];Ws(t,m),m.push(...Jt(a,[i[0],i[1],i[2],i[3]/c]));let h=s?["rank","rank","rank"]:["rank","rank"];m.push(...Jt([n[0],n[1],n[2],n[3]/c]));return{name:"GroupedConv",shaderCache:{hint:`${t.cacheKey}_${c}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:r=>{let d=on("output",e[0].dataType,n.length,c),u=Kt(d.type.tensor),p=Us(t,d.type.value,u),m=sn("x",e[0].dataType,a.length),h=sn("w",e[1].dataType,i.length,c),f=[m,h];s&&f.push(sn("b",e[2].dataType,e[2].dims,c));let _=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Hs(t,_);let g=l?`\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {\n            let input_channel = in_channel_offset + wInChannel;\n            let xVal = ${m.get("batch","xHeight","xWidth","input_channel")};\n            let wVal = ${h.get("wHeight","wWidth","wInChannel","output_channel")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `:`\n      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n        let input_channel = in_channel_offset + wInChannel;\n        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {\n            continue;\n          }\n\n          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {\n              continue;\n            }\n\n            let xVal = ${m.get("batch","input_channel","xHeight","xWidth")};\n            let wVal = ${h.get("output_channel","wInChannel","wHeight","wWidth")};\n            value += xVal * wVal;\n          }\n        }\n      }\n      `;return`\n  ${r.registerUniforms(_).declareVariables(...f,d)}\n\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${d.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel * ${c} / uniforms.output_channels_per_group;\n    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];\n\n    var value: ${d.type.value} = ${d.type.value}(0);\n    ${g}\n    ${o}\n    ${p}\n    ${d.setByOffset("global_idx","value")}\n  }`}}},yo=(e,t,n,r)=>{let s=e.length>2,o=Yt(n[3]),a=Yt(n[2]),i=gt.size(n)/o/a,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/o],d=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/o],u=[n[0],n[1],n[2],n[3]/o],c=[{type:12,data:i},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Ws(t,c),c.push(...Jt(l,d,u));let p=(a-1)*t.strides[1]+d[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${o};${a};${p};${d[0]};${d[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r?r(n):n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}),getShaderSource:n=>{let r=on("output",e[0].dataType,u.length,o),i=Kt(r.type.tensor),c=Us(t,r.type.value,i),m=sn("x",e[0].dataType,l.length,o),h=sn("w",e[1].dataType,d.length,o),f=[m,h];s&&f.push(sn("b",e[2].dataType,e[2].dims,o));let _=s?"value += b[output_channel];":"",g=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Hs(t,g),`\n  ${n.registerUniforms(g).declareVariables(...f,r)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${a}u;\n    let col = (index1 % width1) * ${a}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${m.type.value}, ${p}>;\n    var values: array<${r.type.value}, ${a}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${d[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${p}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${m.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${m.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${d[1]}; w_width++) {\n          let w_val = ${h.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${a}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${a}u; i++) {\n      var value = values[i];\n      ${_}\n      ${c}\n      ${r.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}})),Nd=R((()=>{pd(),Od(),Dd(),Ld(),Bd(),Ed(),zd(),yd(),Mo=(e,t,n,r,s,o)=>{let a=e[0],i=e.slice(o?1:2,o?3:4),l=i.length,d=t[0],u=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=i.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-u[t]+s[t])/s[t])));return c.splice(0,0,a),c.splice(o?3:1,0,d),c},xo=[2,3,1,0],vo=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},To=(e,t)=>{let n=e.kernelShape.slice();n.length<t[1].dims.length-2&&n.push(...Array(t[1].dims.length-2-n.length).fill(0));for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let r=e.pads.slice();wt.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:n,pads:r}),s},ko=e=>{let t=Qs(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Po=(e,t,n,r)=>{let s="NHWC"===n.format,o=Mo(t[0].dims,t[1].dims,n.dilations,n.pads,n.strides,s);if(1!==n.group){let a=[t[0]];if(s){let r=e.kernelCustomData.wT??e.compute(gn(t[1],xo),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),a.push(r)}else a.push(t[1]);return 3===t.length&&a.push(t[2]),void(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]?e.compute(yo(a,n,o,r),{inputs:a}):e.compute(bo(a,n,o,r),{inputs:a}))}let a=3===t.length,i=t[0].dims[s?1:2],l=t[0].dims[s?2:3],d=t[0].dims[s?3:1],u=t[1].dims[2],c=t[1].dims[3],p=o[s?1:2],m=o[s?2:3],h=o[s?3:1],f=s&&u===i&&c===l&&0===n.pads[0]&&0===n.pads[1];if(f||1===u&&1===c&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let u,c,_,g=o[0],w=[];if(s){let r=e.kernelCustomData.wT??e.compute(gn(t[1],xo),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),f){let e=i*l*d;u=t[0].reshape([1,g,e]),c=r.reshape([1,e,h]),_=[1,g,h]}else u=t[0].reshape([g,i*l,d]),c=r.reshape([1,d,h]),_=[g,p*m,h];w.push(u),w.push(c)}else u=t[0].reshape([g,d,i*l]),c=t[1].reshape([1,h,d]),_=[g,h,p*m],w.push(c),w.push(u);a&&w.push(t[2]);let b=_[2],y=w[0].dims[w[0].dims.length-1];return void(b<8&&y<8?e.compute(Zs(w,n,o,_,s,r),{inputs:w}):e.compute(io(w,n,o,_,s,r),{inputs:w}))}let _=e.kernelCustomData.wT??e.compute(gn(t[1],xo),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=_);let g=[t[0],_];a&&g.push(t[2]);let w=s?p*m:h,b=s?h:p*m,y=u*c*d;e.compute(uo(g,n,o,w,b,y,a,!0,r),{inputs:g})},$o=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],o=[1].concat(t.strides),a=[1].concat(t.dilations),i=[1].concat(t.kernelShape),l=To({...t,pads:s,strides:o,dilations:a,kernelShape:i},r);Po(e,r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]]))},Co=(e,t,n)=>{let r="NHWC"===n.format?"channelsLast":"channelsFirst",s=To(n,t),o="NOTSET"===n.autoPad?n.pads:n.autoPad,a=go(t[0].dims,t[1].dims,n.strides,n.dilations,o,!1,r);e.compute(wo(t,s,a.outShape,[a.filterDepth,a.filterHeight,a.filterWidth],[a.padInfo.front,a.padInfo.top,a.padInfo.left],r))},So=(e,t)=>{if(vo(e.inputs,t),3===e.inputs[0].dims.length)$o(e,t);else if(5===e.inputs[0].dims.length)Co(e,e.inputs,t);else{let n=To(t,e.inputs);Po(e,e.inputs,n)}}})),Rd=R((()=>{dd(),cd(),pd(),bd(),Fo=(e,t,n)=>{let r=e.length>2,s=t.outputShape,o="NHWC"===t.format,a=t.group,i=e[1].dims,l=i[2]/a,d=i[3],u=o?Yt(l):1,c=o&&1===d&&l>=4,p=c?4*Math.floor(l/4):Math.floor(l/u)*u,m=l-p,h=o?Yt(d):1,f=o?1===d?u:h:1,_=gt.size(s)/h,g=[Math.ceil(_/64),1,1];ht("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${g}`));let w=["rank","rank"],b=[t.strides[0],t.strides[1]],y=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],M=[t.dilations[0],t.dilations[1]],x=[y[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),y[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],v=[x[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),x[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],T=[{type:12,data:_},{type:12,data:b},{type:12,data:y},{type:12,data:M},{type:12,data:x},{type:6,data:v},{type:12,data:p},{type:12,data:l},{type:12,data:d},...Jt(e[0].dims,e[1].dims)];r&&(T.push(...Jt(e[2].dims)),w.push("rank")),T.push(...Jt(s));return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};${u}${f}${h}${c}${m}`,inputDependencies:w},getRunData:()=>({dispatchGroup:{x:g[0],y:g[1],z:g[2]},outputs:[{dims:n?n(s):s,dataType:e[0].dataType}],programUniforms:T}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:b.length},{name:"filter_dims",type:"u32",length:y.length},{name:"dilations",type:"u32",length:y.length},{name:"effective_filter_dims",type:"u32",length:x.length},{name:"pads",type:"i32",length:v.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],a=Kt(e[0].dataType),i=o?1:2,l=o?2:3,d=o?3:1,p=sn("W",e[1].dataType,e[1].dims.length,f),_=sn("Dy",e[0].dataType,e[0].dims.length,u),g=[_,p];r&&g.push(sn("bias",e[2].dataType,[s[d]].length,h));let w=on("result",e[0].dataType,s.length,h),M=`\n            let outputIndices = ${w.offsetToIndices(`global_idx * ${h}`)};\n            let batch = ${w.indicesGet("outputIndices",0)};\n            let d1 = ${w.indicesGet("outputIndices",d)};\n            let r = ${w.indicesGet("outputIndices",i)};\n            let c = ${w.indicesGet("outputIndices",l)};\n            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n            let dyRCorner = dyCorner.x;\n            let dyCCorner = dyCorner.y;\n            let groupId = d1 / uniforms.output_channels_per_group;\n            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n            // ? = to be determined. : = across all values in that axis.\n            var dotProd = ${w.type.value}(0.0);\n            var wR: u32 = 0;\n            if (uniforms.dilations.x == 1) {\n              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0\n              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);\n            }\n            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n              if (wR % uniforms.dilations.x != 0) {\n                continue;\n              }\n              let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n              if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${i}]) || fract(dyR) > 0.0 ||\n                  wRPerm < 0) {\n                continue;\n              }\n              let idyR: u32 = u32(dyR);\n              var wC: u32 = 0;\n              if (uniforms.dilations.y == 1) {\n                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0\n                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);\n              }\n              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n                if (wC % uniforms.dilations.y != 0) {\n                  continue;\n                }\n                let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n                if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${l}]) ||\n                    fract(dyC) > 0.0 || wCPerm < 0) {\n                  continue;\n                }\n                let idyC: u32 = u32(dyC);\n                var inputChannel = groupId * uniforms.input_channels_per_group;\n                ${c?`\n                var x_offset = ${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${u};\n                var w_offset = ${p.indicesToOffset(`${p.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${f};\n                  `:""}\n                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${c?4:u}) {\n                  ${(()=>{let e="";if(c)4===u?e+=`\n        let xValue = ${_.getByOffset("x_offset")};\n        let wValue = ${p.getByOffset("w_offset")};\n        dotProd = dotProd + dot(xValue, wValue);\n        x_offset += 1u;\n        w_offset += 1u;`:2===u?e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}));\n          x_offset += 2u;\n          w_offset += 2u;`:1===u&&(e+=`\n          dotProd = dotProd + dot(vec4<${a}>(${_.getByOffset("x_offset")}, ${_.getByOffset("x_offset + 1u")}, ${_.getByOffset("x_offset + 2u")}, ${_.getByOffset("x_offset + 3u")}), vec4<${a}>(${p.getByOffset("w_offset")}, ${p.getByOffset("w_offset + 1u")}, ${p.getByOffset("w_offset + 2u")}, ${p.getByOffset("w_offset + 3u")}));\n          x_offset += 4u;\n          w_offset += 4u;`);else if(e+=`\n                  let xValue = ${o?_.getByOffset(`${_.indicesToOffset(`${_.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${u}`):_.get("batch","inputChannel","idyR","idyC")};\n        `,1===u)e+=`\n          let w_offset = ${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};\n          let wValue = ${p.getByOffset(`w_offset / ${f}`)};\n          dotProd = dotProd + xValue * wValue;`;else for(let t=0;t<u;t++)e+=`\n            let wValue${t} = ${p.getByOffset(`${p.indicesToOffset(`${p.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${t}, wOutChannel)`)} / ${f}`)};\n            dotProd = dotProd + xValue[${t}] * wValue${t};`;return e})()}\n                  inputChannel = inputChannel + ${c?4:u};\n                }\n                ${(()=>{if(0===m)return"";if(!c)throw new Error(`packInputAs4 ${c} is not true.`);let e="";if(1===u){e+="dotProd = dotProd";for(let t=0;t<m;t++)e+=`\n            + ${_.getByOffset(`x_offset + ${t}`)} * ${p.getByOffset(`w_offset + ${t}`)}`;e+=";"}else if(2===u){if(2!==m)throw new Error(`Invalid inputChannelsRemainder ${m}.`);e+=`\n          let xValue = ${_.getByOffset("x_offset")};\n          let wValue = ${p.getByOffset("w_offset")};\n          dotProd = dotProd + dot(xValue, wValue);`}return e})()}\n                wC = wC + uniforms.strides.y - 1;\n              }\n              wR = wR + uniforms.strides[0] - 1;\n            }\n            let value = dotProd${r?` + bias[d1 / ${h}]`:""};\n            ${w.setByOffset("global_idx","value")};\n          `;return`\n    ${t.registerUniforms(n).declareVariables(...g,w)}\n      ${t.mainStart()}\n      ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n    ${M}}`}}}})),jd=R((()=>{Rd(),Ed(),yd(),Eo=(e,t,n,r,s,o)=>(e-1)*t+n+(r-1)*s+1-o,Io=(e,t,n,r,s)=>{let o=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=o,n[s]=e-o):"SAME_LOWER"===t&&(n[r]=e-o,n[s]=o)},Ao=(e,t,n,r,s,o,a,i,l,d)=>{let u=e.length-2,c=0===d.length;l.length<u&&l.push(...Array(u-l.length).fill(0));let p=e[0],m=t[i?3:1]*s;for(let s=0,p=e.length-u-(i?1:0);s<u;++s,++p){let i=e[p],m=c?i*a[s]:d[s],h=Eo(i,a[s],o[s],t[p],n[s],m);Io(h,r,o,s,s+u),c&&d.push(a[s]*(i-1)+l[s]+(t[p]-1)*n[s]+1-o[s]-o[s+u])}d.splice(0,0,p),d.splice(i?3:1,0,m)},zo=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let s=e.pads.slice(),o=e.outputShape.slice(),a=e.outputPadding.slice(),i=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let d=e.strides.slice();if(0===d.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;d=new Array(e).fill(1)}Ao(i,n,l,e.autoPad,e.group,s,d,r,a,o);let u=Object.assign({},e);return Object.assign(u,{kernelShape:n,pads:s,outputPadding:a,outputShape:o,dilations:l,strides:d}),u},Lo=e=>{let t=Qs(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,o=e.group,a=e.kernelShape,i=e.pads,l=e.strides,d=e.wIsConst();return{autoPad:r,format:n,dilations:s,group:o,kernelShape:a,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:i,strides:l,wIsConst:d,...t,cacheKey:`${e.format};${t.activation};`}},Oo=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Do=(e,t,n,r)=>{let s=e.kernelCustomData.wT??e.compute(gn(t[1],[2,3,0,1]),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=s);let o=[t[0],s];3===t.length&&o.push(t[2]),e.compute(Fo(o,n,r),{inputs:o})},Bo=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let s=t.kernelShape;(0===s.length||0===s[0])&&(s=[e.inputs[1].dims[2]]);let o=t.dilations;(0===o.length||0===o[0])&&(o=[1]);let a=t.strides;(0===a.length||0===a[0])&&(a=[1]);let i=t.pads;0===i.length&&(i=[0,0]),i=[0,i[0],0,i[1]],a=[1].concat(a),o=[1].concat(o),s=[1].concat(s);let l=t.outputPadding;l=[0].concat(l);let d=zo({...t,pads:i,strides:a,dilations:o,kernelShape:s,outputPadding:l},r);Do(e,r,d,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]]))},No=(e,t)=>{if(Oo(e.inputs,t),3===e.inputs[0].dims.length)Bo(e,t);else{let n=zo(t,e.inputs);Do(e,e.inputs,n)}}})),Vd=R((()=>{dd(),pd(),wd(),bd(),Ro=(e,t,n,r)=>{let s=gt.size(t),o=t.length,a=sn("input",e,o),i=on("output",e,o),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),d=gt.normalizeAxis(l,o);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:12,data:d},...Jt(t,t)]}),getShaderSource:e=>{let t=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,n=nn("uniforms.input_shape","uniforms.axis",o),s=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,i)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${i.offsetToIndices("global_idx")};\n                  var sum = ${i.type.value}(0);\n                  let first : i32 = ${s};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${i.setByOffset("global_idx","sum")};\n                }`}}},jo=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,s=e.inputs[1];e.compute(Ro(r,n,s,t),{inputs:[0]})},Vo=e=>{let t=1===e.exclusive,n=1===e.reverse;return Wt({exclusive:t,reverse:n})}})),Gd=R((()=>{dd(),pd(),wd(),bd(),Go=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},qo=(e,t,n,r)=>{let s=[];s.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)s.push(n.indicesSet("a",e[r],`i[${r}]`));return s.push("return a;}"),s.join("\n")},Uo=(e,t)=>{let n,r,s,o,a,i,l="NHWC"===t.format,d=t.blocksize,u="DCR"===t.mode;l?([n,r,s,o]=e.dims,a=u?[n,r,s,d,d,o/d**2]:[n,r,s,o/d**2,d,d],i=u?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,s,o]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=u?[n,d,d,o/d**2,r,s]:[n,o/d**2,d,d,r,s],i=u?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(a),p=c.dims.length,m=e.dataType,h=sn("a",m,p),f=on("output",m,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*d,s*d,o/d**2]:[n,o/d**2,r*d,s*d],a=gt.size(t),u=c.dims,p=gt.sortBasedOnPerm(u,i);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...Jt(u,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(h,f)}\n\n  ${qo(i,p,h,f)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${f.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${f.setByOffset("global_idx",h.getByIndices("aIndices"))}\n  }`}},Wo=(e,t)=>{Go(e.inputs),e.compute(Uo(e.inputs[0],t))},Ho=e=>Wt({blocksize:e.blocksize,mode:e.mode,format:e.format})})),qd=R((()=>{dd(),pd(),wd(),bd(),Xo="^"+(Ko="("+(Qo="[a-zA-Z]|\\.\\.\\.")+")+")+"$",Jo="^"+("("+Ko+",)*"+Ko)+"$",Yo=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},Zo=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(Jo)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(Xo)))throw new Error("Invalid LHS term");let s=this.processTerm(t,!0,r,n);this.lhs.push(s)})),""===r)r+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||"..."===e)).map((([e])=>e)).join("");else if(!r.match(RegExp(Ko)))throw new Error("Invalid RHS");r.match(RegExp(Qo,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let s=n.length,o=!1,a=[],i=0;if(!e.match(RegExp(Xo))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(Qo,"g")),d=new Yo(r);return l?.forEach(((e,u)=>{if("..."===e){if(o)throw new Error("Only one ellipsis is allowed per input term");o=!0;let e=s-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(a=n.slice(i,i+e),this.hasEllipsis){if(this.ellipsisDims.length!==a.length||this.ellipsisDims.toString()!==a.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=a}for(let e=0;e<a.length;e++){let t=String.fromCharCode(48+e);d.addSymbol(t,u+e),this.addSymbol(t,n[i++],r)}}else d.addSymbol(e,u+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[i++],r)})),d}},ea=e=>e+"_max",ta=(e,t,n,r)=>{let s=e.map((e=>e.length)).map(((e,n)=>sn(`input${n}`,t,e))),o=gt.size(r),a=on("output",t,r.length),i=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let s=i.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));s.push({type:12,data:o});let a=e.map(((e,t)=>[...Jt(e)])).reduce(((e,t)=>e.concat(t)),s);return a.push(...Jt(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a}},getShaderSource:e=>{let t=[],r=[],o=[],l=[],d=[],u=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,i)=>{if(n.rhs.symbolToIndices.has(i)){let r=n.rhs.symbolToIndices.get(i)?.[0];void 0!==r&&n.lhs.forEach(((n,o)=>{if(e.inputIndices.includes(o)){let e=n.symbolToIndices.get(i);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${s[o].indicesSet(`input${o}Indices`,e,a.indicesGet("outputIndices",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(i);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{r.push(`${s[n].indicesSet(`input${n}Indices`,e,`${i}`)}`)})),d.push(`prod *= ${s[n].getByIndices(`input${n}Indices`)};`)}})),o.push(`for(var ${i}: u32 = 0; ${i} < uniforms.${ea(i)}; ${i}++) {`),l.push("}")}));let c=u?[...t,`let sum = ${s.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...o,...r,"var prod = 1.0;",...d,"sum += prod;",...l];return`\n            ${e.registerUniforms(i.map((e=>({name:`${ea(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...s,a)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${a.offsetToIndices("global_idx")};\n            ${s.map(((e,t)=>`var input${t}Indices: ${s[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${a.setByOffset("global_idx","sum")};\n          }`}}},na=(e,t)=>{let n=new Zo(e.inputs,t.equation),r=n.outputDims,s=e.inputs.map(((e,t)=>e.dims));e.compute(ta(s,e.inputs[0].dataType,n,r))},ra=e=>{let t=e.equation.replace(/\s+/g,"");return Wt({equation:t})}})),Ud=R((()=>{dd(),pd(),bd(),sa=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,s=t.length<n.length?0:t.length-n.length;for(;r<n.length&&s<t.length;++r,++s)if(n[r]!==t[s]&&1!==n[r]&&1!==t[s])throw new Error("Expand requires shape to be broadcastable to input")},oa=(e,t)=>{let n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let s=0;s<t.length;++s)r.push(1===t[s]?e[s+n]:t[s]);return r},aa=(e,t)=>e.length>t.length?oa(e,t):oa(t,e),ia=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=aa(t,n),s=e[0].dataType,o=9===s||1===gt.size(t),a=9===s||t.length>0&&t[t.length-1]%4==0?4:1,i=o||r.length>0&&r[r.length-1]%4==0?4:1,l=Math.ceil(gt.size(r)/i),d=[{type:12,data:l},...Jt(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length};${a}${i}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,o=sn("input",s,t.length,a),l=on("output",s,r.length,i);if(9===s){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${l.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${o.broadcastedIndicesToOffset(`outputIndices${t}`,l)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${i};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${l.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${l.offsetToIndices(`global_idx * ${i}`)};\n        let inputOffset = ${o.broadcastedIndicesToOffset("outputIndices",l)};\n        let data = ${l.type.value}(${o.getByOffset(`inputOffset / ${a}`)});\n        ${l.setByOffset("global_idx","data")}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(o,l)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d})}},la=e=>{sa(e.inputs),e.compute(ia(e.inputs),{inputs:[0]})}})),Wd=R((()=>{dd(),pd(),bd(),$d(),da=e=>{let t=e[0].dataType,n=gt.size(e[0].dims),r=gt.size(e[1].dims),s=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=sn("x",t,[1],4),r=sn("bias",t,[1],4),o=on("y",t,[1],4),a=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,i=s?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${a(0)}${a(1)}${a(2)}${a(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,o)}\n\n    ${fs(Xt(t))}\n\n    ${e.mainStart(Ht)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${i}\n      let x_in = x + bias;\n      ${o.setByOffset("global_idx",_s("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/Ht/4)}})}},ua=e=>{e.inputs.length<2||0===gt.size(e.inputs[1].dims)?gs(e):e.compute(da(e.inputs))}})),Hd=R((()=>{dd(),pd(),wd(),bd(),ca=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},pa=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,o=gt.normalizeAxis(t.axis,s),a=n.slice(0);a.splice(o,1,...r);let i=n[o],l=9===e[0].dataType?4:1,d=Math.ceil(gt.size(a)/l),u=[{type:12,data:d},{type:6,data:i},{type:12,data:o},...Jt(e[0].dims,e[1].dims,a)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:u}),getShaderSource:t=>{let n,i=sn("data",e[0].dataType,e[0].dims.length,l),d=sn("inputIndices",e[1].dataType,e[1].dims.length),u=on("output",e[0].dataType,a.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${d.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${a.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${d.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${i.type.indices};\n        `;for(let r=0,i=0;r<s;r++)r===o?(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,i+=t):(n+=`${s>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${a.length>1?`outputIndices${e}[${i}]`:`outputIndices${e}`};`,i++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${u.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${i.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${i.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${u.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${u.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${i.getByIndices("dataIndices")};\n      ${u.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(i,d,u)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},ma=e=>Wt({axis:e.axis}),ha=(e,t)=>{let n=e.inputs;ca(n),e.compute(pa(e.inputs,t))}})),Qd=R((()=>{dd(),pd(),bd(),fa=(e,t,n,r,s,o,a,i,l)=>{let d=[{type:12,data:o},{type:12,data:r},{type:12,data:s},{type:12,data:n},{type:12,data:a},{type:12,data:i},{type:12,data:l}],u=[o];d.push(...Jt(t.dims,u));return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${s.length}_${n.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:e=>{let r=[sn("indices_data",t.dataType,t.dims.length),on("input_slice_offsets_data",12,1,1)],o=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:s.length},{name:"sizes_from_slice_dims_data",type:"u32",length:n.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`\n  ${e.registerUniforms(o).declareVariables(...r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let batch_idx = global_idx / uniforms.num_slices_per_batch;\n    let base_offset = batch_idx * uniforms.input_batch_stride;\n\n    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;\n    var relative_slice_offset = 0;\n    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {\n      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);\n      let input_dim_idx = uniforms.batch_dims + dim_idx;\n      if (index < 0) {\n        ${1===s.length?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}\n      }\n      ${1===n.length?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}\n    }\n\n    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);\n  }`}},{inputs:[t],outputs:[-1]})[0]},_a=(e,t)=>{let n=e.inputs,r=n[0].dims,s=n[0].dataType,o=n[1].dims,a=o[o.length-1],i=gt.sizeToDimension(o,o.length-1),l=gt.sizeFromDimension(r,t.batchDims+a),d=gt.sizeToDimension(r,t.batchDims),u=gt.sizeFromDimension(r,t.batchDims),c=i/d,p=new Array(a),m=l;for(let e=0;e<a;++e)p[a-1-e]=m,m*=r[t.batchDims+a-1-e];let h=fa(e,n[1],p,t.batchDims,r,i,c,u,a),f=t.batchDims+a;if(f>r.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let _=o.slice(0,-1).concat(r.slice(f)),g=gt.size(_),w=[{type:12,data:g},{type:12,data:l},...Jt(n[0].dims,h.dims,_)];e.compute({name:"GatherND",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:_,dataType:s}],dispatchGroup:{x:Math.ceil(g/64)},programUniforms:w}),getShaderSource:e=>{let t=sn("data",n[0].dataType,n[0].dims.length),r=sn("slice_offsets",12,h.dims.length),s=on("output",n[0].dataType,_.length);return`\n          ${e.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(t,r,s)}\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];\n          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];\n        }`}},{inputs:[n[0],h]})},ga=e=>({batchDims:e.batch_dims,cacheKey:""})})),Kd=R((()=>{dd(),pd(),wd(),bd(),wa=(e,t)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let n=gt.normalizeAxis(t.quantizeAxis,e[0].dims.length),r=t.blockSize,s=e[0],o=e[2],a=4===e.length?e[3]:void 0;if(o.dims.length!==s.dims.length||!s.dims.map(((e,t)=>t===n?Math.ceil(e/r)===o.dims[t]:e===o.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(a){if(a.dataType!==s.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(a.dims.length!==o.dims.length||!a.dims.map(((e,t)=>e===o.dims[t])).reduce(((e,t)=>e&&t),!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},ba=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n.length,o=gt.normalizeAxis(t.gatherAxis,s),a=gt.normalizeAxis(t.quantizeAxis,s),i=n.slice(0);i.splice(o,1,...r);let l=gt.size(i),d=e[2].dataType,u=22===e[0].dataType,c=[{type:12,data:l},{type:12,data:a},{type:12,data:o},{type:12,data:t.blockSize},...Jt(...e.map(((e,t)=>e.dims)),i)];return{name:"GatherBlockQuantized",shaderCache:{hint:`${t.cacheKey};${e.filter(((e,t)=>1!==t)).map((e=>e.dims.join("_"))).join(";")}`,inputDependencies:Array.from({length:e.length},((e,t)=>"rank"))},getRunData:()=>({outputs:[{dims:i,dataType:d}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:t=>{let s=sn("data",e[0].dataType,e[0].dims.length),a=sn("inputIndices",e[1].dataType,e[1].dims.length),l=sn("scales",e[2].dataType,e[2].dims.length),c=e.length>3?sn("zeroPoint",e[3].dataType,e[3].dims.length):void 0,p=on("output",d,i.length),m=[s,a,l];c&&m.push(c);return`\n        ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...m,p)}\n        ${t.mainStart()}\n        let output_indices = ${p.offsetToIndices("global_idx")};\n        var indices_indices = ${a.type.indices}(0);\n        ${r.length>1?`\n          for (var i: u32 = 0; i < ${r.length}; i++) {\n            let index = ${p.indicesGet("output_indices","uniforms.gather_axis + i")};\n            ${a.indicesSet("indices_indices","i","index")};\n          }`:`indices_indices = ${p.indicesGet("output_indices","uniforms.gather_axis")};`};\n        var data_indices = ${s.type.indices}(0);\n        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {\n          let index = ${p.indicesGet("output_indices","i")};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        var index_from_indices = ${a.getByIndices("indices_indices")};\n        if (index_from_indices < 0) {\n          index_from_indices += ${n[o]};\n        }\n        ${s.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};\n        for (var i = uniforms.gather_axis + 1; i < ${i.length}; i++) {\n          let index = ${p.indicesGet("output_indices",`i + ${r.length} - 1`)};\n          ${s.indicesSet("data_indices","i","index")};\n        }\n        let data_offset = ${s.indicesToOffset("data_indices")};\n        let data_index = data_offset % 8;\n        // Convert 4-bit packed data to 8-bit packed data.\n        let packed_4bit_quantized_data = ${s.getByOffset("data_offset / 8")};\n        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;\n        let quantized_data_vec = ${u?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));\n        let quantized_data = quantized_data_vec[data_index / 2];\n        var scale_indices = data_indices;\n        let quantize_axis_index = ${l.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;\n        ${l.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};\n        var scale = ${l.getByIndices("scale_indices")};\n        ${c?`\n              let zero_point_indices = scale_indices;\n              let zero_point_offset = ${c.indicesToOffset("zero_point_indices")};\n              let zero_point_index = zero_point_offset % 8;\n              let packed_4bit_zero_points = ${c.getByOffset("zero_point_offset / 8")};\n              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;\n              let zero_point_vec = ${u?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));\n              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};\n        let dequantized_data = ${Xt(d)}(quantized_data - zero_point) * scale;\n        ${p.setByOffset("global_idx","dequantized_data")};\n    }`}}},ya=(e,t)=>{let n=e.inputs;wa(n,t),e.compute(ba(e.inputs,t))},Ma=e=>Wt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})})),Xd=R((()=>{dd(),pd(),wd(),bd(),xa=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},va=(e,t)=>{let n=e[0].dims,r=e[0].dataType,s=n.length,o=e[1].dims,a=e[1].dataType,i=gt.normalizeAxis(t.axis,s),l=n[i],d=o.slice(0),u=gt.size(d),c=sn("input",r,s),p=sn("indicesInput",a,o.length),m=on("output",r,d.length),h=[{type:12,data:u},{type:6,data:l},{type:12,data:i}];return h.push(...Jt(n,o,d)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:h}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,m)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${m.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${m.setByOffset("global_idx","value")};\n  }`}},Ta=e=>Wt({axis:e.axis}),ka=(e,t)=>{let n=e.inputs;xa(n),e.compute(va(e.inputs,t))}})),Jd=R((()=>{dd(),pd(),bd(),Pa=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},$a=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[s,o,a]=bt.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),i=[s,o];if(!i)throw new Error("Can't use gemm on the given tensors");let l=16,d=Math.ceil(o/l),u=Math.ceil(s/l),c=(gt.size(i),[{type:12,data:d},{type:12,data:s},{type:12,data:o},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}]),p=["type","type"];3===e.length&&(c.push(...Jt(e[2].dims)),p.push("rank")),c.push(...Jt(i));return{name:"GemmShared",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:d*u},programUniforms:c}),getShaderSource:n=>{let r=sn("a",e[0].dataType,e[0].dims),s=sn("b",e[1].dataType,e[1].dims),o=null,a=[r,s];3===e.length&&(o=sn("c",e[2].dataType,e[2].dims.length),a.push(o));let d=on("output",e[0].dataType,i.length);a.push(d);let u="",c="";t.transA&&t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):t.transA&&!t.transB?(c=`\n      var col = tile_row_start + local_id.x;\n      var row = k_start + local_id.y;\n      if (col < uniforms.M && row < uniforms.K) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!t.transA&&t.transB?(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = k_start + local_id.x;\n      row = tile_col_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.N) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!t.transA&&!t.transB&&(c=`\n      var col = k_start + local_id.x;\n      var row = tile_row_start + local_id.y;\n      if (col < uniforms.K && row < uniforms.M) {\n        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];\n      } else {\n        tile_a[local_id.y][local_id.x] = ${r.type.value}(0);\n      }\n\n      col = tile_col_start + local_id.x;\n      row = k_start + local_id.y;\n      if (col < uniforms.N && row < uniforms.K) {\n        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];\n      } else {\n        tile_b[local_id.y][local_id.x] = ${s.type.value}(0);\n      }\n      `,u="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let p=1===t.alpha?"":"value *= uniforms.alpha;";return`\n  ${n.registerUniforms([{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...a)}\n  var<workgroup> tile_a: array<array<${r.type.storage}, 16>, 16>;\n  var<workgroup> tile_b: array<array<${s.type.storage}, 16>, 16>;\n  ${n.mainStart([l,l,1])}\n    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * 16;\n    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * 16;\n    let num_tiles = (uniforms.K - 1) / 16 + 1;\n    var k_start = 0u;\n    var value = ${d.type.value}(0);\n    for (var t: u32 = 0u; t < num_tiles; t++) {\n      ${c}\n      k_start = k_start + 16;\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < 16; k++) {\n        ${u}\n      }\n      workgroupBarrier();\n    }\n\n    ${p}\n    let m = tile_row_start + local_id.y;\n    let n = tile_col_start + local_id.x;\n    ${null!=o?`let cOffset = ${o.broadcastedIndicesToOffset("vec2(m, n)",d)}; value += ${d.type.value}(uniforms.beta) * ${o.getByOffset("cOffset")};`:""}\n    if (m < uniforms.M && n < uniforms.N) {\n      output[m * uniforms.N + n] = value;\n    }\n  }`}}},Ca=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Sa=(e,t)=>{Pa(e.inputs),e.compute($a(e.inputs,t))}})),Yd=R((()=>{dd(),pd(),wd(),bd(),[Fa,Ea,Ia,Aa]=[0,1,2,3],za=e=>{if(4!==e[0].dims.length)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error("last dimension of grid must be equal to "+(e[0].dims.length-2));if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},La=e=>`\n  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {\n    var v: vec4<f32>;\n    var coeffs = gs_get_cubic_coeffs(x);\n    for (var i = 0; i < 4; i++) {\n      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];\n    }\n    coeffs = gs_get_cubic_coeffs(y);\n    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);\n    return pixel;\n  }\n`,Oa=e=>`\n  fn gs_denormalize(n: f32, length: i32) -> f32 {\n    ${0===e.alignCorners?"\n    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]\n    return ((n + 1.0) * f32(length) - 1.0) / 2.0;\n    ":"\n    // alignCorners: true => [-1, 1] to [0, length - 1]\n    return (n + 1.0) / 2.0 * (f32(length - 1));\n    "}\n  }\n`,Da=e=>`\n  ${"reflection"===e.paddingMode?"\n      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {\n        var dx = 0.0;\n        var fx = f32(x);\n        let range = x_max - x_min;\n        if (fx < x_min) {\n          dx = x_min - fx;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_min + r;\n          } else {\n            fx = x_max - r;\n          }\n        } else if (fx > x_max) {\n          dx = fx - x_max;\n          let n = u32(dx / range);\n          let r = dx - f32(n) * range;\n          if (n % 2 == 0) {\n            fx = x_max - r;\n          } else {\n            fx = x_min + r;\n          }\n        }\n        return u32(fx);\n      }":""}\n`,Ba=(e,t,n)=>`\n  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${t} {\n     var pixel = ${t}(0);\n     var indices = vec4<u32>(0);\n     indices[${Fa}] = batch;\n     indices[${Ea}] = channel;`+(()=>{switch(n.paddingMode){case"zeros":return`\n          if (r >= 0 && r < H && c >=0 && c < W) {\n            indices[${Ia}] = u32(r);\n            indices[${Aa}] = u32(c);\n          } else {\n            return ${t}(0);\n          }\n        `;case"border":return`\n          indices[${Ia}] = u32(clamp(r, 0, H - 1));\n          indices[${Aa}] = u32(clamp(c, 0, W - 1));\n        `;case"reflection":return`\n          indices[${Ia}] = gs_reflect(r, border[1], border[3]);\n          indices[${Aa}] = gs_reflect(c, border[0], border[2]);\n        `;default:throw new Error(`padding mode ${n.paddingMode} is not supported`)}})()+`\n    return ${e.getByIndices("indices")};\n  }\n`,Na=(e,t,n)=>(()=>{switch(n.mode){case"nearest":return`\n          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n        `;case"bilinear":return`\n          let x1 = i32(floor(x));\n          let y1 = i32(floor(y));\n          let x2 = x1 + 1;\n          let y2 = y1 + 1;\n\n          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n\n          let dx2 = ${t}(f32(x2) - x);\n          let dx1 = ${t}(x - f32(x1));\n          let dy2 = ${t}(f32(y2) - y);\n          let dy1 = ${t}(y - f32(y1));\n          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);\n        `;case"bicubic":return`\n          let x0 = i32(floor(x)) - 1;\n          let y0 = i32(floor(y)) - 1;\n          var p: mat4x4<${t}>;\n          for (var h = 0; h < 4; h++) {\n            for (var w = 0; w < 4; w++) {\n              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${Fa}], indices[${Ea}], border);\n            }\n          }\n\n          let dx = x - f32(x0 + 1);\n          let dy = y - f32(y0 + 1);\n          let result = gs_bicubic_interpolate(p, dx, dy);\n        `;default:throw new Error(`mode ${n.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Ra=(e,t)=>{let n=sn("x",e[0].dataType,e[0].dims.length),r=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],s=sn("grid",e[1].dataType,r.length,2),o=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];"NHWC"===t.format&&(o=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[Fa,Ea,Ia,Aa]=[0,3,1,2]);let a=on("output",e[0].dataType,o.length),i=n.type.value,l=[{type:12,data:gt.size(o)},...Jt(e[0].dims,r,o)];return{name:"GridSample",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:["type","type"]},getRunData:e=>{let t=gt.size(o);return{outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:l}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(n,s,a)}\n  \n  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {\n    let cubic_alpha = -0.75f;\n    let x_abs = abs(x);\n    var coeffs: vec4<f32>;\n    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);\n    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);\n    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);\n    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);\n    return coeffs;\n  }\n\n  ${La(i)}\n  ${Oa(t)}\n  ${Da(t)}\n  ${Ba(n,i,t)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let H_in = i32(uniforms.x_shape[${Ia}]);\n      let W_in = i32(uniforms.x_shape[${Aa}]);\n\n      ${0===t.alignCorners?"\n      let x_min = -0.5;\n      let x_max = f32(W_in) - 0.5;\n      let y_min = -0.5;\n      let y_max = f32(H_in) - 0.5;\n      ":"\n      let x_min = 0.0;\n      let x_max = f32(W_in) - 1.0;\n      let y_min = 0.0;\n      let y_max = f32(H_in) - 1.0;\n      "};\n      let border = vec4<f32>(x_min, y_min, x_max, y_max);\n\n      let indices = ${a.offsetToIndices("global_idx")};\n      var grid_indices = vec3<u32>(indices[${Fa}], indices[${Ia}], indices[${Aa}]);\n      let nxy = ${s.getByIndices("grid_indices")};\n      var x = gs_denormalize(f32(nxy[0]), W_in);\n      var y = gs_denormalize(f32(nxy[1]), H_in);\n\n      ${Na(a,i,t)}\n  }`}},ja=(e,t)=>{za(e.inputs),e.compute(Ra(e.inputs,t))},Va=e=>Wt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})})),Zd=R((()=>{dd(),pd(),wd(),_d(),Td(),bd(),yd(),Ga=(e,t)=>e.length>t&&e[t].dims.length>0?e[t]:void 0,qa=(e,t)=>{let n=e[0],r=Ga(e,1),s=Ga(e,2),o=Ga(e,3),a=Ga(e,4),i=Ga(e,5),l=Ga(e,6),d=Ga(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let u,c=n.dims[0],p=n.dims[1],m=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],h=p,f=0,_=0,g=Math.floor(m/t.numHeads);if(l&&d&&gt.size(l.dims)&&gt.size(d.dims)){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==g)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(d.dims[0]!==c||d.dims[1]!==t.numHeads||d.dims[3]!==g)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==d.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==d.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],_=l.dims[2]}else if(l&&gt.size(l.dims)||d&&gt.size(d.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r&&gt.size(r.dims)>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');u=2,h=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==g)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');u=5,h=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==g)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=0,h=r.dims[2]}}else{if(5!==n.dims.length)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(n.dims[2]!==t.numHeads||3!==n.dims[3])throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');u=3}if(o&&gt.size(o.dims)>0){if(1!==o.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(r&&5===r.dims.length&&2===r.dims[3])throw new Error("bias is not allowed for packed kv.")}let w=f+h,b=0;if(a&&gt.size(a.dims)>0){b=8;let e=a.dims;throw 1===e.length?e[0]===c?b=1:e[0]===3*c+2&&(b=3):2===e.length&&e[0]===c&&e[1]===w&&(b=5),8===b?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let y=!1,M=m;if(s&&gt.size(s.dims)>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(h!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');M=s.dims[2]}else{if(h!==s.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');M=s.dims[1]*s.dims[3],y=!0}}if(a&&gt.size(a.dims)>0)throw new Error("Key padding mask is not supported");if(i&&gt.size(i.dims)>0){if(4!==i.dims.length)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(i.dims[0]!==c||i.dims[1]!==t.numHeads||i.dims[2]!==p||i.dims[3]!==w)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:f,kvSequenceLength:h,totalSequenceLength:w,maxSequenceLength:_,inputHiddenSize:0,hiddenSize:m,vHiddenSize:M,headSize:g,vHeadSize:Math.floor(M/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:b,scale:t.scale,broadcastResPosBias:!1,passPastInKv:y,qkvFormat:u}},Ua=e=>Wt({...e}),Wa=Wt({perm:[0,2,1,3]}),Ha=(e,t,n,r,s,o,a)=>{let i=[r,s,o],l=gt.size(i),d=[{type:12,data:l},{type:12,data:a},{type:12,data:o}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:e=>{let r=on("qkv_with_bias",t.dataType,i),s=sn("qkv",t.dataType,i),o=sn("bias",n.dataType,i);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(s,o,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},Qa=(e,t,n,r,s,o,a,i)=>{let l=o;if(a&&gt.size(a.dims)>0){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Ha(e,o,a,t,r,n*s,i),l=l.reshape([t,r,n,s]),1===n||1===r?l:e.compute(gn(l,Wa.perm),{inputs:[l],outputs:[-1]})[0]}return 3===o.dims.length&&(l=o.reshape([t,r,n,s])),1===n||1===r?l:e.compute(gn(l,Wa.perm),{inputs:[l],outputs:[-1]})[0]},Ka=(e,t)=>{let n=qa(e.inputs,t),r=e.inputs[0],s=Ga(e.inputs,1),o=Ga(e.inputs,2),a=Ga(e.inputs,3),i=Ga(e.inputs,4),l=Ga(e.inputs,5),d=Ga(e.inputs,6),u=Ga(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===s?.dims.length)throw new Error("Packed KV is not implemented");let c=s&&o&&4===s.dims.length&&4===o.dims.length,p=Qa(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,a,0);if(c)return xr(e,p,s,o,i,void 0,d,u,l,n);if(!s||!o)throw new Error("key and value must be provided");let m=Qa(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,s,a,n.hiddenSize),h=Qa(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,o,a,2*n.hiddenSize);xr(e,p,m,h,i,void 0,d,u,l,n)}})),eu=R((()=>{dd(),pd(),wd(),bd(),Xa=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Ja=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),Wt({numOutputs:r,axis:t.axis,splitSizes:n})},Ya=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${nn("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Za=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let s=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(s):0===r?n.push(`if (output_number == ${r}u) { ${s} }`):r===t-1?n.push(`else { ${s} }`):n.push(`else if (output_number == ${r}) { ${s} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},ei=(e,t)=>{let n=e[0].dims,r=gt.size(n),s=e[0].dataType,o=gt.normalizeAxis(t.axis,n.length),a=new Array(t.numOutputs),i=sn("input",s,n.length),l=new Array(t.numOutputs),d=[],u=[],c=0,p=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){c+=t.splitSizes[r],l[r]=c;let i=n.slice();i[o]=t.splitSizes[r],u.push(i),a[r]=on(`output${r}`,s,i.length),d.push({dims:u[r],dataType:e[0].dataType})}p.push({type:12,data:l},...Jt(n,...u));return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(i,...a)}\n  ${Ya(l.length)}\n  ${Za(a)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${i.offsetToIndices("global_idx")};\n    var index = ${i.indicesGet("indices",o)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${nn("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${i.indicesSet("indices",o,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:d,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},ti=(e,t)=>{Xa(e.inputs);let n=1===e.inputs.length?t:Ja(e.inputs,t);e.compute(ei(e.inputs,n),{inputs:[0]})},ni=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Wt({axis:t,numOutputs:r,splitSizes:n})}})),tu=R((()=>{dd(),pd(),wd(),bd(),ri=(e,t)=>{let[n,r,s,o]=e,{numHeads:a,rotaryEmbeddingDim:i}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!gt.areEqual(r.dims,[])&&!gt.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==s.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);if(2!==o.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${o.dims.length}`);if(!gt.areEqual(s.dims,o.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(i>0&&0===a)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],d=n.dims[n.dims.length-2],u=s.dims[0],c=gt.sizeFromDimension(n.dims,1)/d,p=0===i?2*s.dims[1]:c/a;if(i>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(d!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==s.dims[1]&&i/2!==s.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);if(d>u)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},si=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:s,scale:o}=t,a=e[0].dims[0],i=gt.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],d=i/l,u=e[2].dims[1],c=0===s?2*u:d/r,p=new Array(a,l,d/c,c-u),m=gt.computeStrides(p),h=[{type:1,data:o},{type:12,data:p},{type:12,data:m},...3===e[0].dims.length?new Array({type:12,data:[i,d,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[i,c,l*c,1]}):[],...Jt(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:Wt({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=sn("input",e[0].dataType,e[0].dims.length),s=sn("position_ids",e[1].dataType,e[1].dims.length),o=sn("cos_cache",e[2].dataType,e[2].dims.length),a=sn("sin_cache",e[3].dataType,e[3].dims.length),i=on("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:m.length},{name:"input_output_strides",type:"u32",length:m.length}]),`\n        ${t.declareVariables(r,s,o,a,i)}\n\n        ${t.mainStart(Ht)}\n          let half_rotary_emb_dim = uniforms.${o.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${s.broadcastedIndicesToOffset("bsnh.xy",on("",s.type.tensor,2))};\n            let position_id =\n                u32(${s.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${o.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${a.get("position_id","bsnh[3]")};\n            ${i.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${a.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${o.get("position_id","bsnh[3]")};\n            ${i.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${i.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(gt.size(p)/Ht)},programUniforms:h})}},oi=(e,t)=>{ri(e.inputs,t),e.compute(si(e.inputs,t))}})),nu=R((()=>{wd(),dd(),Td(),Zd(),eu(),yd(),tu(),bd(),ai=(e,t)=>{if(t.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let n=e[0],r=e[1],s=e[2],o=e[3],a=e[4];if(0!==t.doRotary&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(-1!==t.localWindowSize)throw new Error("Local attention is not supported");if(0!==t.softcap)throw new Error("Softcap is not supported");if(0!==t.rotaryInterleaved)throw new Error("Rotary interleaved is not supported");if(t.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let i=n.dims[0],l=n.dims[1],d=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],u=l,c=0,p=!r||0===r.dims.length,m=Math.floor(p?d/(t.numHeads+2*t.kvNumHeads):d/t.numHeads);p&&(d=m*t.numHeads);let h=o&&0!==o.dims.length,f=a&&0!==a.dims.length;if(h&&4===o.dims.length&&o.dims[0]===i&&o.dims[1]!==t.kvNumHeads&&o.dims[2]===t.kvNumHeads&&o.dims[3]===m)throw new Error("BSNH pastKey/pastValue is not supported");if(h&&f){if(4!==o.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(4!==a.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');c=o.dims[2]}else if(h||f)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let _=1;if(r&&r.dims.length>0){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(n.dims[2]%r.dims[2]!=0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');u=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==m)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');u=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==m)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');u=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');_=3}let g=!1,w=t.kvNumHeads?m*t.kvNumHeads:d;if(s&&s.dims.length>0){if(3!==s.dims.length&&4!==s.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===s.dims.length){if(u!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');w=s.dims[2]}else{if(u!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');w=s.dims[1]*s.dims[3],g=!0}}let b=e.length>4?e[5]:void 0;if(b&&1!==b.dims.length&&b.dims[0]!==i)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:i,sequenceLength:l,pastSequenceLength:c,kvSequenceLength:u,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:d,vHiddenSize:w,headSize:m,vHeadSize:Math.floor(w/t.kvNumHeads),numHeads:t.numHeads,kvNumHeads:t.kvNumHeads,nReps:t.numHeads/t.kvNumHeads,pastPresentShareBuffer:!1,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:g,qkvFormat:_}},ii=Wt({perm:[0,2,1,3]}),li=(e,t,n)=>{let r=t,s=n.kvNumHeads;return 3===t.dims.length&&0!==n.kvSequenceLength&&(r=t.reshape([n.batchSize,n.kvSequenceLength,s,n.headSize]),r=e.compute(gn(r,ii.perm),{inputs:[r],outputs:[-1]})[0]),r},di=(e,t,n,r)=>{let s=[e*t],o=e*t,a=[{type:12,data:o},{type:12,data:t},{type:12,data:e}];return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${t}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:7}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a}),getShaderSource:e=>{let t=sn("seq_lens",n.dataType,n.dims),o=sn("total_seq_lens",r.dataType,r.dims),a=on("pos_ids",7,s);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}]).declareVariables(t,o,a)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let total_sequence_length = u32(${o.getByOffset("0")});\n    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;\n    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;\n    let batch_idx = global_idx / uniforms.sequence_length;\n    let sequence_idx = i32(global_idx % uniforms.sequence_length);\n    var pos_id: i32 = 0;\n    let seqlen = ${t.getByOffset("batch_idx")};\n    let total_seqlen = seqlen + 1;\n    if (is_first_prompt) {\n      if (sequence_idx < total_seqlen) {\n        pos_id = sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (is_subsequent_prompt) {\n      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);\n      if (past_seqlen + sequence_idx < total_seqlen) {\n        pos_id = past_seqlen + sequence_idx;\n      } else {\n        pos_id = 1;\n      }\n      ${a.setByOffset("global_idx","pos_id")}\n    } else if (global_idx < uniforms.batch_size) {\n      ${a.setByOffset("global_idx","seqlen")}\n    };\n  }\n  `}}},ui=(e,t)=>{let n=ai(e.inputs,t);if(5===e.inputs[0].dims.length)throw new Error("Packed QKV is not implemented");if(5===e.inputs[1]?.dims.length)throw new Error("Packed KV is not implemented");let r,s,o=e.inputs[0],a=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,i=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,l=e.inputs[3]&&0!==e.inputs[3].dims.length?e.inputs[3]:void 0,d=e.inputs[4]&&0!==e.inputs[4].dims.length?e.inputs[4]:void 0,u=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=n.kvNumHeads?n.kvNumHeads:n.numHeads,m=Wt({axis:2,numOutputs:3,splitSizes:[n.numHeads*n.headSize,p*n.headSize,p*n.headSize]}),[h,f,_]=a||i?[o,a,i]:e.compute(ei([o],m),{inputs:[o],outputs:[-1,-1,-1]});if(t.doRotary){let o=e.compute(di(n.batchSize,n.sequenceLength,u,c),{inputs:[u,c],outputs:[-1]})[0],a=e.inputs[7],i=e.inputs[8],l=Wt({interleaved:0!==t.rotaryInterleaved,numHeads:n.numHeads,rotaryEmbeddingDim:0,scale:t.scale}),d=[h,o,a,i],p=[-1];r=e.compute(si(d,l),{inputs:d,outputs:p})[0],d.splice(0,1,f);let m=Wt({interleaved:0!==t.rotaryInterleaved,numHeads:n.kvNumHeads,rotaryEmbeddingDim:0,scale:t.scale});s=e.compute(si(d,m),{inputs:d,outputs:p})[0]}let g=Qa(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,t.doRotary?r:h,void 0,0),w=li(e,t.doRotary?s:f,n),b=li(e,_,n);xr(e,g,w,b,void 0,void 0,l,d,void 0,n,u,c)}})),ru=R((()=>{dd(),pd(),yd(),bd(),ci=(e,t,n,r,s,o,a,i)=>{let l=Yt(o),d=1===l?"f32":`vec${l}f`,u=1===l?"vec2f":`mat2x${l}f`,c=s*a,p=64;1===c&&(p=256);let m=[s,a,o/l],h=[s,a,2],f=[];f.push(...Jt(m,h));return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${i};${p}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:1}],dispatchGroup:{x:c},programUniforms:f}),getShaderSource:e=>{let s=sn("x",t.dataType,3,l),o=[s,sn("scale",n.dataType,n.dims),sn("bias",r.dataType,r.dims),on("output",1,3,2)];return`\n  var<workgroup> workgroup_shared : array<${u}, ${p}>;\n  const workgroup_size = ${p}u;\n  ${e.declareVariables(...o)}\n  ${e.mainStart(p)}\n    let batch = workgroup_index / uniforms.x_shape[1];\n    let channel = workgroup_index % uniforms.x_shape[1];\n    let hight = uniforms.x_shape[2];\n    // initialize workgroup memory\n    var sum = ${d}(0);\n    var squared_sum = ${d}(0);\n    for (var h = local_idx; h < hight; h += workgroup_size) {\n      let value = ${d}(${s.get("batch","channel","h")});\n      sum += value;\n      squared_sum += value * value;\n    }\n    workgroup_shared[local_idx] = ${u}(sum, squared_sum);\n    workgroupBarrier();\n\n    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (local_idx < currSize) {\n        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (local_idx == 0) {\n      let sum_final = ${tn("workgroup_shared[0][0]",l)} / f32(hight * ${l});\n      let squared_sum_final = ${tn("workgroup_shared[0][1]",l)} / f32(hight * ${l});\n\n      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${i}));\n      let channel_scale = inv_std_dev * f32(scale[channel]);\n      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;\n      output[workgroup_index] = vec2f(channel_scale, channel_shift);\n    }\n  }`}},{inputs:[t,n,r],outputs:[-1]})[0]},pi=(e,t,n)=>{let r=t[0].dims,s=r,o=r[0],a=r[1],i=gt.sizeFromDimension(r,2),l=Yt(i),d=gt.size(s)/l,u=ci(e,t[0],t[1],t[2],o,i,a,n.epsilon),c=[o,a,i/l],p=[o,a];e.compute({name:"InstanceNormalization",shaderCache:{hint:`${l}`,inputDependencies:["type","none"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Jt(c,p,c)]}),getShaderSource:e=>{let n=sn("x",t[0].dataType,c.length,l),r=sn("scale_shift",1,p.length,2),s=on("output",t[0].dataType,c.length,l),o=[n,r,s];return`\n  ${e.registerUniform("output_size","u32").declareVariables(...o)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let outputIndices = ${s.offsetToIndices("global_idx")};\n      let batch = outputIndices[0];\n      let channel = outputIndices[1];\n      let scale_shift = ${r.getByIndices("vec2<u32>(batch, channel)")};\n      let value = ${n.getByOffset("global_idx")} * ${s.type.value}(scale_shift.x) + ${s.type.value}(scale_shift.y);\n      ${s.setByOffset("global_idx","value")};\n  }`}},{inputs:[t[0],u]})},mi=(e,t,n)=>{let r=t[0].dims,s=r,o=r[0],a=r[r.length-1],i=gt.sizeFromDimension(r,1)/a,l=Yt(a),d=gt.size(s)/l,u=[{type:12,data:i},{type:12,data:Math.floor(a/l)}],c=!1,p=[0,r.length-1];for(let e=0;e<r.length-2;e++)c=c||1!==r[e+1],p.push(e+1);c=c&&1!==r[r.length-1];let m=c?e.compute(gn(e.inputs[0],p),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:r.length},((e,t)=>r[p[t]]))),h=ci(e,m,t[1],t[2],o,i,a,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:u}),getShaderSource:e=>{let n=Kt(t[0].dataType),r=1===l?"vec2f":`mat${l}x2f`,o=e=>{let t=0===e?"x":"y",r=1===l?"f32":`vec${l}f`;switch(l){case 1:return`${n}(${r}(scale.${t}))`;case 2:return`vec2<${n}>(${r}(scale[0].${t}, scale[1].${t}))`;case 4:return`vec4<${n}>(${r}(scale[0].${t}, scale[1].${t}, scale[2].${t}, scale[3].${t}))`;default:throw new Error(`Not supported compoents ${l}`)}},a=sn("input",t[0].dataType,t[0].dims,l),i=on("output",t[0].dataType,s,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${a.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scale_input : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${i.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let current_image_number = global_idx / (uniforms.C * uniforms.H);\n    let current_channel_number = global_idx % uniforms.C;\n\n    let scale_offset = current_image_number * uniforms.C + current_channel_number;\n    let scale = scale_input[scale_offset];\n    output[global_idx] = fma(input[global_idx], ${o(0)}, ${o(1)});\n  }`}},{inputs:[t[0],h]})},hi=(e,t)=>{"NHWC"===t.format?mi(e,e.inputs,t):pi(e,e.inputs,t)}})),su=R((()=>{dd(),pd(),bd(),fi=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},_i=(e,t,n)=>{let r=t.simplified,s=e[0].dims,o=e[1],a=!r&&e[2],i=s,l=gt.normalizeAxis(t.axis,s.length),d=gt.sizeToDimension(s,l),u=gt.sizeFromDimension(s,l),c=gt.size(o.dims),p=a?gt.size(a.dims):0;if(c!==u||a&&p!==u)throw new Error(`Size of X.shape()[axis:] == ${u}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${c} and bias size of ${p}`);let m=[];for(let e=0;e<s.length;++e)e<l?m.push(s[e]):m.push(1);let h=Yt(u),f=["type","type"],_=[{type:12,data:d},{type:1,data:u},{type:12,data:Math.floor(u/h)},{type:1,data:t.epsilon}];a&&f.push("type");let g=n>1,w=n>2,b=[{dims:i,dataType:e[0].dataType}];return g&&b.push({dims:m,dataType:1}),w&&b.push({dims:m,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${h};${n};${r}`,inputDependencies:f},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(d/64)},programUniforms:_}),getShaderSource:t=>{let n=Kt(e[0].dataType),s=[sn("x",e[0].dataType,e[0].dims,h),sn("scale",o.dataType,o.dims,h)];a&&s.push(sn("bias",a.dataType,a.dims,h)),s.push(on("output",e[0].dataType,i,h)),g&&s.push(on("mean_data_output",1,m)),w&&s.push(on("inv_std_output",1,m));return`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...s)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${Zt("f32",h)};\n    var mean_square_vector = ${Zt("f32",h)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${en(n,h,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${tn("mean_vector",h)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${tn("mean_square_vector",h)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${en(n,h,"x[j + offset]")};\n      let f32scale = ${en(n,h,"scale[j]")};\n      output[j + offset] = ${s[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${en(n,h,"bias[j]")}`:""}\n      );\n    }\n\n    ${g?"mean_data_output[global_idx] = mean":""};\n    ${w?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},gi=(e,t)=>{fi(e.inputs),e.compute(_i(e.inputs,t,e.outputCount))}})),ou=R((()=>{pd(),zd(),Ld(),wi=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},bi=e=>{wi(e.inputs);let t=_t.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];if(n<8&&r<8)e.compute(Zs(e.inputs,{activation:""},t));else{let s=t[t.length-2],o=gt.size(e.inputs[0].dims.slice(0,-2)),a=gt.size(e.inputs[1].dims.slice(0,-2));if(1!==o&&1===s&&1===a){let s=[1,o,n],a=[e.inputs[0].reshape([1,o,r]),e.inputs[1].reshape([1,r,n])];e.compute(io(a,{activation:""},t,s),{inputs:a})}else e.compute(io(e.inputs,{activation:""},t))}}})),au=R((()=>{dd(),pd(),wd(),bd(),yi=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),o=t.blockSize/8*t.bits,a=e[1];if(!gt.areEqual(a.dims,[t.n,s,o]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let i=e[2].dims;if(gt.size(i)!==t.n*s)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(gt.size(n)!==r)throw new Error("zeroPoints input size error.")}},Mi=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],o=t.k,a=t.n,i=n.slice(0,r-2),l=gt.size(i),d=e[1].dims[2]/4,u=e[0].dataType,c=Yt(t.k),p=Yt(d),m=Yt(a),h=i.concat([s,a]),f=s>1&&a/m%2==0?2:1,_=gt.size(h)/m/f,g=64,w=[],b=[l,s,o/c],y=gt.convertShape(e[1].dims).slice();y.splice(-1,1,d/p),w.push(...Jt(b)),w.push(...Jt(y)),w.push(...Jt(e[2].dims)),4===e.length&&w.push(...Jt(gt.convertShape(e[3].dims)));let M=[l,s,a/m];w.push(...Jt(M));return{name:"MatMulNBits",shaderCache:{hint:`${t.blockSize};${t.bits};${c};${p};${m};${f};64`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:h,dataType:u}],dispatchGroup:{x:_},programUniforms:w}),getShaderSource:n=>{let r=b.length,s=sn("a",e[0].dataType,r,c),o=sn("b",12,y.length,p),a=sn("scales",e[2].dataType,e[2].dims.length),i=[s,o,a],l=4===e.length?sn("zero_points",12,e[3].dims.length):void 0;l&&i.push(l);let u=M.length,h=on("output",e[0].dataType,u,m),_=Kt(e[0].dataType),w=(()=>{switch(c){case 1:return`array<${_}, 8>`;case 2:return`mat4x2<${_}>`;case 4:return`mat2x4<${_}>`;default:throw new Error(`${c}-component is not supported.`)}})();return`\n        var<workgroup> workgroup_shared: array<${h.type.value}, ${f*g}>;\n        ${n.declareVariables(...i,h)}\n        ${n.mainStart([g,1,1])}\n          let output_indices = ${h.offsetToIndices(`(global_idx / 64) * ${f}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let nBlocksPerCol = uniforms.b_shape[1];\n\n          for (var block = local_id.x; block < nBlocksPerCol; block += 64) {\n            //process one block\n            var word_offset: u32 = block * ${t.blockSize/c};\n            ${(()=>{let e=`\n            var col_index = col * ${m};\n            ${l?"\n            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;\n            var zero_point_byte_count: u32;\n            var zero_point_word_index: u32;\n            var zero_point_byte_offset: u32;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32;\n            var zero_point_word: u32;":`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${_}(8);`}\n            `;for(let t=0;t<m*f;t++)e+=`\n            let scale${t} = ${a.getByOffset("col_index * nBlocksPerCol + block")};\n            ${l?`\n            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);\n            zero_point_word_index = zero_point_byte_count >> 0x2u;\n            zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point${t} = ${_}((zero_point_word) & 0xFu);`:""}\n            col_index += 1;`;return e})()}\n            for (var word: u32 = 0; word < ${d}; word += ${p}) {\n              ${(()=>{let e=`col_index = col * ${m};`;for(let t=0;t<m*f;t++)e+=`\n            let b${t}_data = ${o.getByIndices(`${o.type.indices}(col_index, block, word)`)};\n            col_index += 1;`;return e+=`\n            var b_value: u32;\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            var b_value_lower: vec4<u32>;\n            var b_value_upper: vec4<u32>;\n            var b_quantized_values: ${w};\n            var b_dequantized_values: ${w};`,e})()}\n              for (var i: u32 = 0; i < ${p}; i++) {\n                ${(()=>{let e=`\n          // reuse a data\n            var input_offset = ${s.indicesToOffset(`${s.type.indices}(batch, row, word_offset)`)};\n            var a_data: ${w};\n            for (var j: u32 = 0; j < ${8/c}; j++) {\n              a_data[j] = ${s.getByOffset("input_offset")};\n              input_offset++;\n            }\n          `;for(let t=0;t<m*f;t++)e+=`\n            b_value = ${1===p?`b${t}_data`:`b${t}_data[i]`};\n            b_value_lower = unpack4xU8(b_value & b_mask);\n            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);\n            b_quantized_values = ${w}(${Array.from({length:4},((e,t)=>`${_}(b_value_lower[${t}]), ${_}(b_value_upper[${t}])`)).join(", ")});\n            b_dequantized_values = ${1===c?`${w}(${Array.from({length:8},((e,n)=>`(b_quantized_values[${n}] - ${l?`zero_point${t}`:"zero_point"}) * scale${t}`)).join(", ")});`:`(b_quantized_values - ${w}(${Array(8).fill(""+(l?`zero_point${t}`:"zero_point")).join(",")})) * scale${t};`};\n            workgroup_shared[local_id.x * ${f} + ${Math.floor(t/m)}]${m>1?`[${t%m}]`:""} += ${Array.from({length:8/c},((e,t)=>""+(1===c?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`))).join(" + ")};\n          `;return e})()}\n                word_offset += ${8/c};\n              }\n            }\n          }\n          workgroupBarrier();\n\n          if (local_id.x < ${f}) {\n            var output_value: ${h.type.value} = ${h.type.value}(0);\n            var workgroup_shared_offset: u32 = local_id.x;\n            for (var b: u32 = 0u; b < 64u; b++) {\n              output_value += workgroup_shared[workgroup_shared_offset];\n              workgroup_shared_offset += ${f};\n            }\n            ${h.setByIndices(`${h.type.indices}(batch, row, col + local_id.x)`,"output_value")};\n          }\n        }`}}},xi=(e,t)=>{let n=e[0].dims,r=n.length,s=n[r-2],o=t.k,a=t.n,i=n.slice(0,r-2),l=gt.size(i),d=e[1].dims[2]/4,u=e[0].dataType,c=Yt(t.k),p=Yt(d),m=i.concat([s,a]),h=a%8==0?8:a%4==0?4:1,f=128/h,_=f*p*8,g=_/c,w=_/t.blockSize,b=gt.size(m)/h,y=[],M=[l,s,o/c],x=gt.convertShape(e[1].dims).slice();x.splice(-1,1,d/p),y.push(...Jt(M)),y.push(...Jt(x)),y.push(...Jt(e[2].dims)),4===e.length&&y.push(...Jt(gt.convertShape(e[3].dims)));let v=[l,s,a];y.push(...Jt(v));return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${t.blockSize};${c};${p};${f};${h}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:m,dataType:u}],dispatchGroup:{x:b},programUniforms:y}),getShaderSource:n=>{let r=M.length,s=sn("a",e[0].dataType,r,c),o=sn("b",12,x.length,p),a=sn("scales",e[2].dataType,e[2].dims.length),i=[s,o,a],l=4===e.length?sn("zero_points",12,e[3].dims.length):void 0;l&&i.push(l);let d=v.length,u=on("output",e[0].dataType,d),m=Kt(e[0].dataType);return`\n        var<workgroup> sub_a: array<${s.type.value}, ${g}>;\n        var<workgroup> inter_results: array<array<${u.type.value}, ${f}>, ${h}>;\n        ${n.declareVariables(...i,u)}\n        ${n.mainStart([f,h,1])}\n          let output_indices = ${u.offsetToIndices(`workgroup_index * ${h}`)};\n          let col = output_indices[2];\n          let row = output_indices[1];\n          let batch = output_indices[0];\n          let n_blocks_per_col = uniforms.b_shape[1];\n          let num_tiles =  (n_blocks_per_col - 1) / ${w} + 1;\n\n          // Loop over shared dimension.\n          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {\n            let a_col_start = tile * ${g};\n            // load one tile A data into shared memory.\n            for (var a_offset = local_idx; a_offset < ${g}; a_offset += 128)\n            {\n              let a_col = a_col_start + a_offset;\n              if (a_col < uniforms.a_shape[2])\n              {\n                sub_a[a_offset] = ${s.getByIndices(`${s.type.indices}(batch, row, a_col)`)};\n              } else {\n                sub_a[a_offset] = ${s.type.value}(0);\n              }\n            }\n            workgroupBarrier();\n\n            // each thread process one block\n            let b_row = col + local_id.y;\n            let block = tile * ${w} + local_id.x;\n            ${l?`\n            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;\n            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);\n            let zero_point_word_index = zero_point_byte_count >> 0x2u;\n            let zero_point_byte_offset = zero_point_byte_count & 0x3u;\n            let zero_point_nibble_offset: u32 = block & 0x1u;\n            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            let zero_point_word = ${l.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;\n            let zero_point = ${m}((zero_point_word) & 0xFu);`:`\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${m}(8);`}\n            let scale = ${a.getByOffset("b_row * n_blocks_per_col + block")};\n            let b_data = ${o.getByIndices(`${o.type.indices}(b_row, block, 0)`)};\n            var word_offset = local_id.x * ${t.blockSize/c};\n            for (var i: u32 = 0; i < ${p}; i++) {\n              ${(()=>{switch(c){case 1:return`\n          let a_data0 = vec4<${m}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);\n          let a_data1 = vec4<${m}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`\n          let a_data0 = vec4<${m}>(sub_a[word_offset], sub_a[word_offset + 1]);\n          let a_data1 = vec4<${m}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return"\n          let a_data0 = sub_a[word_offset];\n          let a_data1 = sub_a[word_offset + 1];";default:throw new Error(`${c}-component is not supported.`)}})()}\n              let b_value = ${1===p?"b_data":"b_data[i]"};\n              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);\n              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);\n              let b_quantized_values = mat2x4<${m}>(${Array.from({length:4},((e,t)=>`${m}(b_value_lower[${t}]), ${m}(b_value_upper[${t}])`)).join(", ")});\n              let b_dequantized_values = (b_quantized_values - mat2x4<${m}>(${Array(8).fill("zero_point").join(",")})) * scale;\n              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},((e,t)=>`dot(a_data${t}, b_dequantized_values[${t}])`)).join(" + ")};\n              word_offset += ${8/c};\n            }\n            workgroupBarrier();\n          }\n\n          if (local_idx < ${h}) {\n            var output_value: ${u.type.value} = ${u.type.value}(0);\n            for (var b = 0u; b < ${f}; b++) {\n              output_value += inter_results[local_idx][b];\n            }\n            if (col + local_idx < uniforms.output_shape[2])\n            {\n              ${u.setByIndices(`${u.type.indices}(batch, row, col + local_idx)`,"output_value")}\n            }\n          }\n        }`}}},vi=(e,t)=>{yi(e.inputs,t),32===t.blockSize&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(xi(e.inputs,t)):e.compute(Mi(e.inputs,t))},Ti=e=>Wt(e)})),iu=R((()=>{dd(),pd(),bd(),ki=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Pi=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n            k = i32(${e.indicesGet("indices",s)}) - ${nn("uniforms.pads",s,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${nn("uniforms.x_shape",s,t)})) {\n              break;\n            }\n            offset += k * i32(${nn("uniforms.x_strides",s,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},$i=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${nn("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${nn("uniforms.x_shape",s,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${nn("uniforms.x_shape",s,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${nn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Ci=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${nn("uniforms.pads",s,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${nn("uniforms.x_shape",s,t)})) {\n                  k = i32(${nn("uniforms.x_shape",s,t)}) - 1;\n                }\n                offset += k * i32(${nn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Si=(e,t,n)=>{let r="";for(let s=t-1;s>=0;--s)r+=`\n                k = i32(${e.indicesGet("indices",s)}) - ${nn("uniforms.pads",s,n)};\n                if (k < 0)  {\n                  k += i32(${nn("uniforms.x_shape",s,t)}]);\n                }\n                if (k >= i32(${nn("uniforms.x_shape",s,t)})) {\n                  k -= i32(${nn("uniforms.x_shape",s,t)});\n                }\n                offset += k * i32(${nn("uniforms.x_strides",s,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},Fi=(e,t,n)=>{switch(n.mode){case 0:return Pi(e,t,n.pads.length);case 1:return $i(e,t,n.pads.length);case 2:return Ci(e,t,n.pads.length);case 3:return Si(e,t,n.pads.length);default:throw new Error("Invalid mode")}},Ei=(e,t)=>{let n=gt.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,s=[{type:12,data:gt.size(n)},{type:6,data:t.pads}],o=e.length>=3&&e[2].data;0===t.mode&&s.push({type:o?e[2].dataType:1,data:t.value}),s.push(...Jt(e[0].dims,n));return{name:"Pad",shaderCache:{hint:`${t.mode}${o}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(gt.size(n)/64)},programUniforms:s}),getShaderSource:s=>{let a=on("output",e[0].dataType,n.length),i=sn("x",e[0].dataType,r.length),l=i.type.value,d=Fi(a,r.length,t),u=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&u.push({name:"constant_value",type:o?l:"f32"}),`\n            ${s.registerUniforms(u).declareVariables(i,a)}\n            ${s.mainStart()}\n            ${s.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${a.offsetToIndices("global_idx")};\n\n            var value = ${l}(0);\n            ${d}\n            output[global_idx] = value;\n        }`}}},Ii=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?10===e[2].dataType?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,s=e[0].dims.length,o=new Int32Array(2*s).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)o[Number(t[e])]=Number(n[e]),o[Number(t[e])+s]=Number(n[e+t.length])}else n.forEach(((e,t)=>o[Number(t)]=Number(e)));let a=[];return o.forEach((e=>a.push(e))),{mode:t.mode,value:r,pads:a}}return t},Ai=(e,t)=>{ki(e.inputs);let n=Ii(e.inputs,t);e.compute(Ei(e.inputs,n),{inputs:[0]})}})),lu=R((()=>{le(),dd(),pd(),bd(),zi=e=>{if(p.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},Li=(e,t,n)=>{let r="NHWC"===t.format,s=e.dims.slice();r&&s.splice(1,0,s.pop());let o=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),i=t.strides.slice(),l=o?t.dilations.slice():[],d=t.pads.slice();wt.adjustPoolAttributes(n,s,a,i,l,d);let u=wt.computePoolOutputShape(n,s,i,l,a,d,t.autoPad),c=Object.assign({},t);o?Object.assign(c,{kernelShape:a,strides:i,pads:d,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:a,strides:i,pads:d,cacheKey:t.cacheKey});let p=u.slice();return p.push(p.splice(1,1)[0]),[c,r?p:u]},Oi=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:gt.size(e)},{type:12,data:gt.size(t.kernelShape)}],s=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],o=t.pads[t.pads.length/2-1],a=t.pads[t.pads.length-1],i=!!(o+a);r.push({type:12,data:e},{type:12,data:n},{type:12,data:o},{type:12,data:a}),s.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],o=t.pads[t.pads.length/2-2],a=t.pads[t.pads.length-2];l=!!(o+a),r.push({type:12,data:e},{type:12,data:n},{type:12,data:o},{type:12,data:a}),s.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,s,!0,i,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=gt.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),s.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,s,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},Di=(e,t,n,r,s,o,a,i,l,d,u,c)=>{let p="NHWC"===s.format,m=t.type.value,h=on("output",t.type.tensor,r);if(s.kernelShape.length<=2){let r="",d="",f="",_=n-(p?2:1);if(r=u?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${_}] < 0 || xIndices[${_}]\n                      >= uniforms.x_shape[${_}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${o}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${_}] = indices[${_}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${o}\n                }`,2===s.kernelShape.length){let e=n-(p?3:2);d=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,f="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,h)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${h.offsetToIndices("global_idx")};\n              var xIndices = ${h.offsetToIndices("global_idx")};\n\n              var value = ${m}(${i});\n              var pad = 0;\n              ${d}\n              ${r}\n              ${f}\n              ${a}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=s.kernelShape.length,u=s.pads.length,c="";return c=d?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${o}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${o}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,h)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${h.offsetToIndices("global_idx")};\n              var xIndices = ${h.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${m}(${i});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${nn("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${nn("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${nn("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${nn("uniforms.pads","j - 2u",u)};\n                  ${c}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Bi=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ni=e=>`${Bi(e)};${e.countIncludePad}`,Ri=e=>`${Bi(e)};${e.storageOrder};${e.dilations}`,ji=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Vi=(e,t,n,r)=>{let[s,o]=Li(t,r,n),a=sn("x",t.dataType,t.dims.length),i=a.type.value,l="";s.countIncludePad?l+=`value /= ${i}(uniforms.kernelSize);`:l+=`value /= ${i}(i32(uniforms.kernelSize) - pad);`;let[d,u,c,p,m]=Oi(o,s);d.push(...Jt(t.dims,o));return{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${m}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(gt.size(o)/64)},programUniforms:d}),getShaderSource:e=>Di(e,a,t.dims.length,o.length,s,"value += x_val;",l,0,u,c,p,m)}},Gi=e=>{let t=0!==e.count_include_pad,n=ji(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:Ni(r)}},qi=(e,t)=>{zi(e.inputs),e.compute(Vi("AveragePool",e.inputs[0],!1,t))},Ui={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Wi=e=>{let t=e.format;return{format:t,...Ui,cacheKey:t}},Hi=(e,t)=>{zi(e.inputs),e.compute(Vi("GlobalAveragePool",e.inputs[0],!0,t))},Qi=(e,t,n,r)=>{let[s,o]=Li(t,r,n),a=sn("x",t.dataType,t.dims.length),[i,l,d,u,c]=Oi(o,s);return i.push(...Jt(t.dims,o)),{name:e,shaderCache:{hint:`${r.cacheKey};${d};${u};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(gt.size(o)/64)},programUniforms:i}),getShaderSource:e=>Di(e,a,t.dims.length,o.length,s,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,d,u,c)}},Ki=(e,t)=>{zi(e.inputs),e.compute(Qi("MaxPool",e.inputs[0],!1,t))},Xi=e=>{let t=e.storage_order,n=e.dilations,r=ji(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:n,...r,cacheKey:""};return{...s,cacheKey:Ri(s)}},Ji=e=>{let t=e.format;return{format:t,...Ui,cacheKey:t}},Yi=(e,t)=>{zi(e.inputs),e.compute(Qi("GlobalMaxPool",e.inputs[0],!0,t))}})),du=R((()=>{dd(),pd(),wd(),bd(),Zi=(e,t)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(3===e.length&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(6===e[0].dataType&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(0!==e[1].dims.length&&1!==e[1].dims.length&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map(((t,n)=>t===e[2].dims[n])).reduce(((e,t)=>e&&t),!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(t.blockSize>0){if(0===e[1].dims.length||1===e[1].dims.length&&1===e[1].dims[0])throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map(((n,r)=>r===t.axis||n===e[0].dims[r])).reduce(((e,t)=>e&&t),!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let n=e[0].dims[t.axis],r=e[1].dims[t.axis];if(t.blockSize<Math.ceil(n/r)||t.blockSize>Math.ceil(n/(r-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},el=(e,t)=>{let n=gt.normalizeAxis(t.axis,e[0].dims.length),r=e[0].dataType,s=3===r,o=e[0].dims,a=e[1].dataType,i=gt.size(o),l=3===r||2===r,d=l?[Math.ceil(gt.size(e[0].dims)/4)]:e[0].dims,u=e[1].dims,c=e.length>2?e[2]:void 0,p=c?l?[Math.ceil(gt.size(c.dims)/4)]:c.dims:void 0,m=0===u.length||1===u.length&&1===u[0],h=!1===m&&1===u.length,f=Yt(i),_=m&&(!l||4===f),g=_?f:1,w=_&&!l?f:1,b=sn("input",l?12:r,d.length,w),y=sn("scale",a,u.length),M=c?sn("zero_point",l?12:r,p.length):void 0,x=on("output",a,o.length,g),v=[b,y];M&&v.push(M);let T=[d,u];c&&T.push(p);let k=[{type:12,data:i/g},{type:12,data:n},{type:12,data:t.blockSize},...Jt(...T,o)];return{name:"DequantizeLinear",shaderCache:{hint:t.cacheKey,inputDependencies:M?["rank","rank","rank"]:["rank","rank"]},getShaderSource:e=>`\n      ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...v,x)}\n      ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          let output_indices = ${x.offsetToIndices("global_idx")};\n\n          // Set input x\n          ${l?`\n            let input = ${b.getByOffset("global_idx / 4")};\n            let x_vec = ${s?"unpack4xI8(input)":"unpack4xU8(input)"};\n            let x_value = ${1===g?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${b.getByOffset("global_idx")};`};\n\n          // Set scale input\n          ${m?`let scale_value= ${y.getByOffset("0")}`:h?`\n            let scale_index = ${x.indicesGet("output_indices","uniforms.axis")};\n            let scale_value= ${y.getByOffset("scale_index")};`:`\n            var scale_indices: ${y.type.indices} = output_indices;\n            let index = ${y.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;\n            ${y.indicesSet("scale_indices","uniforms.axis","index")};\n            let scale_value= ${y.getByIndices("scale_indices")};`};\n\n          // Set zero-point input\n          ${M?m?l?`\n                let zero_point_input = ${M.getByOffset("0")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${M.getByOffset("0")}`:h?l?`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_input = ${M.getByOffset("zero_point_index / 4")};\n                let zero_point_vec =  ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`\n                let zero_point_index = ${x.indicesGet("output_indices","uniforms.axis")};\n                let zero_point_value = ${M.getByOffset("zero_point_index")};`:l?`\n                let zero_point_offset = ${y.indicesToOffset("scale_indices")};\n                let zero_point_input = ${M.getByOffset("zero_point_offset / 4")};\n                let zero_point_vec = ${s?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};\n                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${M.getByIndices("scale_indices")};`:`let zero_point_value = ${l?s?"i32":"u32":b.type.value}(0);`};\n      // Compute and write output\n      ${x.setByOffset("global_idx",`${x.type.value}(x_value - zero_point_value) * scale_value`)};\n      }`,getRunData:()=>({outputs:[{dims:o,dataType:a}],dispatchGroup:{x:Math.ceil(i/g/64),y:1,z:1},programUniforms:k})}},tl=(e,t)=>{Zi(e.inputs,t),e.compute(el(e.inputs,t))},nl=e=>Wt({axis:e.axis,blockSize:e.blockSize})})),uu=R((()=>{le(),dd(),bd(),rl=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},sl=(e,t,n,r)=>{let s=Math.abs(Math.ceil((t-e)/n)),o=[s],a=s,i=[{type:12,data:a},{type:r,data:e},{type:r,data:n},...Jt(o)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=on("output",r,o.length),n=t.type.value,s=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(s).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:o,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:i})}},ol=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),p.webgpu.validateInputContent&&rl(t,n,r),e.compute(sl(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),cu=R((()=>{dd(),pd(),wd(),bd(),al=(e,t,n,r)=>{if("none"!==e&&"i32"!==r&&"u32"!==r&&"f32"!==r)throw new Error(`Input ${r} is not supported with reduction ${e}.`);let s="{\n                var oldValue = 0;\n                loop {\n                  let newValueF32 =",o=`;\n                  let newValue = bitcast<i32>(newValueF32);\n                  let res = atomicCompareExchangeWeak(&${t}, oldValue, newValue);\n                  if res.exchanged {\n                    break;\n                  }\n                  oldValue = res.old_value;\n                }\n              }`;switch(e){case"none":return`${t}=${n};`;case"add":return"i32"===r||"u32"===r?`atomicAdd(&${t}, bitcast<${r}>(${n}));`:`\n              ${s}bitcast<${r}>(oldValue) + (${n})${o}`;case"max":return"i32"===r||"u32"===r?`atomicMax(&${t}, bitcast<${r}>(${n}));`:`\n                ${s}max(bitcast<f32>(oldValue), (${n}))${o}`;case"min":return"i32"===r||"u32"===r?`atomicMin(&${t}, bitcast<${r}>(${n}));`:`${s}min(bitcast<${r}>(oldValue), (${n}))${o}`;case"mul":return`${s}(bitcast<${r}>(oldValue) * (${n}))${o}`;default:throw new Error(`Reduction ${e} is not supported.`)}},il=(e,t)=>(1===e?"\n    let element_count_dim = uniforms.output_strides;\n    let dim_value = uniforms.output_shape;":`\n    let element_count_dim = uniforms.output_strides[${t?"i - indices_start":"i"}];\n    let dim_value = uniforms.output_shape[${t?"i - indices_start":"i"} + uniforms.last_index_dimension];`)+"\n    \n    if (index >= 0) {\n      if (index >= i32(dim_value)) {\n        index = i32(dim_value - 1);\n      }\n    } else {\n      if (index < -i32(dim_value)) {\n        index = 0;\n      } else {\n        index += i32(dim_value);\n      }\n    }\n    data_offset += u32((u32(index) * element_count_dim));",ll=(e,t,n)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {\n        let value = updates[uniforms.num_updates_elements * ${n?"global_idx":"idx"} + i];\n        ${al(e.reduction,"output[data_offset + i]","value",t)}\n      }`,dl=(e,t)=>{let n=e[0].dims,r=e[1].dims,s=n,o=Math.ceil(gt.size(r)/1),a=r[r.length-1],i=gt.sizeFromDimension(n,a),l=gt.sizeFromDimension(r,0)/a,d=[{type:12,data:o},{type:12,data:a},{type:12,data:i},...Jt(e[1].dims,e[2].dims,s)];return{name:"ScatterND",shaderCache:{hint:`${t.cacheKey}_${t.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:d}),getShaderSource:r=>{let o=sn("indices",e[1].dataType,e[1].dims.length),a=sn("updates",e[2].dataType,e[2].dims.length,1),i="none"!==t.reduction&&""!==t.reduction?an("output",e[0].dataType,s.length):on("output",e[0].dataType,s.length,1);return`\n      ${r.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(o,a,i)}\n      ${r.mainStart()}\n        ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n  var hasDuplicates = false;\n  if (${"none"===t.reduction}) {\n    for (var i = 0; i < ${l}; i = i + 1) {\n      for (var j = i + 1; j < ${l}; j = j + 1) {\n        var index_i = i32(indices[i].x);\n        var index_j = i32(indices[j].x);\n        if (index_i == index_j) {\n          hasDuplicates = true;\n          break;\n        }\n      }\n      if (hasDuplicates) {\n        break;\n      }\n    }\n  }\n\n  if (${"none"===t.reduction} && hasDuplicates) {\n    if (global_idx != 0u) {\n      return;\n    }\n    // Process each index-update pair individually when duplicates exist\n    for (var idx = 0u; idx < ${l}u; idx++) {\n      var data_offset = 0u;\n      for (var i = 0u; i < uniforms.last_index_dimension; i++) {\n        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);\n        ${il(n.length,!1)}\n      }\n      ${ll(t,i.type.value,!1)}\n    }\n    return;\n  }\n\n  var data_offset = 0u;\n  var indices_start = uniforms.last_index_dimension * global_idx;\n  var indices_end = indices_start + uniforms.last_index_dimension;\n  for (var i = indices_start; i < indices_end; i++) {\n    var index = i32(indices[i].x);\n    ${il(n.length,!0)}\n  }\n  ${ll(t,i.type.value,!0)}\n  }`}}},ul=e=>Wt({reduction:e.reduction}),cl=(e,t)=>{e.compute(dl(e.inputs,t),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}})),pu=R((()=>{dd(),pd(),wd(),bd(),pl=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},ml=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},hl=(e,t,n,r,s,o)=>{let[a,i,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],d=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach((e=>o.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(i>0&&e.length>i&&1===e[i].dims.length&&e[i].dims[0]>0){if(e[i].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==d&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");pl(r,t),t.axes.length>0&&ml(r,t.axes,d).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&1===e[l].dims.length&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach((e=>s.push(Number(e)))),0!==s.length&&s.length!==d&&n>=18&&s.length!==t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(0!==r.length&&r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(0!==s.length&&s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof s<"u"&&r.length>0&&s.length>d)throw new Error("Resize requires only of scales or sizes to be specified")},fl=(e,t,n,r)=>`\n  // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n  // offset-by-one error later in floor().\n  let big = (${e}) * (${t});\n  let whole = ${r}(big / (${n}));\n  let fract = ${r}(big % (${n})) / ${r}(${n});\n  return whole + fract;\n`,_l=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`\n          if (xScale < 1.0 || floor(xScale) != xScale) {\n            return ${t}(xResized) / ${t}(xScale);\n          } else {\n            ${fl("xResized","lengthOriginal","lengthResized",t)}\n          }\n        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    ${fl("xResized","lengthOriginal - 1","lengthResized - 1",t)}\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",gl=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",wl=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),s=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,o)=>{r[e]=s[o],r[o+n]=s[t.length+o]})),r):s},bl=(e,t,n,r)=>{let s=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>s.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>s[e]=n[t]))}else n.forEach((e=>s.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");s=e.map(((e,n)=>Math.round(e*t[n])))}return s},yl=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>s[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),s.forEach(((e,n)=>s[n]=Math.round(e*t[n])))),s},Ml=(e,t,n,r,s)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${nn("uniforms.scales","i",r)};\n        var roi_low = ${nn("uniforms.roi","i",s)};\n        var roi_hi = ${nn("uniforms.roi",`i + ${t.length}`,s)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${nn("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${nn("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,xl=(e,t,n,r,s,o,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${nn("uniforms.scales","i",s)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${nn("uniforms.roi","i",o)};\n          var roi_hi = ${nn("uniforms.roi",`i + ${n.length}`,o)};\n          var input_shape_i = ${nn("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${nn("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i","input_index")}\n      }\n      return input_indices;\n    }`,vl=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${nn("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Tl=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",kl=(e,t,n,r,s)=>{let[o,a,i,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(row, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",i,`max(0, min(col, ${n[i]} - 1))`)};\n      ${Tl(e,l,o,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${a}];\n      var col:${d} = originalIndices[${i}];\n      ${r?`if (row < 0 || row > (${n[a]} - 1) || col < 0 || col > (${n[i]} - 1)) {\n        return ${s};\n      }`:""};\n      row = max(0, min(row, ${n[a]} - 1));\n      col = max(0, min(col, ${n[i]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${o}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Pl=(e,t,n,r,s,o,a,i,l,d)=>{let u=2===n.length,[c,p]=u?[0,1]:[2,3],m=e.type.value,h=a=>{let u=a===c?"row":"col";return`\n      fn ${u}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${m} {\n        var output_index = ${t.indicesGet("output_indices",a)};\n        var originalIdx: ${m} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[a]},\n        ${r[a]}, ${n[a]}, ${o[a]}, ${o[a]} + ${n.length});\n        var fractOriginalIdx: ${m} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${i} && (originalIdx < 0 || originalIdx > (${n[a]} - 1))) {\n          return ${l};\n        }\n        var data: array<${m}, 4> = array<${m}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${u}: ${m} = originalIdx + ${m}(i);\n          if (${u} < 0 || ${u} >= ${n[a]}) {\n            ${d?"coefs[i + 1] = 0.0;\n                        continue;":i?`return ${l};`:`${u} = max(0, min(${u}, ${n[a]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",a,`u32(${u})`)};\n          data[i + 1] = ${a===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${h(c)};\n    ${h(p)};\n  fn getCubicInterpolationCoefs(s: ${m}) -> array<${m}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${m}, 4> = array<${m}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${m} = 1.0 - absS;\n    var twoMinusAbsS: ${m} = 2.0 - absS;\n    var onePlusAbsS: ${m} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${m}, 4>, coefs: array<${m}, 4>) -> ${m} {\n    var coefsSum: ${m} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${m} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},$l=(e,t,n,r,s)=>{let[o,a,i,l,d]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",a,`max(0, min(depth, ${n[a]} - 1))`)};\n      ${e.indicesSet("input_indices",i,`max(0, min(height, ${n[i]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${Tl(e,d,o,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${u} = originalIndices[${a}];\n      var height:${u} = originalIndices[${i}];\n      var width:${u} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[a]} - 1) || height < 0 || height > (${n[i]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${s};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[a]} - 1));\n      height = max(0, min(height, ${n[i]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${o}])`:"0"};\n\n      var x111: ${u} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${u} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${u} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${u} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${u} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${u} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${u} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${u} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${u} = abs(depth - ${u}(depth1));\n      var dx2: ${u} = abs(${u}(depth2) - depth);\n      var dy1: ${u} = abs(height - ${u}(height1));\n      var dy2: ${u} = abs(${u}(height2) - height);\n      var dz1: ${u} = abs(width - ${u}(width1));\n      var dz2: ${u} = abs(${u}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Cl=(e,t,n,r,s,o)=>{let a=e.dims,i=wl(o,t.axes,a.length),l=bl(a,r,s,t.axes),d=r.slice();0===r.length&&(d=a.map(((e,t)=>0===e?1:l[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(l=yl(a,d,t)));let u=on("output",e.dataType,l.length),c=sn("input",e.dataType,a.length),p=gt.size(l),m=a.length===l.length&&a.every(((e,t)=>e===l[t])),h="tf_crop_and_resize"===t.coordinateTransformMode,f=t.extrapolationValue,_=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${d.length>0?"cubic"===t.mode?d:d.length:""}|${s.length>0?s:""}|${i.length>0?i:""}|${m}|${"nearest"===t.mode?a.length:a}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${m?"":`\n      ${_l(t.coordinateTransformMode,_)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${vl(c,a)};\n              ${gl(t.nearestMode,n,_)};\n              ${xl(c,u,a,l,d.length,i.length,h)};\n              `;case"linear":return`\n              ${Ml(u,a,l,d.length,i.length)};\n              ${(()=>{if(2===a.length||4===a.length)return`${kl(c,u,a,h,f)}`;if(3===a.length||5===a.length)return`${$l(c,u,a,h,f)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===a.length||4===a.length)return`${Pl(c,u,a,l,d,i,t.cubicCoeffA,h,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",d.length).registerUniform("roi","f32",i.length).declareVariables(c,u)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${m?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${u.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===a.length||4===a.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:d},{type:1,data:i},...Jt(a,l)]})}},Sl=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Fl=(e,t)=>{let n=[],r=[],s=[],o=Sl(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");hl(e.inputs,t,o,n,r,s),e.compute(Cl(e.inputs[0],t,o,n,r,s),{inputs:[0]})},El=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,s=e.cubicCoeffA,o=0!==e.excludeOutside,a=e.extrapolationValue,i=e.keepAspectRatioPolicy,l=e.mode,d=""===e.nearestMode?"simple":e.nearestMode;return Wt({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:s,excludeOutside:o,extrapolationValue:a,keepAspectRatioPolicy:i,mode:l,nearestMode:d})}})),mu=R((()=>{dd(),pd(),bd(),Il=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],o=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==o)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},Al=(e,t,n,r)=>{let s=t.simplified,o=e[0].dims,a=gt.size(o),i=o,l=a,d=o.slice(-1)[0],u=r?o.slice(0,-1).concat(1):[],c=!s&&e.length>3,p=e.length>4,m=r&&n>1,h=r&&n>2,f=n>3,_=64,g=Yt(d),w=[{type:12,data:l},{type:12,data:g},{type:12,data:d},{type:1,data:t.epsilon}],b=[{dims:i,dataType:e[0].dataType}];return n>1&&b.push({dims:u,dataType:1}),n>2&&b.push({dims:u,dataType:1}),n>3&&b.push({dims:o,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${m};${h};${f}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[sn("x",e[0].dataType,e[0].dims,g),sn("skip",e[1].dataType,e[1].dims,g),sn("gamma",e[2].dataType,e[2].dims,g)];c&&n.push(sn("beta",e[3].dataType,e[3].dims,g)),p&&n.push(sn("bias",e[4].dataType,e[4].dims,g)),n.push(on("output",e[0].dataType,i,g)),m&&n.push(on("mean_output",1,u)),h&&n.push(on("inv_std_output",1,u)),f&&n.push(on("input_skip_bias_sum",e[0].dataType,i,g));let r=Kt(e[0].dataType),o=Kt(1,g);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n      var<workgroup> sum_shared : array<${o}, 64>;\n      var<workgroup> sum_squared_shared : array<${o}, 64>;\n\n      ${t.mainStart([_,1,1])}\n        let ix = local_id.x;\n        let iy = global_id.x / 64;\n\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        var stride = hidden_size_vectorized / 64;\n        let offset = ix * stride + iy * hidden_size_vectorized;\n        let offset1d = stride * ix;\n        if (ix == 63) {\n          stride = hidden_size_vectorized - stride * ix;\n        }\n        for (var i: u32 = 0; i < stride; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[offset1d + i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${f?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${en(r,g,"value")};\n          sum_shared[ix] += f32_value;\n          sum_squared_shared[ix] += f32_value * f32_value;\n        }\n        workgroupBarrier();\n\n        var reduce_size : u32 = 64;\n        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {\n          reduce_size = curr_size + (reduce_size & 1);\n          if (ix < curr_size) {\n            sum_shared[ix] += sum_shared[ix + reduce_size];\n            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];\n          }\n          workgroupBarrier();\n        }\n\n        let sum = sum_shared[0];\n        let square_sum = sum_squared_shared[0];\n        let mean = ${tn("sum",g)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${tn("square_sum",g)} / f32(uniforms.hidden_size) ${s?"":"- mean * mean"} + uniforms.epsilon);\n        ${m?"mean_output[global_idx] = mean;":""}\n        ${h?"inv_std_output[global_idx] = inv_std_dev;":""}\n\n        for (var i: u32 = 0; i < stride; i++) {\n          output[offset + i] = (output[offset + i] ${s?"":`- ${r}(mean)`}) *\n            ${r}(inv_std_dev) * gamma[offset1d + i]\n            ${c?"+ beta[offset1d + i]":""};\n        }\n      }`},getRunData:()=>({outputs:b,dispatchGroup:{x:Math.ceil(l/d)},programUniforms:w})}},zl=(e,t)=>{Il(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(Al(e.inputs,t,e.outputCount,!1),{outputs:n})}})),hu=R((()=>{dd(),pd(),wd(),bd(),Ll=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},Ol=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},Dl=(e,t)=>{if(e.length>1){let t=Ol(e,1),n=Ol(e,2),r=Ol(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),Wt({starts:t,ends:n,axes:r})}return t},Bl=(e,t,n,r,s)=>{let o=e;return e<0&&(o+=n[r[t]]),s[t]<0?Math.max(0,Math.min(o,n[r[t]]-1)):Math.max(0,Math.min(o,n[r[t]]))},Nl=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${nn("uniforms.input_shape","i",n.length)};\n            let steps_i = ${nn("uniforms.steps","i",n.length)};\n            let signs_i = ${nn("uniforms.signs","i",n.length)};\n            let starts_i = ${nn("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Rl=(e,t)=>{let n=e[0].dims,r=gt.size(n),s=t.axes.length>0?gt.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],o=Ol(e,4);o.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===o.length&&(o=Array(s.length).fill(1));let a=t.starts.map(((e,t)=>Bl(e,t,n,s,o))),i=t.ends.map(((e,t)=>Bl(e,t,n,s,o)));if(s.length!==a.length||s.length!==i.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==n.length)for(let e=0;e<n.length;++e)s.includes(e)||(a.splice(e,0,0),i.splice(e,0,n[e]),o.splice(e,0,1));let l=o.map((e=>Math.sign(e)));o.forEach(((e,t,n)=>{if(e<0){let r=(i[t]-a[t])/e,s=a[t],l=s+r*o[t];a[t]=l,i[t]=s,n[t]=-e}}));let d=n.slice(0);s.forEach(((e,t)=>{d[e]=Math.ceil((i[e]-a[e])/o[e])}));let u={dims:d,dataType:e[0].dataType},c=on("output",e[0].dataType,d.length),p=sn("input",e[0].dataType,e[0].dims.length),m=gt.size(d),h=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:o.length}],f=[{type:12,data:m},{type:12,data:a},{type:6,data:l},{type:12,data:o},...Jt(e[0].dims,d)];return{name:"Slice",shaderCache:{hint:`${l.length}_${a.length}_${o.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(h).declareVariables(p,c)}\n        ${Nl(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[u],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:f})}},jl=(e,t)=>{Ll(e.inputs,t);let n=Dl(e.inputs,t);e.compute(Rl(e.inputs,n),{inputs:[0]})},Vl=e=>{let t=e.starts,n=e.ends,r=e.axes;return Wt({starts:t,ends:n,axes:r})}})),fu=R((()=>{dd(),pd(),wd(),yd(),bd(),Gl=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},ql=(e,t)=>{let n,r=e.inputs[0],s=r.dims,o=gt.size(s),a=s.length,i=gt.normalizeAxis(t.axis,a),l=i<s.length-1,d=[];l?(d=Array.from({length:a},((e,t)=>t)),d[i]=a-1,d[a-1]=i,n=e.compute(gn(r,d),{inputs:[r],outputs:[-1]})[0]):n=r;let u=n.dims,c=u[a-1],p=o/c,m=Yt(c),h=c/m,f=64;1===p&&(f=256);let _=sn("x",n.dataType,n.dims,m),g=on("result",n.dataType,n.dims,m),w=_.type.value,b="f32"===Kt(n.dataType)?`var threadMax = ${w}(-3.402823e+38f);`:`var threadMax = ${w}(-65504.0h);`,y=e.compute({name:"Softmax",shaderCache:{hint:`${m};${f}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:u,dataType:n.dataType}],dispatchGroup:{x:p},programUniforms:[{type:6,data:h}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${w};\n      var<workgroup> rowSumShared : ${w};\n      var<workgroup> threadShared : array<${w}, ${f}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${w} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${w}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(_,g)}\n      ${e.mainStart(f)}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${f};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${b}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${w}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${w}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${w}(${tn("threadShared[0]",m)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`},{inputs:[n],outputs:[l?-1:0]})[0];l&&e.compute(gn(y,d),{inputs:[y]})},Ul=(e,t)=>{Gl(e.inputs),ql(e,t)},Wl=e=>Wt({axis:e.axis})})),_u=R((()=>{dd(),pd(),bd(),Hl=e=>Array.from(e.getBigInt64Array(),Number),Ql=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&10!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(Hl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Kl=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},Xl=(e,t)=>{let n=e[0].dims,r=t??Hl(e[1]),s=Kl(n,r),o=gt.size(s),a=e[0].dataType,i=sn("input",a,n.length),l=on("output",a,s.length);return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:[{type:12,data:o},...Jt(e[0].dims,s)]}),getShaderSource:e=>`\n      const inputShape = ${i.indices(...n)};\n      ${e.registerUniform("output_size","u32").declareVariables(i,l)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${l.offsetToIndices("global_idx")};\n      var input_indices: ${i.type.indices};\n      for (var i = 0; i < ${n.length}; i++) {\n        let input_dim_i = ${i.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${i.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${l.setByOffset("global_idx",i.getByIndices("input_indices"))}\n    }`}},Jl=e=>{Ql(e.inputs),e.compute(Xl(e.inputs),{inputs:[0]})}})),gu=R((()=>{dd(),pd(),bd(),Yl=(e,t,n,r,s)=>{let o,a=on("output_data",s,n.length,4),i=sn("a_data",t[1].dataType,t[1].dims.length,4),l=sn("b_data",t[2].dataType,t[2].dims.length,4),d=sn("c_data",t[0].dataType,t[0].dims.length,4),u=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,s=`b_data[index_b${t}][component_b${t}]`,o=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${a.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${i.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let offset_c${t} = ${d.broadcastedIndicesToOffset(`output_indices${t}`,a)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${u(r,s,o)});\n          `};o=9===s?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else o=a.setByOffset("global_idx",u(i.getByOffset("global_idx"),l.getByOffset("global_idx"),d.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(d,i,l,a)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${o}\n      }`},Zl=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,s=e[1].dataType,o=!(gt.areEqual(t,n)&&gt.areEqual(n,r)),a=t,i=gt.size(t);if(o){let e=_t.calcShape(_t.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");a=e,i=gt.size(a)}let l=Math.ceil(i/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>Yl(t,e,a,o,s),getRunData:()=>({outputs:[{dims:a,dataType:s}],dispatchGroup:{x:Math.ceil(i/64/4)},programUniforms:[{type:12,data:l},...Jt(r,t,n,a)]})}},ed=e=>{e.compute(Zl(e.inputs))}})),wu=R((()=>{vd(),Td(),kd(),Pd(),Cd(),Sd(),Fd(),Nd(),jd(),Vd(),Gd(),qd(),Ud(),Wd(),Hd(),Qd(),Kd(),Xd(),Jd(),Yd(),nu(),ru(),su(),ou(),au(),Zd(),iu(),lu(),du(),uu(),cu(),xd(),pu(),tu(),mu(),hu(),fu(),eu(),_u(),yd(),$d(),gu(),td=new Map([["Abs",[zr]],["Acos",[Lr]],["Acosh",[Or]],["Add",[Ss]],["ArgMax",[fr,_r]],["ArgMin",[hr,_r]],["Asin",[Dr]],["Asinh",[Br]],["Atan",[Nr]],["Atanh",[Rr]],["Attention",[Tr]],["AveragePool",[qi,Gi]],["BatchNormalization",[Cr]],["BiasAdd",[Er]],["BiasSplitGelu",[ks]],["Cast",[Vr,jr]],["Ceil",[Ur]],["Clip",[qr]],["Concat",[Gs,qs]],["Conv",[So,ko]],["ConvTranspose",[No,Lo]],["Cos",[Wr]],["Cosh",[Hr]],["CumSum",[jo,Vo]],["DepthToSpace",[Wo,Ho]],["DequantizeLinear",[tl,nl]],["Div",[Fs]],["Einsum",[na,ra]],["Elu",[Kr,Qr]],["Equal",[Es]],["Erf",[Jr]],["Exp",[Yr]],["Expand",[la]],["FastGelu",[ua]],["Floor",[Zr]],["FusedConv",[So,ko]],["Gather",[ha,ma]],["GatherElements",[ka,Ta]],["GatherBlockQuantized",[ya,Ma]],["GatherND",[_a,ga]],["Gelu",[es]],["Gemm",[Sa,Ca]],["GlobalAveragePool",[Hi,Wi]],["GlobalMaxPool",[Yi,Ji]],["Greater",[Ls]],["GreaterOrEqual",[Ds]],["GridSample",[ja,Va]],["GroupQueryAttention",[ui]],["HardSigmoid",[ls,is]],["InstanceNormalization",[hi]],["LayerNormalization",[gi]],["LeakyRelu",[ts,Qr]],["Less",[Os]],["LessOrEqual",[Bs]],["Log",[bs]],["MatMul",[bi]],["MatMulNBits",[vi,Ti]],["MaxPool",[Ki,Xi]],["Mul",[Is]],["MultiHeadAttention",[Ka,Ua]],["Neg",[rs]],["Not",[ns]],["Pad",[Ai]],["Pow",[As]],["QuickGelu",[xs,Qr]],["Range",[ol]],["Reciprocal",[ss]],["ReduceMin",[lr]],["ReduceMean",[rr]],["ReduceMax",[ir]],["ReduceSum",[ur]],["ReduceProd",[dr]],["ReduceL1",[sr]],["ReduceL2",[or]],["ReduceLogSum",[pr]],["ReduceLogSumExp",[ar]],["ReduceSumSquare",[cr]],["Relu",[os]],["Resize",[Fl,El]],["RotaryEmbedding",[oi]],["ScatterND",[cl,ul]],["Sigmoid",[as]],["Sin",[ds]],["Sinh",[us]],["Slice",[jl,Vl]],["SkipLayerNormalization",[zl]],["Split",[ti,ni]],["Sqrt",[cs]],["Softmax",[Ul,Wl]],["Sub",[zs]],["Tan",[ps]],["Tanh",[hs]],["ThresholdedRelu",[ws,Qr]],["Tile",[Jl]],["Transpose",[wn,bn]],["Where",[ed]]])})),bu=R((()=>{le(),cd(),bd(),nd=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,s){E(e.programInfo.name);let o=this.backend.device,a=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let i=[];for(let e of t)i.push({binding:i.length,resource:{buffer:e.buffer}});for(let e of n)i.push({binding:i.length,resource:{buffer:e.buffer}});s&&i.push({binding:i.length,resource:s});let l=o.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:i,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}a.setPipeline(e.computePipeline),a.setBindGroup(0,l),a.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),I(e.programInfo.name)}dispose(){}build(e,t){E(e.name);let n=this.backend.device,r=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach((e=>{n.features.has(e.feature)&&r.push(`enable ${e.extension};`)}));let s=un(t,this.backend.device.limits),o=e.getShaderSource(s),a=`${r.join("\n")}\n${s.additionalImplementations}\n${o}`,i=n.createShaderModule({code:a,label:e.name});ht("verbose",(()=>`[WebGPU] ${e.name} shader code: ${a}`));let l=n.createComputePipeline({compute:{module:i,entryPoint:"main"},layout:"auto",label:e.name});return I(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:s.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,s=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=s&&n<=s&&r<=s)return[t,n,r];let o=t*n*r,a=Math.ceil(Math.sqrt(o));if(a>s){if(a=Math.ceil(Math.cbrt(o)),a>s)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[a,a,a]}return[a,a,1]}}})),yu={};j(yu,{WebGpuBackend:()=>Tu});var Mu,xu,vu,Tu,ku=R((()=>{le(),dd(),cd(),md(),gd(),wu(),bu(),Mu=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let s=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${s}`);break;case"rank":{let t=e[r].dims.length;n.push(`${s};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${s};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},xu=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${Mu(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},vu=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Tu=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n},s=e=>t.features.has(e)&&n.push(e)&&!0;s("chromium-experimental-timestamp-query-inside-passes")||s("timestamp-query"),s("shader-f16"),s("subgroups"),this.device=await t.requestDevice(r),this.adapterInfo=new vu(t.info||await t.requestAdapterInfo()),this.gpuDataManager=qt(this),this.programManager=new nd(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pt(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;E(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],s=r.kernelId,o=this.kernels.get(s),a=o.kernelType,i=o.kernelName,l=r.programName,d=r.inputTensorViews,u=r.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let m=Number(c-this.queryTimeBase),h=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(m)||!Number.isSafeInteger(h))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:d.map((e=>({dims:e.dims,dataType:et(e.dataType)}))),outputsMetadata:u.map((e=>({dims:e.dims,dataType:et(e.dataType)}))),kernelId:s,kernelType:a,kernelName:i,programName:l,startTime:m,endTime:h});else{let e="";d.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${et(t.dataType)}, `}));let t="";u.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${et(e.dataType)}, `})),console.log(`[profiling] kernel "${s}|${a}|${i}|${l}" ${e}${t}execution time: ${h-m} ns`)}S("GPU",`${l}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),I()}run(e,t,n,r,s,o){E(e.name);let a=[];for(let e=0;e<t.length;++e){let n=t[e].data;if(0===n)continue;let r=this.gpuDataManager.get(n);if(!r)throw new Error(`no GPU data for input: ${n}`);a.push(r)}let{outputs:i,dispatchGroup:l,programUniforms:d}=e.getRunData(t),u=0===n.length?i.map(((e,t)=>t)):n;if(u.length!==i.length)throw new Error(`Output size ${u.length} must be equal to ${i.length}.`);let c,p=[],m=[];for(let e=0;e<i.length;++e){if(!Number.isInteger(u[e])||u[e]<-3||u[e]>=o)throw new Error(`Invalid output index: ${u[e]}`);if(-3===u[e])continue;let t=-1===u[e],n=-2===u[e],a=t||n?s(i[e].dataType,i[e].dims):r(u[e],i[e].dataType,i[e].dims);if(p.push(a),0===a.data)continue;let l=this.gpuDataManager.get(a.data);if(!l)throw new Error(`no GPU data for output: ${a.data}`);if(t&&this.temporaryData.push(l),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(l)}m.push(l)}if(a.length!==t.length||m.length!==p.length){if(0===m.length)return I(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(d){let e=0,t=[];d.forEach((n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let s,o,a=10===n.type?2:4;10===n.type?(o=r.length>4?16:r.length>2?8:r.length*a,s=r.length>4?16:a*r.length):(o=r.length<=2?r.length*a:16,s=16),e=Math.ceil(e/o)*o,t.push(e);let i=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/i)*s:r.length*a}));let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);d.forEach(((e,n)=>{let s=t[n],o="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,s,o.length).set(o);else if(12===e.type)new Uint32Array(r,s,o.length).set(o);else if(10===e.type)new Uint16Array(r,s,o.length).set(o);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${et(e.type)}`);new Float32Array(r,s,o.length).set(o)}}));let s=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(s.buffer,0,r,0,e),this.gpuDataManager.release(s.id),c={offset:0,size:e,buffer:s.buffer}}let h=this.programManager.normalizeDispatchGroupSize(l),f=1===h[1]&&1===h[2],_=xu(e,t,f),g=this.programManager.getArtifact(_);if(g||(g=this.programManager.build(e,h),this.programManager.setArtifact(_,g),ht("info",(()=>`[artifact] key: ${_}, programName: ${e.name}`))),d&&g.uniformVariablesInfo){if(d.length!==g.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${g.uniformVariablesInfo.length}, got ${d.length} in program "${g.programInfo.name}".`);for(let e=0;e<d.length;e++){let t=d[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[s,o]=g.uniformVariablesInfo[e];if(n!==s||r!==o)throw new Error(`Uniform variable ${e} mismatch: expect type ${s} with size ${o}, got type ${n} with size ${r} in program "${g.programInfo.name}".`)}}if(ht("info",(()=>`[ProgramManager] run "${e.name}" (key=${_}) with ${h[0]}x${h[1]}x${h[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:g.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(g,a,m,h,c),I(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let s=td.get(e);if(!s)throw new Error(`kernel not implemented: ${e}`);let o={kernelType:e,kernelName:r,kernelEntry:s[0],attributes:[s[1],n]};this.kernels.set(t,o)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let s=r.kernelType,o=r.kernelName,a=r.kernelEntry,i=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${s}] ${o}" is not allowed to be called recursively`);this.currentKernelId=e,i[0]&&(i[1]=i[0](i[1]),i[0]=void 0),ht("info",(()=>`[WebGPU] Start to run kernel "[${s}] ${o}"...`));let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),a(t,i[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${o}" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${s}] ${o}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let s=this.sessionExternalDataMapping.get(e);s||(s=new Map,this.sessionExternalDataMapping.set(e,s));let o=s.get(t),a=this.gpuDataManager.registerExternalBuffer(n,r,o);return s.set(t,[a,n]),a}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[0]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await Vt(this,e,t);return xt(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){ht("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){ht("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){ht("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),s=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(s.computePipeline),n.setBindGroup(0,s.bindGroup),n.dispatchWorkgroups(...s.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Pu={};j(Pu,{init:()=>Su});var $u,Cu,Su,Fu,Eu,Iu,Au,zu,Lu,Ou,Du,Bu,Nu,Ru,ju,Vu,Gu,qu,Uu,Wu,Hu,Qu,Ku,Xu,Ju,Yu,Zu,ec,tc,nc,rc,sc,oc,ac,ic,lc,dc,uc=R((()=>{dd(),cd(),pd(),fd(),$u=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=gt.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=gt.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=gt.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}getUint16Array(){if(10!==this.dataType&&4!==this.dataType)throw new Error("Invalid data type");let e=gt.size(this.dims);return 0===e?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(gt.size(t)!==gt.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Cu=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.PTR_SIZE,s=n/e.PTR_SIZE,o=4===r?"i32":"i64";this.opKernelContext=Number(e.getValue(r*s++,o));let a=Number(e.getValue(r*s++,o));this.outputCount=Number(e.getValue(r*s++,o)),this.customDataOffset=Number(e.getValue(r*s++,"*")),this.customDataSize=Number(e.getValue(r*s++,o));let i=[];for(let t=0;t<a;t++){let t=Number(e.getValue(r*s++,o)),n=Number(e.getValue(r*s++,"*")),a=Number(e.getValue(r*s++,o)),l=[];for(let t=0;t<a;t++)l.push(Number(e.getValue(r*s++,o)));i.push(new $u(e,t,n,l))}this.inputs=i}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new $u(this.module,t,this.output(e,n),n)),((e,t)=>{let n=tt(e,t);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n>0?this.backend.gpuDataManager.create(n).id:0;return new $u(this.module,e,r,t)}),this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.PTR_SIZE,r=4===n?"i32":"i64",s=this.module.stackAlloc((1+t.length)*n);this.module.setValue(s,t.length,r);for(let e=0;e<t.length;e++)this.module.setValue(s+n*(e+1),t[e],r);return this.module._JsepOutput(this.opKernelContext,e,s)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Su=async(e,t,n,r)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new(0,(ku(),V(yu)).WebGpuBackend);await e.initialize(n,r),s("webgpu",[e,t=>e.alloc(Number(t)),t=>e.free(t),(n,r,s,o=!1)=>{if(o)ht("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(n)}, dst=${Number(r)}, size=${Number(s)}`)),e.memcpy(Number(n),Number(r));else{ht("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(n)}, gpuDataId=${Number(r)}, size=${Number(s)}`));let o=t.HEAPU8.subarray(Number(n>>>0),Number(n>>>0)+Number(s));e.upload(Number(r),o)}},async(n,r,s)=>{ht("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${s}`)),await e.download(Number(n),(()=>t.HEAPU8.subarray(Number(r)>>>0,Number(r+s)>>>0)))},(n,r,s)=>e.createKernel(n,Number(r),s,t.UTF8ToString(t._JsepGetNodeName(Number(r)))),t=>e.releaseKernel(t),(n,r,s,o)=>{ht("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${s}, kernel=${n}, contextDataOffset=${r}`));let a=new Cu(t,e,Number(r));return e.computeKernel(Number(n),a,o)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else{let e=new Lt(n);s("webnn",[e,()=>e.reserveTensorId(),t=>e.releaseTensorId(t),async(t,n,r,s,o)=>e.ensureTensor(t,n,r,s,o),(t,n)=>{e.uploadTensor(t,n)},async(t,n)=>e.downloadTensor(t,n)])}}})),cc=R((()=>{id(),ld(),dd(),od(),ad(),ud(),Fu=(e,t)=>{0!==Ve()._OrtInit(e,t)&&Ue("Can't initialize onnxruntime.")},Eu=async e=>{Fu(e.wasm.numThreads,rt(e.logLevel))},Iu=async(e,t)=>{Ve().asyncInit?.();{let n=(uc(),V(Pu)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await n("webgpu",Ve(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",Ve(),e)}}},Au=new Map,zu=e=>{let t=Ve(),n=t.stackSave();try{let n=t.PTR_SIZE,r=t.stackAlloc(2*n);0!==t._OrtGetInputOutputCount(e,r,r+n)&&Ue("Can't get session input/output count.");let s=4===n?"i32":"i64";return[Number(t.getValue(r,s)),Number(t.getValue(r+n,s))]}finally{t.stackRestore(n)}},Lu=(e,t)=>{let n=Ve(),r=n.stackSave(),s=0;try{let r=n.PTR_SIZE,o=n.stackAlloc(2*r);0!==n._OrtGetInputOutputMetadata(e,t,o,o+r)&&Ue("Can't get session input/output metadata.");let a=Number(n.getValue(o,"*"));s=Number(n.getValue(o+r,"*"));let i=n.HEAP32[s/4];if(0===i)return[a,0];let l=n.HEAPU32[s/4+1],d=[];for(let e=0;e<l;e++){let t=Number(n.getValue(s+8+e*r,"*"));d.push(0!==t?n.UTF8ToString(t):Number(n.getValue(s+8+(e+l)*r,"*")))}return[a,i,d]}finally{n.stackRestore(r),0!==s&&n._OrtFree(s)}},Ou=e=>{let t=Ve(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},Du=async(e,t)=>{let n,r,s=Ve();Array.isArray(e)?[n,r]=e:e.buffer===s.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=Ou(e);let o=0,a=0,i=0,l=[],d=[],u=[];try{if([a,l]=await Ye(t),t?.externalData&&s.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(it("string"==typeof n?n:n.data).then((e=>{s.mountExternalData(t,e)})))}await Promise.all(e)}for(let e of t?.executionProviders??[])if("webnn"===("string"==typeof e?e:e.name)){if(s.shouldTransferToMLTensor=!1,"string"!=typeof e){let t=e,n=t?.context,r=t?.gpuDevice,o=t?.deviceType,a=t?.powerPreference;s.currentContext=n||(r?await s.webnnCreateMLContext(r):await s.webnnCreateMLContext({deviceType:o,powerPreference:a}))}else s.currentContext=await s.webnnCreateMLContext();break}o=await s._OrtCreateSession(n,r,a),s.webgpuOnCreateSession?.(o),0===o&&Ue("Can't create a session."),s.jsepOnCreateSession?.(),s.currentContext&&(s.webnnRegisterMLContext(o,s.currentContext),s.currentContext=void 0,s.shouldTransferToMLTensor=!0);let[e,c]=zu(o),p=!!t?.enableGraphCapture,m=[],h=[],f=[],_=[],g=[];for(let t=0;t<e;t++){let[e,n,r]=Lu(o,t);0===e&&Ue("Can't get an input name."),d.push(e);let a=s.UTF8ToString(e);m.push(a),f.push(0===n?{name:a,isTensor:!1}:{name:a,isTensor:!0,type:et(n),shape:r})}for(let n=0;n<c;n++){let[r,a,i]=Lu(o,n+e);0===r&&Ue("Can't get an output name."),u.push(r);let l=s.UTF8ToString(r);h.push(l),_.push(0===a?{name:l,isTensor:!1}:{name:l,isTensor:!0,type:et(a),shape:i});{if(p&&void 0===t?.preferredOutputLocation){g.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[l]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e&&"ml-tensor"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);g.push(e)}}let w=null;return g.some((e=>"gpu-buffer"===e||"ml-tensor"===e))&&(i=s._OrtCreateBinding(o),0===i&&Ue("Can't create IO binding."),w={handle:i,outputPreferredLocations:g,outputPreferredLocationsEncoded:g.map((e=>at(e)))}),Au.set(o,[o,d,u,w,p,!1]),[o,m,h,f,_]}catch(e){throw d.forEach((e=>s._OrtFree(e))),u.forEach((e=>s._OrtFree(e))),0!==i&&0!==s._OrtReleaseBinding(i)&&Ue("Can't release IO binding."),0!==o&&0!==s._OrtReleaseSession(o)&&Ue("Can't release session."),e}finally{s._free(n),0!==a&&0!==s._OrtReleaseSessionOptions(a)&&Ue("Can't release session options."),l.forEach((e=>s._free(e))),s.unmountExternalData?.()}},Bu=e=>{let t=Ve(),n=Au.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,s,o,a,i]=n;a&&(i&&0!==t._OrtClearBoundOutputs(a.handle)&&Ue("Can't clear bound outputs."),0!==t._OrtReleaseBinding(a.handle)&&Ue("Can't release IO binding.")),t.jsepOnReleaseSession?.(e),t.webnnOnReleaseSession?.(e),t.webgpuOnReleaseSession?.(e),s.forEach((e=>t._OrtFree(e))),o.forEach((e=>t._OrtFree(e))),0!==t._OrtReleaseSession(r)&&Ue("Can't release session."),Au.delete(e)},Nu=async(e,t,n,r,s,o,a=!1)=>{if(!e)return void t.push(0);let i,l,d=Ve(),u=d.PTR_SIZE,c=e[0],p=e[1],m=e[3],h=m;if("string"===c&&("gpu-buffer"===m||"ml-tensor"===m))throw new Error("String tensor is not supported on GPU.");if(a&&"gpu-buffer"!==m)throw new Error(`External buffer must be provided for input/output index ${o} when enableGraphCapture is true.`);if("gpu-buffer"===m){let t=e[2].gpuBuffer;l=tt(Ze(c),p);{let e=d.jsepRegisterBuffer;if(!e)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');i=e(r,o,t,l)}}else if("ml-tensor"===m){let t=e[2].mlTensor;l=tt(Ze(c),p);let n=d.webnnRegisterMLTensor;if(!n)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');i=n(r,t,Ze(c),p)}else{let t=e[2];if(Array.isArray(t)){l=u*t.length,i=d._malloc(l),n.push(i);for(let e=0;e<t.length;e++){if("string"!=typeof t[e])throw new TypeError(`tensor data at index ${e} is not a string`);d.setValue(i+e*u,Ge(t[e],n),"*")}}else{let e=d.webnnIsGraphInput;if("string"!==c&&e){if(e(r,d.UTF8ToString(s))){let e=Ze(c);l=tt(e,p),h="ml-tensor";let n=d.webnnCreateTemporaryTensor,s=d.webnnUploadTensor;if(!n||!s)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let o=await n(r,e,p);s(o,new Uint8Array(t.buffer,t.byteOffset,t.byteLength)),i=o}else l=t.byteLength,i=d._malloc(l),n.push(i),d.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),i)}else l=t.byteLength,i=d._malloc(l),n.push(i),d.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,l),i)}}let f=d.stackSave(),_=d.stackAlloc(4*p.length);try{p.forEach(((e,t)=>d.setValue(_+t*u,e,4===u?"i32":"i64")));let e=d._OrtCreateTensor(Ze(c),i,l,_,p.length,at(h));0===e&&Ue(`Can't create tensor for input/output. session=${r}, index=${o}.`),t.push(e)}finally{d.stackRestore(f)}},Ru=async(e,t,n,r,s,o)=>{let a=Ve(),i=a.PTR_SIZE,l=Au.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let d=l[0],u=l[1],c=l[2],p=l[3],m=l[4],h=l[5],f=t.length,_=r.length,g=0,w=[],b=[],y=[],M=[],x=a.stackSave(),v=a.stackAlloc(f*i),T=a.stackAlloc(f*i),k=a.stackAlloc(_*i),P=a.stackAlloc(_*i);try{[g,w]=We(o);for(let r=0;r<f;r++)await Nu(n[r],b,M,e,u[t[r]],t[r],m);for(let t=0;t<_;t++)await Nu(s[t],y,M,e,c[r[t]],f+r[t],m);for(let e=0;e<f;e++)a.setValue(v+e*i,b[e],"*"),a.setValue(T+e*i,u[t[e]],"*");for(let e=0;e<_;e++)a.setValue(k+e*i,y[e],"*"),a.setValue(P+e*i,c[r[e]],"*");if(p&&!h){let{handle:n,outputPreferredLocations:o,outputPreferredLocationsEncoded:i}=p;if(u.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${u.length}).`);for(let r=0;r<f;r++){let s=t[r];0!==await a._OrtBindInput(n,u[s],b[r])&&Ue(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<_;t++){let l=r[t];s[t]?.[3]?0!==a._OrtBindOutput(n,c[l],y[t],0)&&Ue(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==a._OrtBindOutput(n,c[l],0,i[l])&&Ue(`Can't bind output[${t}] to ${o[t]} for session=${e}.`)}Au.set(e,[d,u,c,p,m,!0])}let l;a.jsepOnRunStart?.(d),a.webnnOnRunStart?.(d),l=p?await a._OrtRunWithBinding(d,p.handle,_,k,g):await a._OrtRun(d,T,v,f,P,_,k,g),0!==l&&Ue("failed to call OrtRun().");let x=[];for(let t=0;t<_;t++){let n=Number(a.getValue(k+t*i,"*"));if(n===y[t]){x.push(s[t]);continue}let o,l=a.stackSave(),u=a.stackAlloc(4*i),c=!1,m=0;try{0!==a._OrtGetTensorData(n,u,u+i,u+2*i,u+3*i)&&Ue(`Can't access output tensor data on index ${t}.`);let s=4===i?"i32":"i64",l=Number(a.getValue(u,s));m=a.getValue(u+i,"*");let d=a.getValue(u+2*i,"*"),h=Number(a.getValue(u+3*i,s)),f=[];for(let e=0;e<h;e++)f.push(Number(a.getValue(d+e*i,s)));0!==a._OrtFree(d)&&Ue("Can't free memory for tensor dims.");let _=f.reduce(((e,t)=>e*t),1);o=et(l);let g=p?.outputPreferredLocations[r[t]];if("string"===o){if("gpu-buffer"===g||"ml-tensor"===g)throw new Error("String tensor is not supported on GPU.");let e=[];for(let t=0;t<_;t++){let n=a.getValue(m+t*i,"*"),r=a.getValue(m+(t+1)*i,"*"),s=t===_-1?void 0:r-n;e.push(a.UTF8ToString(n,s))}x.push([o,f,e,"cpu"])}else if("gpu-buffer"===g&&_>0){let e=a.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let t=e(m),r=tt(l,_);if(void 0===r||!st(o))throw new Error(`Unsupported data type: ${o}`);c=!0,x.push([o,f,{gpuBuffer:t,download:a.jsepCreateDownloader(t,r,o),dispose:()=>{0!==a._OrtReleaseTensor(n)&&Ue("Can't release tensor.")}},"gpu-buffer"])}else if("ml-tensor"===g&&_>0){let t=a.webnnEnsureTensor,r=a.webnnIsInt64Supported;if(!t||!r)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(void 0===tt(l,_)||!ot(o))throw new Error(`Unsupported data type: ${o}`);if("int64"===o&&!r(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let s=await t(e,m,l,f,!1);c=!0,x.push([o,f,{mlTensor:s,download:a.webnnCreateMLTensorDownloader(m,o),dispose:()=>{a.webnnReleaseTensorId(m),a._OrtReleaseTensor(n)}},"ml-tensor"])}else{let e=new(nt(o))(_);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(a.HEAPU8.subarray(m,m+e.byteLength)),x.push([o,f,e,"cpu"])}}finally{a.stackRestore(l),"string"===o&&m&&a._free(m),c||a._OrtReleaseTensor(n),a.webnnOnRunEnd?.(d)}}return p&&!m&&(0!==a._OrtClearBoundOutputs(p.handle)&&Ue("Can't clear bound outputs."),Au.set(e,[d,u,c,p,m,!1])),x}finally{a.stackRestore(x),b.forEach((e=>a._OrtReleaseTensor(e))),y.forEach((e=>a._OrtReleaseTensor(e))),M.forEach((e=>a._free(e))),0!==g&&a._OrtReleaseRunOptions(g),w.forEach((e=>a._free(e)))}},ju=e=>{let t=Ve(),n=Au.get(e);if(!n)throw new Error("invalid session id");let r=n[0],s=t._OrtEndProfiling(r);0===s&&Ue("Can't get an profile file name."),t._OrtFree(s)},Vu=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),pc=R((()=>{le(),cc(),od(),sd(),Gu=()=>!!p.wasm.proxy&&typeof document<"u",Uu=!1,Wu=!1,Hu=!1,Xu=new Map,Ju=(e,t)=>{let n=Xu.get(e);n?n.push(t):Xu.set(e,[t])},Yu=()=>{if(Uu||!Wu||Hu||!qu)throw new Error("worker not ready")},Zu=e=>{switch(e.data.type){case"init-wasm":Uu=!1,e.data.err?(Hu=!0,Ku[1](e.data.err)):(Wu=!0,Ku[0]()),Qu&&(URL.revokeObjectURL(Qu),Qu=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Xu.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},ec=async()=>{if(!Wu){if(Uu)throw new Error("multiple calls to 'initWasm()' detected.");if(Hu)throw new Error("previous call to 'initWasm()' failed.");if(Uu=!0,Gu())return new Promise(((e,t)=>{qu?.terminate(),Ee().then((([r,s])=>{try{(qu=s).onerror=e=>t(e),qu.onmessage=Zu,Ku=[e,t];let o={type:"init-wasm",in:p};!o.in.wasm.wasmPaths&&(r||Me)&&(o.in.wasm.wasmPaths={wasm:new URL(n("./node_modules/onnxruntime-web/dist/ort-wasm-simd-threaded.jsep.wasm"),n.b).href}),qu.postMessage(o),Qu=r}catch(e){t(e)}}),t)}));try{await je(p.wasm),await Eu(p),Wu=!0}catch(e){throw Hu=!0,e}finally{Uu=!1}}},tc=async e=>{if(Gu())return Yu(),new Promise(((t,n)=>{Ju("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:p}};qu.postMessage(r)}));await Iu(p,e)},nc=async e=>Gu()?(Yu(),new Promise(((t,n)=>{Ju("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};qu.postMessage(r,[e.buffer])}))):Ou(e),rc=async(e,t)=>{if(Gu()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return Yu(),new Promise(((n,r)=>{Ju("create",[n,r]);let s={type:"create",in:{model:e,options:{...t}}},o=[];e instanceof Uint8Array&&o.push(e.buffer),qu.postMessage(s,o)}))}return Du(e,t)},sc=async e=>{if(Gu())return Yu(),new Promise(((t,n)=>{Ju("release",[t,n]);let r={type:"release",in:e};qu.postMessage(r)}));Bu(e)},oc=async(e,t,n,r,s,o)=>{if(Gu()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return Yu(),new Promise(((s,a)=>{Ju("run",[s,a]);let i=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:i,outputIndices:r,options:o}};qu.postMessage(l,Vu(i))}))}return Ru(e,t,n,r,s,o)},ac=async e=>{if(Gu())return Yu(),new Promise(((t,n)=>{Ju("end-profiling",[t,n]);let r={type:"end-profiling",in:e};qu.postMessage(r)}));ju(e)}})),mc=R((()=>{le(),pc(),dd(),de(),ud(),ic=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},lc=e=>{switch(e[3]){case"cpu":return new C(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!st(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:s}=e[2];return C.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:s})}case"ml-tensor":{let t=e[0];if(!ot(t))throw new Error(`not supported data type: ${t} for deserializing MLTensor tensor`);let{mlTensor:n,download:r,dispose:s}=e[2];return C.fromMLTensor(n,{dataType:t,dims:e[1],download:r,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},dc=class{async fetchModelAndCopyToWasmMemory(e){return nc(await it(e))}async loadModel(e,t){let n;E(),n="string"==typeof e?await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await rc(n,t),I()}async dispose(){return sc(this.sessionId)}async run(e,t,n){E();let r=[],s=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],o=this.inputNames.indexOf(t);if(-1===o)throw new Error(`invalid input '${t}'`);r.push(n),s.push(o)}));let o=[],a=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);o.push(n),a.push(r)}));let i=r.map(((e,t)=>ic(e,(()=>`input "${this.inputNames[s[t]]}"`)))),l=o.map(((e,t)=>e?ic(e,(()=>`output "${this.outputNames[a[t]]}"`)):null)),d=await oc(this.sessionId,s,i,a,l,n),u={};for(let e=0;e<d.length;e++)u[this.outputNames[a[e]]]=o[e]??lc(d[e]);return I(),u}startProfiling(){}endProfiling(){ac(this.sessionId)}}})),hc={};j(hc,{OnnxruntimeWebAssemblyBackend:()=>_c,initializeFlags:()=>fc,wasmBackend:()=>gc});var fc,_c,gc,wc=R((()=>{le(),pc(),mc(),fc=()=>{("number"!=typeof p.wasm.initTimeout||p.wasm.initTimeout<0)&&(p.wasm.initTimeout=0);let e=p.wasm.simd;if("boolean"!=typeof e&&void 0!==e&&"fixed"!==e&&"relaxed"!==e&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),p.wasm.simd=!1),"boolean"!=typeof p.wasm.proxy&&(p.wasm.proxy=!1),"boolean"!=typeof p.wasm.trace&&(p.wasm.trace=!1),"number"!=typeof p.wasm.numThreads||!Number.isInteger(p.wasm.numThreads)||p.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)p.wasm.numThreads=1;else{let e=typeof navigator>"u"?N("node:os").cpus().length:navigator.hardwareConcurrency;p.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},gc=new(_c=class{async init(e){fc(),await ec(),await tc(e)}async createInferenceSessionHandler(e,t){let n=new dc;return await n.loadModel(e,t),n}})}));le(),le(),le();var bc=ie;{let e=(wc(),V(hc)).wasmBackend;a("webgpu",e,5),a("webnn",e,5),a("cpu",e,10),a("wasm",e,10)}Object.defineProperty(p.versions,"web",{value:"1.22.0-dev.20250409-89f8206ba4",enumerable:!0})},"./src/backends/onnx.js":(e,t,n)=>{var r;n.r(t),n.d(t,{Tensor:()=>i.Tensor,createInferenceSession:()=>_,deviceToExecutionProviders:()=>h,isONNXProxy:()=>b,isONNXTensor:()=>g});var s=n("./src/env.js"),o=n("?2ce3"),a=n("./node_modules/onnxruntime-web/dist/ort.bundle.min.mjs?3a96"),i=n("./node_modules/onnxruntime-common/dist/esm/index.js");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),d=[];let u,c;const p=Symbol.for("onnxruntime");if(p in globalThis)c=globalThis[p];else if(s.apis.IS_NODE_ENV){switch(c=o??(r||(r=n.t(o,2))),process.platform){case"win32":d.push("dml");break;case"linux":"x64"===process.arch&&d.push("cuda")}d.push("cpu"),u=["cpu"]}else c=a,s.apis.IS_WEBNN_AVAILABLE&&d.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),s.apis.IS_WEBGPU_AVAILABLE&&d.push("webgpu"),d.push("wasm"),u=["wasm"];const m=c.InferenceSession;function h(e=null){if(!e)return u;switch(e){case"auto":return d;case"gpu":return d.filter((e=>["webgpu","cuda","dml","webnn-gpu"].includes(e)))}if(d.includes(e))return[l[e]??e];throw new Error(`Unsupported device: "${e}". Should be one of: ${d.join(", ")}.`)}let f=null;async function _(e,t,n){f&&await f;const r=m.create(e,t);f??=r;const s=await r;return s.config=n,s}function g(e){return e instanceof c.Tensor}const w=c?.env;function b(){return w?.wasm?.proxy}w?.wasm&&("undefined"!=typeof ServiceWorkerGlobalScope&&self instanceof ServiceWorkerGlobalScope||w.wasm.wasmPaths||(w.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${s.env.version}/dist/`),w.wasm.proxy=!1),w?.webgpu&&(w.webgpu.powerPreference="high-performance"),s.env.backends.onnx=w},"./src/base/feature_extraction_utils.js":(e,t,n)=>{n.r(t),n.d(t,{FeatureExtractor:()=>a,validate_audio_inputs:()=>i});var r=n("./src/utils/constants.js"),s=n("./src/utils/generic.js"),o=n("./src/utils/hub.js");class a extends s.Callable{constructor(e){super(),this.config=e}static async from_pretrained(e,t={}){return new this(await(0,o.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t))}}function i(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}},"./src/base/image_processors_utils.js":(e,t,n)=>{n.r(t),n.d(t,{ImageProcessor:()=>b,center_to_corners_format:()=>c,post_process_instance_segmentation:()=>w,post_process_object_detection:()=>p,post_process_panoptic_segmentation:()=>g,post_process_semantic_segmentation:()=>m});var r=n("./src/utils/generic.js"),s=n("./src/utils/tensor.js"),o=n("./src/utils/maths.js"),a=(n("./src/utils/image.js"),n("./src/utils/core.js")),i=n("./src/utils/hub.js"),l=n("./src/utils/constants.js");function d(e,t,n=0,r=null){const s=e/t;let a=(0,o.bankers_round)(s)*t;return null!==r&&a>r&&(a=Math.floor(s)*t),a<n&&(a=Math.ceil(s)*t),a}function u([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}function c([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function p(e,t=.5,n=null,r=!1){const s=e.logits,a=e.pred_boxes,[i,l,d]=s.dims;if(null!==n&&n.length!==i)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let e=0;e<i;++e){let i=null!==n?n[e]:null,p={boxes:[],classes:[],scores:[]},m=s[e],h=a[e];for(let e=0;e<l;++e){let n,s=m[e],a=[];if(r){n=s.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&a.push(e)}else{let e=(0,o.max)(s.data)[1];if(e===d-1)continue;if(n=(0,o.softmax)(s.data),n[e]<t)continue;a.push(e)}for(const t of a){let r=h[e].data;r=c(r),null!==i&&(r=r.map(((e,t)=>e*i[(t+1)%2]))),p.boxes.push(r),p.classes.push(t),p.scores.push(n[t])}}u.push(p)}return u}function m(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const o=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let a=n[e];null!==r&&(a=(0,s.interpolate)(a,r,"bilinear",!1));const[i,l]=r??a.dims.slice(-2),d=new s.Tensor("int32",new Int32Array(i*l),[i,l]),u=a[0].data,c=d.data;for(let e=1;e<a.dims[0];++e){const t=a[e].data;for(let n=0;n<t.length;++n)t[n]>u[n]&&(u[n]=t[n],c[n]=e)}const p=new Array(a.dims[0]);for(let e=0;e<c.length;++e){const t=c[e];p[t]=t}const m=p.filter((e=>void 0!==e));o.push({segmentation:d,labels:m})}return o}function h(e,t,n,r){const s=[],a=[],i=[];for(let l=0;l<e.dims[0];++l){const d=e[l],u=t[l],c=(0,o.max)(d.data)[1];if(c===r)continue;const p=(0,o.softmax)(d.data)[c];p>n&&(s.push(u),a.push(p),i.push(c))}return[s,a,i]}function f(e,t,n,r=.5,s=.8){const o=[];let a=0,i=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(o.push(t),++a),l[t]>=r&&++i;let d=a>0&&i>0;if(d){d=a/i>s}return[d,o]}function _(e,t,n,r,o,a=null,i=null){const[l,d]=i??e[0].dims,u=new s.Tensor("int32",new Int32Array(l*d),[l,d]),c=[];if(null!==i)for(let t=0;t<e.length;++t)e[t]=(0,s.interpolate)(e[t],i,"bilinear",!1);const p=new Int32Array(e[0].data.length),m=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];const s=e[n].data;for(let e=0;e<s.length;++e)s[e]*=r,s[e]>m[e]&&(p[e]=n,m[e]=s[e])}let h=0;const _=u.data;for(let s=0;s<n.length;++s){const a=n[s],[i,l]=f(p,e,s,r,o);if(i){++h;for(const e of l)_[e]=h;c.push({id:h,label_id:a,score:t[s]})}}return[u,c]}function g(e,t=.5,n=.5,r=.8,o=null,a=null){null===o&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),o=new Set);const i=e.class_queries_logits??e.logits,l=(e.masks_queries_logits??e.pred_masks).sigmoid();let[d,u,c]=i.dims;if(c-=1,null!==a&&a.length!==d)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let p=[];for(let e=0;e<d;++e){let d=null!==a?a[e]:null,u=i[e],m=l[e],[f,g,w]=h(u,m,t,c);if(0===w.length){let[e,t]=d??m.dims.slice(-2),n=new s.Tensor("int32",new Int32Array(e*t).fill(-1),[e,t]);p.push({segmentation:n,segments_info:[]});continue}let[b,y]=_(f,g,w,n,r,o,d);p.push({segmentation:b,segments_info:y})}return p}function w(e,t=.5,n=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class b extends r.Callable{constructor(e){super(),this.image_mean=e.image_mean??e.mean,this.image_std=e.image_std??e.std,this.resample=e.resample??2,this.do_rescale=e.do_rescale??!0,this.rescale_factor=e.rescale_factor??1/255,this.do_normalize=e.do_normalize,this.do_thumbnail=e.do_thumbnail,this.size=e.size??e.image_size,this.do_resize=e.do_resize??void 0!==this.size,this.size_divisibility=e.size_divisibility??e.size_divisor,this.do_center_crop=e.do_center_crop,this.crop_size=e.crop_size,this.do_convert_rgb=e.do_convert_rgb??!0,this.do_crop_margin=e.do_crop_margin,this.pad_size=e.pad_size,this.do_pad=e.do_pad,this.min_pixels=e.min_pixels,this.max_pixels=e.max_pixels,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=e.do_flip_channel_order??!1,this.config=e}async thumbnail(e,t,n=2){const r=e.height,s=e.width,o=t.height,a=t.width;let i=Math.min(r,o),l=Math.min(s,a);return i===r&&l===s?e:(r>s?l=Math.floor(s*i/r):s>r&&(i=Math.floor(r*l/s)),await e.resize(l,i,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=(0,o.min)(n.data)[0],s=(0,o.max)(n.data)[0]-r;if(0===s)return e;const a=t/255;let i=n.width,l=n.height,d=0,u=0;const c=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let o=0;o<n.width;++o)(c[t+o]-r)/s<a&&(i=Math.min(i,o),l=Math.min(l,e),d=Math.max(d,o),u=Math.max(u,e))}return e=await e.crop([i,l,d,u])}pad_image(e,t,n,{mode:r="constant",center:s=!1,constant_values:o=0}={}){const[i,l,d]=t;let u,c;if("number"==typeof n?(u=n,c=n):"square"===n?u=c=Math.max(i,l):(u=n.width,c=n.height),u!==l||c!==i){const n=new Float32Array(u*c*d);if(Array.isArray(o))for(let e=0;e<n.length;++e)n[e]=o[e%d];else 0!==o&&n.fill(o);const[p,m]=s?[Math.floor((u-l)/2),Math.floor((c-i)/2)]:[0,0];for(let t=0;t<i;++t){const r=(t+m)*u,s=t*l;for(let t=0;t<l;++t){const o=(r+t+p)*d,a=(s+t)*d;for(let t=0;t<d;++t)n[o+t]=e[a+t]}}if("symmetric"===r){if(s)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=i-1,r=l-1;for(let s=0;s<c;++s){const o=s*u,c=(0,a.calculateReflectOffset)(s,t)*l;for(let t=0;t<u;++t){if(s<i&&t<l)continue;const u=(o+t)*d,p=(c+(0,a.calculateReflectOffset)(t,r))*d;for(let t=0;t<d;++t)n[u+t]=e[p+t]}}}e=n,t=[c,u,d]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let s,o;if(this.do_thumbnail){const{height:e,width:n}=t;s=Math.min(e,n)}else Number.isInteger(t)?(s=t,o=this.config.max_size??s):void 0!==t&&(s=t.shortest_edge,o=t.longest_edge);if(void 0!==s||void 0!==o){const e=void 0===s?1:Math.max(s/n,s/r),t=n*e,a=r*e,i=void 0===o?1:Math.min(o/t,o/a);let l=Math.floor(Number((t*i).toFixed(2))),d=Math.floor(Number((a*i).toFixed(2)));return void 0!==this.size_divisibility&&([l,d]=u([l,d],this.size_divisibility)),[l,d]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,s=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=s/r,o=e/n;Math.abs(1-o)<Math.abs(1-t)?t=o:o=t,s=d(t*r,this.config.ensure_multiple_of),e=d(o*n,this.config.ensure_multiple_of)}return[e,s]}if(void 0!==this.size_divisibility)return u([n,r],this.size_divisibility);if(void 0!==this.min_pixels&&void 0!==this.max_pixels){return function(e,t,n=28,r=3136,s=1003520){if(e<n||t<n)throw new Error(`height:${e} or width:${t} must be larger than factor:${n}`);if(Math.max(e,t)/Math.min(e,t)>200)throw new Error("absolute aspect ratio must be smaller than 200, got "+Math.max(e,t)/Math.min(e,t));let o=Math.round(e/n)*n,a=Math.round(t/n)*n;if(o*a>s){const r=Math.sqrt(e*t/s);o=Math.floor(e/r/n)*n,a=Math.floor(t/r/n)*n}else if(o*a<r){const s=Math.sqrt(r/(e*t));o=Math.ceil(e*s/n)*n,a=Math.ceil(t*s/n)*n}return[o,a]}(r,n,this.config.patch_size*this.config.merge_size,this.min_pixels,this.max_pixels)}throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:o=null,do_flip_channel_order:a=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[i,l]=e.size;if(r??this.do_convert_rgb?e=e.rgb():o&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const d=[e.height,e.width];let c=Float32Array.from(e.data),p=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(c),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<c.length;r+=e.channels)for(let s=0;s<e.channels;++s)c[r+s]=(c[r+s]-t[s])/n[s]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(c,[e.height,e.width,e.channels],this.pad_size);[c,p]=t}else if(this.size_divisibility){const[e,t]=u([p[1],p[0]],this.size_divisibility);[c,p]=this.pad_image(c,p,{width:e,height:t})}if(a??this.do_flip_channel_order){if(3!==p[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<c.length;e+=3){const t=c[e];c[e]=c[e+2],c[e+2]=t}}return{original_size:[l,i],reshaped_input_size:d,pixel_values:new s.Tensor("float32",c,p).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:(0,s.stack)(n.map((e=>e.pixel_values)),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}static async from_pretrained(e,t={}){return new this(await(0,i.getModelJSON)(e,l.IMAGE_PROCESSOR_NAME,!0,t))}}},"./src/base/processing_utils.js":(e,t,n)=>{n.r(t),n.d(t,{Processor:()=>a});var r=n("./src/utils/constants.js"),s=n("./src/utils/generic.js"),o=n("./src/utils/hub.js");class a extends s.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(e,t,n){super(),this.config=e,this.components=t,this.chat_template=n}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(e,t={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(e,{tokenize:!1,chat_template:this.chat_template??void 0,...t})}batch_decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...e)}decode(...e){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...e)}async _call(e,...t){for(const n of[this.image_processor,this.feature_extractor,this.tokenizer])if(n)return n(e,...t);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(e,t={}){const[n,s,a]=await Promise.all([this.uses_processor_config?(0,o.getModelJSON)(e,r.PROCESSOR_NAME,!0,t):{},Promise.all(this.classes.filter((e=>e in this)).map((async n=>{const r=await this[n].from_pretrained(e,t);return[n.replace(/_class$/,""),r]}))).then(Object.fromEntries),this.uses_chat_template_file?(0,o.getModelText)(e,r.CHAT_TEMPLATE_NAME,!0,t):null]);return new this(n,s,a)}}},"./src/configs.js":(e,t,n)=>{n.r(t),n.d(t,{AutoConfig:()=>l,PretrainedConfig:()=>i,getCacheShapes:()=>a});var r=n("./src/utils/core.js"),s=n("./src/utils/hub.js");function o(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":n=o(e.text_config);break;case"moondream1":n=o(e.phi_config);break;case"musicgen":n=o(e.decoder);break;case"multi_modality":n=o(e.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads",t.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"exaone":t.num_heads="num_key_value_heads",t.num_layers="num_layers",t.dim_kv="head_dim",t.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"moonshine":t.num_decoder_layers="decoder_num_hidden_layers",t.num_decoder_heads="decoder_num_key_value_heads",t.num_encoder_layers="encoder_num_hidden_layers",t.num_encoder_heads="encoder_num_key_value_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const s=o(e.decoder),a="num_decoder_layers"in s,i=(0,r.pick)(e,["model_type","is_encoder_decoder"]);return a?(i.num_decoder_layers=s.num_decoder_layers,i.num_decoder_heads=s.num_decoder_heads,i.decoder_hidden_size=s.decoder_hidden_size,i.num_encoder_layers=s.num_encoder_layers,i.num_encoder_heads=s.num_encoder_heads,i.encoder_hidden_size=s.encoder_hidden_size):(i.num_layers=s.num_layers,i.num_heads=s.num_heads,i.hidden_size=s.hidden_size),i}const s={...n,...(0,r.pick)(e,["model_type","multi_query","is_encoder_decoder"])};for(const n in t)s[n]=e[t[n]];return s}function a(e,t){if("lfm2"===e.model_type){const n=t?.prefix??"past_key_values",r="present"===n?"present":"past",s={},{layer_types:o,num_attention_heads:a,num_key_value_heads:i,hidden_size:l,conv_L_cache:d}=e,u=l/a,c=t?.batch_size??1;for(let e=0;e<o.length;++e)if("full_attention"===o[e])for(const t of["key","value"])s[`${n}.${e}.${t}`]=[c,i,0,u];else{if("conv"!==o[e])throw new Error(`Unsupported layer type: ${o[e]}`);s[`${r}_conv.${e}`]=[c,l,d]}return s}return function(e,{prefix:t="past_key_values",batch_size:n=1}={}){const r={},s=e.normalized_config;if(s.is_encoder_decoder&&"num_encoder_heads"in s&&"num_decoder_heads"in s){const e=s.encoder_dim_kv??s.encoder_hidden_size/s.num_encoder_heads,o=s.decoder_dim_kv??s.decoder_hidden_size/s.num_decoder_heads,a=[n,s.num_encoder_heads,0,e],i=[n,s.num_decoder_heads,0,o];for(let e=0;e<s.num_decoder_layers;++e)r[`${t}.${e}.encoder.key`]=a,r[`${t}.${e}.encoder.value`]=a,r[`${t}.${e}.decoder.key`]=i,r[`${t}.${e}.decoder.value`]=i}else{const e=s.num_heads,o=s.num_layers,a=s.dim_kv??s.hidden_size/(s.num_attention_heads??e);if("falcon"===s.model_type){const s=[n*e,0,a];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}else if(s.multi_query){const s=[n*e,0,2*a];for(let e=0;e<o;++e)r[`${t}.${e}.key_value`]=s}else if("bloom"===s.model_type){const s=[n*e,a,0],i=[n*e,0,a];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=i}else if("openelm"===s.model_type)for(let s=0;s<o;++s){const o=[n,e[s],0,a];r[`${t}.${s}.key`]=o,r[`${t}.${s}.value`]=o}else{const s=[n,e,0,a];for(let e=0;e<o;++e)r[`${t}.${e}.key`]=s,r[`${t}.${e}.value`]=s}}return r}(e,t)}class i{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(e){Object.assign(this,e),this.normalized_config=o(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:o=!1,revision:a="main"}={}){!n||n instanceof i||(n=new i(n));const l=n??await async function(e,t){return await(0,s.getModelJSON)(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:o,revision:a});return new this(l)}}class l{static async from_pretrained(...e){return i.from_pretrained(...e)}}},"./src/env.js":(e,t,n)=>{n.r(t),n.d(t,{apis:()=>_,env:()=>M});var r=n("?db59"),s=n("?383f"),o=n("?fa4b");const a="undefined"!=typeof window&&void 0!==window.document,i="undefined"!=typeof self&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),l="undefined"!=typeof self&&"caches"in self,d="undefined"!=typeof navigator&&"gpu"in navigator,u="undefined"!=typeof navigator&&"ml"in navigator,c="undefined"!=typeof process,p=c&&"node"===process?.release?.name,m=!x(r),h=!x(s),f=void 0!==globalThis.Deno,_=(globalThis.Bun,Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:i,IS_WEB_CACHE_AVAILABLE:l,IS_WEBGPU_AVAILABLE:d,IS_WEBNN_AVAILABLE:u,IS_PROCESS_AVAILABLE:c,IS_NODE_ENV:p,IS_FS_AVAILABLE:m,IS_PATH_AVAILABLE:h})),g=m&&h;let w="./";if(g){const e=Object(import.meta).url;e?w=s.dirname(s.dirname(o.fileURLToPath(e))):"undefined"!=typeof __dirname&&(w=s.dirname(__dirname))}const b=g?s.join(w,"/.cache/"):null,y="/models/",M={version:"3.7.2",backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||i),localModelPath:g?s.join(w,y):y,useFS:m,useBrowserCache:l&&!f,useFSCache:m,cacheDir:b,useCustomCache:!1,customCache:null};function x(e){return 0===Object.keys(e).length}},"./src/generation/configuration_utils.js":(e,t,n)=>{n.r(t),n.d(t,{GenerationConfig:()=>s});var r=n("./src/utils/core.js");class s{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,(0,r.pick)(e,Object.getOwnPropertyNames(this)))}}},"./src/generation/logits_process.js":(e,t,n)=>{n.r(t),n.d(t,{ClassifierFreeGuidanceLogitsProcessor:()=>g,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>d,LogitsProcessor:()=>o,LogitsProcessorList:()=>i,LogitsWarper:()=>a,MinLengthLogitsProcessor:()=>h,MinNewTokensLengthLogitsProcessor:()=>f,NoBadWordsLogitsProcessor:()=>_,NoRepeatNGramLogitsProcessor:()=>p,RepetitionPenaltyLogitsProcessor:()=>m,SuppressTokensAtBeginLogitsProcessor:()=>u,TemperatureLogitsWarper:()=>w,TopKLogitsWarper:()=>y,TopPLogitsWarper:()=>b,WhisperTimeStampLogitsProcessor:()=>c});var r=n("./src/utils/generic.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/maths.js"));class o extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class a extends r.Callable{_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class i extends r.Callable{constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class l extends o{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n].data;e.fill(-1/0),e[this.bos_token_id]=0}return t}}class d extends o{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n].data;e.fill(-1/0);for(const t of this.eos_token_id)e[t]=0}return t}}class u extends o{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n].data;for(const t of this.begin_suppress_tokens)e[t]=-1/0}return t}}class c extends o{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const o=e[n].slice(this.begin_index),a=o.length>=1&&o[o.length-1]>=this.timestamp_begin,i=o.length<2||o[o.length-2]>=this.timestamp_begin;if(a&&(i?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const l=(0,s.log_softmax)(r);Math.log(l.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>(0,s.max)(l.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class p extends o{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),s=r.get(n)??[];s.push(e[e.length-1]),r.set(n,s)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){const t=[];if(e.length+1<this.no_repeat_ngram_size)return t;{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=this.calcBannedNgramTokens(e[n]);for(const e of s)r[e]=-1/0}return t}}class m extends o{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;for(const t of new Set(e[n])){const e=Number(t);r[e]<0?r[e]*=this.penalty:r[e]/=this.penalty}}return t}}class h extends o{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}return t}}class f extends o{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n){if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n].data;for(const t of this.eos_token_id)e[t]=-1/0}}return t}}class _ extends o{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data,s=e[n];for(const e of this.bad_words_ids){if(s.length<e.length-1)continue;let t=!0;for(let n=1;n<=e.length-1;++n)if(e.at(-n-1)!=s.at(-n)){t=!1;break}t&&(r[e.at(-1)]=-1/0)}}return t}}class g extends o{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),s=t.slice([n,t.dims[0]],null);for(let e=0;e<s.data.length;++e)s.data[e]+=(r.data[e]-s.data[e])*this.guidance_scale;return s}}class w extends a{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class b extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class y extends a{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}},"./src/generation/logits_sampler.js":(e,t,n)=>{n.r(t),n.d(t,{LogitsSampler:()=>a});var r=n("./src/utils/generic.js"),s=n("./src/utils/tensor.js"),o=n("./src/utils/maths.js");n("./src/generation/configuration_utils.js");class a extends r.Callable{constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new l(e);if(e.num_beams>1)return new d(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new i(e)}}class i extends a{async sample(e){const t=(0,o.max)(e.data)[1];return[[BigInt(t),0]]}}class l extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,o.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]}))}}class d extends a{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await(0,s.topk)(e,t),a=(0,o.softmax)(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(a[t])]))}}},"./src/generation/stopping_criteria.js":(e,t,n)=>{n.r(t),n.d(t,{EosTokenCriteria:()=>i,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>a,StoppingCriteria:()=>s,StoppingCriteriaList:()=>o});var r=n("./src/utils/generic.js");class s extends r.Callable{_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class o extends r.Callable{constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof o?e=e.criteria:e instanceof s&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const s=r(e,t);for(let e=0;e<n.length;++e)n[e]||=s[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class a extends s{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class i extends s{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class l extends s{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(e,t){return new Array(e.length).fill(this.interrupted)}}},"./src/generation/streamers.js":(e,t,n)=>{n.r(t),n.d(t,{BaseStreamer:()=>a,TextStreamer:()=>l,WhisperTextStreamer:()=>d});var r=n("./src/utils/core.js"),s=n("./src/tokenizers.js"),o=n("./src/env.js");class a{put(e){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const i=o.apis.IS_PROCESS_AVAILABLE?e=>process.stdout.write(e):e=>console.log(e);class l extends a{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,skip_special_tokens:s=!0,decode_kwargs:o={},...a}={}){super(),this.tokenizer=e,this.skip_prompt=t,this.callback_function=n??i,this.token_callback_function=r,this.decode_kwargs={skip_special_tokens:s,...o,...a},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(e){if(e.length>1)throw Error("TextStreamer only supports batch size of 1");const t=this.next_tokens_are_prompt;if(t&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const n=e[0];this.token_callback_function?.(n),this.token_cache=(0,r.mergeArrays)(this.token_cache,n);const o=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let a;t||o.endsWith("\n")?(a=o.slice(this.print_len),this.token_cache=[],this.print_len=0):o.length>0&&(0,s.is_chinese_char)(o.charCodeAt(o.length-1))?(a=o.slice(this.print_len),this.print_len+=a.length):(a=o.slice(this.print_len,o.lastIndexOf(" ")+1),this.print_len+=a.length),this.on_finalized_text(a,!1)}end(){let e;if(this.token_cache.length>0){e=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0}else e="";this.next_tokens_are_prompt=!0,this.on_finalized_text(e,!0)}on_finalized_text(e,t){e.length>0&&this.callback_function?.(e),t&&this.callback_function===i&&o.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.("\n")}}class d extends l{constructor(e,{skip_prompt:t=!1,callback_function:n=null,token_callback_function:r=null,on_chunk_start:s=null,on_chunk_end:o=null,on_finalize:a=null,time_precision:i=.02,skip_special_tokens:l=!0,decode_kwargs:d={}}={}){super(e,{skip_prompt:t,skip_special_tokens:l,callback_function:n,token_callback_function:r,decode_kwargs:d}),this.timestamp_begin=e.timestamp_begin,this.on_chunk_start=s,this.on_chunk_end=o,this.on_finalize=a,this.time_precision=i,this.waiting_for_timestamp=!1}put(e){if(e.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const t=e[0];if(1===t.length){const e=Number(t[0])-this.timestamp_begin;if(e>=0){const n=e*this.time_precision;return this.waiting_for_timestamp?this.on_chunk_end?.(n):this.on_chunk_start?.(n),this.waiting_for_timestamp=!this.waiting_for_timestamp,void this.token_callback_function?.(t)}}return super.put(e)}end(){super.end(),this.on_finalize?.()}}},"./src/models.js":(e,t,n)=>{n.r(t),n.d(t,{ASTForAudioClassification:()=>zn,ASTModel:()=>An,ASTPreTrainedModel:()=>In,AlbertForMaskedLM:()=>Vt,AlbertForQuestionAnswering:()=>jt,AlbertForSequenceClassification:()=>Rt,AlbertModel:()=>Nt,AlbertPreTrainedModel:()=>Bt,ArceeForCausalLM:()=>Xr,ArceeModel:()=>Kr,ArceePreTrainedModel:()=>Qr,AutoModel:()=>zu,AutoModelForAudioClassification:()=>Zu,AutoModelForAudioFrameClassification:()=>tc,AutoModelForAudioTextToText:()=>uc,AutoModelForCTC:()=>Yu,AutoModelForCausalLM:()=>ju,AutoModelForDepthEstimation:()=>oc,AutoModelForDocumentQuestionAnswering:()=>nc,AutoModelForImageClassification:()=>Uu,AutoModelForImageFeatureExtraction:()=>lc,AutoModelForImageMatting:()=>rc,AutoModelForImageSegmentation:()=>Wu,AutoModelForImageTextToText:()=>dc,AutoModelForImageToImage:()=>sc,AutoModelForMaskGeneration:()=>Ju,AutoModelForMaskedLM:()=>Vu,AutoModelForNormalEstimation:()=>ac,AutoModelForObjectDetection:()=>Ku,AutoModelForPoseEstimation:()=>ic,AutoModelForQuestionAnswering:()=>Gu,AutoModelForSemanticSegmentation:()=>Hu,AutoModelForSeq2SeqLM:()=>Du,AutoModelForSequenceClassification:()=>Lu,AutoModelForSpeechSeq2Seq:()=>Bu,AutoModelForTextToSpectrogram:()=>Nu,AutoModelForTextToWaveform:()=>Ru,AutoModelForTokenClassification:()=>Ou,AutoModelForUniversalSegmentation:()=>Qu,AutoModelForVision2Seq:()=>qu,AutoModelForXVector:()=>ec,AutoModelForZeroShotObjectDetection:()=>Xu,BartForConditionalGeneration:()=>en,BartForSequenceClassification:()=>tn,BartModel:()=>Zt,BartPretrainedModel:()=>Yt,BaseModelOutput:()=>ae,BeitForImageClassification:()=>Wo,BeitModel:()=>Uo,BeitPreTrainedModel:()=>qo,BertForMaskedLM:()=>de,BertForQuestionAnswering:()=>pe,BertForSequenceClassification:()=>ue,BertForTokenClassification:()=>ce,BertModel:()=>le,BertPreTrainedModel:()=>ie,BlenderbotForConditionalGeneration:()=>un,BlenderbotModel:()=>dn,BlenderbotPreTrainedModel:()=>ln,BlenderbotSmallForConditionalGeneration:()=>mn,BlenderbotSmallModel:()=>pn,BlenderbotSmallPreTrainedModel:()=>cn,BloomForCausalLM:()=>to,BloomModel:()=>eo,BloomPreTrainedModel:()=>Zs,CLIPModel:()=>ar,CLIPPreTrainedModel:()=>or,CLIPSegForImageSegmentation:()=>vr,CLIPSegModel:()=>xr,CLIPSegPreTrainedModel:()=>Mr,CLIPTextModel:()=>ir,CLIPTextModelWithProjection:()=>lr,CLIPVisionModel:()=>dr,CLIPVisionModelWithProjection:()=>ur,CamembertForMaskedLM:()=>Ke,CamembertForQuestionAnswering:()=>Ye,CamembertForSequenceClassification:()=>Xe,CamembertForTokenClassification:()=>Je,CamembertModel:()=>Qe,CamembertPreTrainedModel:()=>He,CausalLMOutput:()=>gc,CausalLMOutputWithPast:()=>wc,ChineseCLIPModel:()=>_r,ChineseCLIPPreTrainedModel:()=>fr,ClapAudioModelWithProjection:()=>Dl,ClapModel:()=>Ll,ClapPreTrainedModel:()=>zl,ClapTextModelWithProjection:()=>Ol,CodeGenForCausalLM:()=>qr,CodeGenModel:()=>Gr,CodeGenPreTrainedModel:()=>Vr,CohereForCausalLM:()=>Ps,CohereModel:()=>ks,CoherePreTrainedModel:()=>Ts,ConvBertForMaskedLM:()=>De,ConvBertForQuestionAnswering:()=>Re,ConvBertForSequenceClassification:()=>Be,ConvBertForTokenClassification:()=>Ne,ConvBertModel:()=>Oe,ConvBertPreTrainedModel:()=>Le,ConvNextForImageClassification:()=>oi,ConvNextModel:()=>si,ConvNextPreTrainedModel:()=>ri,ConvNextV2ForImageClassification:()=>li,ConvNextV2Model:()=>ii,ConvNextV2PreTrainedModel:()=>ai,DFineForObjectDetection:()=>ma,DFineModel:()=>pa,DFinePreTrainedModel:()=>ca,DINOv3ConvNextModel:()=>wi,DINOv3ConvNextPreTrainedModel:()=>gi,DINOv3ViTModel:()=>_i,DINOv3ViTPreTrainedModel:()=>fi,DPTForDepthEstimation:()=>Oa,DPTModel:()=>La,DPTPreTrainedModel:()=>za,DacDecoderModel:()=>Gd,DacDecoderOutput:()=>Rd,DacEncoderModel:()=>Vd,DacEncoderOutput:()=>Nd,DacModel:()=>jd,DacPreTrainedModel:()=>Bd,DebertaForMaskedLM:()=>tt,DebertaForQuestionAnswering:()=>st,DebertaForSequenceClassification:()=>nt,DebertaForTokenClassification:()=>rt,DebertaModel:()=>et,DebertaPreTrainedModel:()=>Ze,DebertaV2ForMaskedLM:()=>it,DebertaV2ForQuestionAnswering:()=>ut,DebertaV2ForSequenceClassification:()=>lt,DebertaV2ForTokenClassification:()=>dt,DebertaV2Model:()=>at,DebertaV2PreTrainedModel:()=>ot,DecisionTransformerModel:()=>gd,DecisionTransformerPreTrainedModel:()=>_d,DeiTForImageClassification:()=>ya,DeiTModel:()=>ba,DeiTPreTrainedModel:()=>wa,DepthAnythingForDepthEstimation:()=>Ba,DepthAnythingPreTrainedModel:()=>Da,DepthProForDepthEstimation:()=>qa,DepthProPreTrainedModel:()=>Ga,DetrForObjectDetection:()=>Ko,DetrForSegmentation:()=>Xo,DetrModel:()=>Qo,DetrObjectDetectionOutput:()=>Jo,DetrPreTrainedModel:()=>Ho,DetrSegmentationOutput:()=>Yo,Dinov2ForImageClassification:()=>ci,Dinov2Model:()=>ui,Dinov2PreTrainedModel:()=>di,Dinov2WithRegistersForImageClassification:()=>hi,Dinov2WithRegistersModel:()=>mi,Dinov2WithRegistersPreTrainedModel:()=>pi,DistilBertForMaskedLM:()=>_t,DistilBertForQuestionAnswering:()=>ft,DistilBertForSequenceClassification:()=>mt,DistilBertForTokenClassification:()=>ht,DistilBertModel:()=>pt,DistilBertPreTrainedModel:()=>ct,DonutSwinModel:()=>ni,DonutSwinPreTrainedModel:()=>ti,EfficientNetForImageClassification:()=>Kl,EfficientNetModel:()=>Ql,EfficientNetPreTrainedModel:()=>Hl,ElectraForMaskedLM:()=>Ge,ElectraForQuestionAnswering:()=>We,ElectraForSequenceClassification:()=>qe,ElectraForTokenClassification:()=>Ue,ElectraModel:()=>Ve,ElectraPreTrainedModel:()=>je,Ernie4_5_ForCausalLM:()=>$l,Ernie4_5_Model:()=>Pl,Ernie4_5_PretrainedModel:()=>kl,EsmForMaskedLM:()=>bt,EsmForSequenceClassification:()=>yt,EsmForTokenClassification:()=>Mt,EsmModel:()=>wt,EsmPreTrainedModel:()=>gt,ExaoneForCausalLM:()=>cs,ExaoneModel:()=>us,ExaonePreTrainedModel:()=>ds,FalconForCausalLM:()=>Al,FalconModel:()=>Il,FalconPreTrainedModel:()=>El,FastViTForImageClassification:()=>So,FastViTModel:()=>Co,FastViTPreTrainedModel:()=>$o,Florence2ForConditionalGeneration:()=>Qn,Florence2PreTrainedModel:()=>Hn,GLPNForDepthEstimation:()=>ei,GLPNModel:()=>Za,GLPNPreTrainedModel:()=>Ya,GPT2LMHeadModel:()=>Pr,GPT2Model:()=>kr,GPT2PreTrainedModel:()=>Tr,GPTBigCodeForCausalLM:()=>jr,GPTBigCodeModel:()=>Rr,GPTBigCodePreTrainedModel:()=>Nr,GPTJForCausalLM:()=>Br,GPTJModel:()=>Dr,GPTJPreTrainedModel:()=>Or,GPTNeoForCausalLM:()=>Ir,GPTNeoModel:()=>Er,GPTNeoPreTrainedModel:()=>Fr,GPTNeoXForCausalLM:()=>Lr,GPTNeoXModel:()=>zr,GPTNeoXPreTrainedModel:()=>Ar,Gemma2ForCausalLM:()=>Is,Gemma2Model:()=>Es,Gemma2PreTrainedModel:()=>Fs,Gemma3ForCausalLM:()=>Ls,Gemma3Model:()=>zs,Gemma3PreTrainedModel:()=>As,Gemma3nForConditionalGeneration:()=>Zn,Gemma3nPreTrainedModel:()=>Yn,GemmaForCausalLM:()=>Ss,GemmaModel:()=>Cs,GemmaPreTrainedModel:()=>$s,GlmForCausalLM:()=>ls,GlmModel:()=>is,GlmPreTrainedModel:()=>as,GraniteForCausalLM:()=>vs,GraniteModel:()=>xs,GranitePreTrainedModel:()=>Ms,GroundingDinoForObjectDetection:()=>yi,GroundingDinoPreTrainedModel:()=>bi,GroupViTModel:()=>Po,GroupViTPreTrainedModel:()=>ko,HeliumForCausalLM:()=>os,HeliumModel:()=>ss,HeliumPreTrainedModel:()=>rs,HieraForImageClassification:()=>va,HieraModel:()=>xa,HieraPreTrainedModel:()=>Ma,HubertForCTC:()=>ol,HubertForSequenceClassification:()=>al,HubertModel:()=>sl,HubertPreTrainedModel:()=>rl,IJepaForImageClassification:()=>ho,IJepaModel:()=>mo,IJepaPreTrainedModel:()=>po,Idefics3ForConditionalGeneration:()=>tr,Idefics3PreTrainedModel:()=>er,ImageMattingOutput:()=>bc,JAISLMHeadModel:()=>Sr,JAISModel:()=>Cr,JAISPreTrainedModel:()=>$r,JinaCLIPModel:()=>wr,JinaCLIPPreTrainedModel:()=>gr,JinaCLIPTextModel:()=>br,JinaCLIPVisionModel:()=>yr,Lfm2ForCausalLM:()=>Zr,Lfm2Model:()=>Yr,Lfm2PreTrainedModel:()=>Jr,LiteWhisperForConditionalGeneration:()=>Bn,LlamaForCausalLM:()=>Hr,LlamaModel:()=>Wr,LlamaPreTrainedModel:()=>Ur,LlavaForConditionalGeneration:()=>qn,LlavaOnevisionForConditionalGeneration:()=>Un,LlavaPreTrainedModel:()=>Gn,LlavaQwen2ForCausalLM:()=>Jn,LongT5ForConditionalGeneration:()=>Qt,LongT5Model:()=>Ht,LongT5PreTrainedModel:()=>Wt,M2M100ForConditionalGeneration:()=>Ai,M2M100Model:()=>Ii,M2M100PreTrainedModel:()=>Ei,MBartForCausalLM:()=>an,MBartForConditionalGeneration:()=>sn,MBartForSequenceClassification:()=>on,MBartModel:()=>rn,MBartPreTrainedModel:()=>nn,MPNetForMaskedLM:()=>St,MPNetForQuestionAnswering:()=>It,MPNetForSequenceClassification:()=>Ft,MPNetForTokenClassification:()=>Et,MPNetModel:()=>Ct,MPNetPreTrainedModel:()=>$t,MT5ForConditionalGeneration:()=>Jt,MT5Model:()=>Xt,MT5PreTrainedModel:()=>Kt,MarianMTModel:()=>Fi,MarianModel:()=>Si,MarianPreTrainedModel:()=>Ci,MaskFormerForInstanceSegmentation:()=>Ja,MaskFormerModel:()=>Xa,MaskFormerPreTrainedModel:()=>Ka,MaskedLMOutput:()=>fc,Metric3DForDepthEstimation:()=>Wa,Metric3DPreTrainedModel:()=>Ua,Metric3Dv2ForDepthEstimation:()=>Qa,Metric3Dv2PreTrainedModel:()=>Ha,MgpstrForSceneTextRecognition:()=>xd,MgpstrModelOutput:()=>yd,MgpstrPreTrainedModel:()=>Md,MimiDecoderModel:()=>Dd,MimiDecoderOutput:()=>zd,MimiEncoderModel:()=>Od,MimiEncoderOutput:()=>Ad,MimiModel:()=>Ld,MimiPreTrainedModel:()=>Id,MistralForCausalLM:()=>Tl,MistralModel:()=>vl,MistralPreTrainedModel:()=>xl,MobileBertForMaskedLM:()=>Tt,MobileBertForQuestionAnswering:()=>Pt,MobileBertForSequenceClassification:()=>kt,MobileBertModel:()=>vt,MobileBertPreTrainedModel:()=>xt,MobileLLMForCausalLM:()=>hs,MobileLLMModel:()=>ms,MobileLLMPreTrainedModel:()=>ps,MobileNetV1ForImageClassification:()=>nd,MobileNetV1ForSemanticSegmentation:()=>rd,MobileNetV1Model:()=>td,MobileNetV1PreTrainedModel:()=>ed,MobileNetV2ForImageClassification:()=>ad,MobileNetV2ForSemanticSegmentation:()=>id,MobileNetV2Model:()=>od,MobileNetV2PreTrainedModel:()=>sd,MobileNetV3ForImageClassification:()=>ud,MobileNetV3ForSemanticSegmentation:()=>cd,MobileNetV3Model:()=>dd,MobileNetV3PreTrainedModel:()=>ld,MobileNetV4ForImageClassification:()=>hd,MobileNetV4ForSemanticSegmentation:()=>fd,MobileNetV4Model:()=>md,MobileNetV4PreTrainedModel:()=>pd,MobileViTForImageClassification:()=>zo,MobileViTModel:()=>Ao,MobileViTPreTrainedModel:()=>Io,MobileViTV2ForImageClassification:()=>Do,MobileViTV2Model:()=>Oo,MobileViTV2PreTrainedModel:()=>Lo,ModelOutput:()=>oe,ModernBertDecoderForCausalLM:()=>Pe,ModernBertDecoderModel:()=>ke,ModernBertDecoderPreTrainedModel:()=>Te,ModernBertForMaskedLM:()=>Me,ModernBertForSequenceClassification:()=>xe,ModernBertForTokenClassification:()=>ve,ModernBertModel:()=>ye,ModernBertPreTrainedModel:()=>be,Moondream1ForConditionalGeneration:()=>Wn,MoonshineForConditionalGeneration:()=>jn,MoonshineModel:()=>Rn,MoonshinePreTrainedModel:()=>Nn,MptForCausalLM:()=>so,MptModel:()=>ro,MptPreTrainedModel:()=>no,MultiModalityCausalLM:()=>bd,MultiModalityPreTrainedModel:()=>wd,MusicgenForCausalLM:()=>Yl,MusicgenForConditionalGeneration:()=>Zl,MusicgenModel:()=>Jl,MusicgenPreTrainedModel:()=>Xl,NeoBertForMaskedLM:()=>fe,NeoBertForQuestionAnswering:()=>we,NeoBertForSequenceClassification:()=>_e,NeoBertForTokenClassification:()=>ge,NeoBertModel:()=>he,NeoBertPreTrainedModel:()=>me,NomicBertModel:()=>Ce,NomicBertPreTrainedModel:()=>$e,OPTForCausalLM:()=>io,OPTModel:()=>ao,OPTPreTrainedModel:()=>oo,Olmo2ForCausalLM:()=>ys,Olmo2Model:()=>bs,Olmo2PreTrainedModel:()=>ws,OlmoForCausalLM:()=>gs,OlmoModel:()=>_s,OlmoPreTrainedModel:()=>fs,OpenELMForCausalLM:()=>Bs,OpenELMModel:()=>Ds,OpenELMPreTrainedModel:()=>Os,OwlViTForObjectDetection:()=>Ro,OwlViTModel:()=>No,OwlViTPreTrainedModel:()=>Bo,Owlv2ForObjectDetection:()=>Go,Owlv2Model:()=>Vo,Owlv2PreTrainedModel:()=>jo,PaliGemmaForConditionalGeneration:()=>Xn,PaliGemmaPreTrainedModel:()=>Kn,PatchTSMixerForPrediction:()=>Cd,PatchTSMixerModel:()=>$d,PatchTSMixerPreTrainedModel:()=>Pd,PatchTSTForPrediction:()=>kd,PatchTSTModel:()=>Td,PatchTSTPreTrainedModel:()=>vd,Phi3ForCausalLM:()=>Ys,Phi3Model:()=>Js,Phi3PreTrainedModel:()=>Xs,Phi3VForCausalLM:()=>sr,Phi3VPreTrainedModel:()=>rr,PhiForCausalLM:()=>Ks,PhiModel:()=>Qs,PhiPreTrainedModel:()=>Hs,PreTrainedModel:()=>se,PretrainedMixin:()=>Qd,PvtForImageClassification:()=>bo,PvtModel:()=>wo,PvtPreTrainedModel:()=>go,PyAnnoteForAudioFrameClassification:()=>ji,PyAnnoteModel:()=>Ri,PyAnnotePreTrainedModel:()=>Ni,QuestionAnsweringModelOutput:()=>_c,Qwen2ForCausalLM:()=>js,Qwen2Model:()=>Rs,Qwen2PreTrainedModel:()=>Ns,Qwen2VLForConditionalGeneration:()=>Ws,Qwen2VLPreTrainedModel:()=>Us,Qwen3ForCausalLM:()=>qs,Qwen3Model:()=>Gs,Qwen3PreTrainedModel:()=>Vs,RFDetrForObjectDetection:()=>da,RFDetrModel:()=>la,RFDetrObjectDetectionOutput:()=>ua,RFDetrPreTrainedModel:()=>ia,RTDetrForObjectDetection:()=>ta,RTDetrModel:()=>ea,RTDetrObjectDetectionOutput:()=>na,RTDetrPreTrainedModel:()=>Zo,RTDetrV2ForObjectDetection:()=>oa,RTDetrV2Model:()=>sa,RTDetrV2ObjectDetectionOutput:()=>aa,RTDetrV2PreTrainedModel:()=>ra,ResNetForImageClassification:()=>Pa,ResNetModel:()=>ka,ResNetPreTrainedModel:()=>Ta,RoFormerForMaskedLM:()=>Ee,RoFormerForQuestionAnswering:()=>ze,RoFormerForSequenceClassification:()=>Ie,RoFormerForTokenClassification:()=>Ae,RoFormerModel:()=>Fe,RoFormerPreTrainedModel:()=>Se,RobertaForMaskedLM:()=>_n,RobertaForQuestionAnswering:()=>bn,RobertaForSequenceClassification:()=>gn,RobertaForTokenClassification:()=>wn,RobertaModel:()=>fn,RobertaPreTrainedModel:()=>hn,SamImageSegmentationOutput:()=>$i,SamModel:()=>Pi,SamPreTrainedModel:()=>ki,SapiensForDepthEstimation:()=>ja,SapiensForNormalEstimation:()=>Va,SapiensForSemanticSegmentation:()=>Ra,SapiensPreTrainedModel:()=>Na,SegformerForImageClassification:()=>Vl,SegformerForSemanticSegmentation:()=>Gl,SegformerModel:()=>jl,SegformerPreTrainedModel:()=>Rl,Seq2SeqLMOutput:()=>cc,SequenceClassifierOutput:()=>pc,SiglipModel:()=>pr,SiglipPreTrainedModel:()=>cr,SiglipTextModel:()=>mr,SiglipVisionModel:()=>hr,SmolLM3ForCausalLM:()=>ns,SmolLM3Model:()=>ts,SmolLM3PreTrainedModel:()=>es,SmolVLMForConditionalGeneration:()=>nr,SnacDecoderModel:()=>Hd,SnacEncoderModel:()=>Wd,SnacModel:()=>Ud,SnacPreTrainedModel:()=>qd,SpeechT5ForSpeechToText:()=>gl,SpeechT5ForTextToSpeech:()=>wl,SpeechT5HifiGan:()=>bl,SpeechT5Model:()=>_l,SpeechT5PreTrainedModel:()=>fl,SqueezeBertForMaskedLM:()=>Lt,SqueezeBertForQuestionAnswering:()=>Dt,SqueezeBertForSequenceClassification:()=>Ot,SqueezeBertModel:()=>zt,SqueezeBertPreTrainedModel:()=>At,StableLmForCausalLM:()=>Wl,StableLmModel:()=>Ul,StableLmPreTrainedModel:()=>ql,Starcoder2ForCausalLM:()=>Fl,Starcoder2Model:()=>Sl,Starcoder2PreTrainedModel:()=>Cl,StyleTextToSpeech2Model:()=>hl,StyleTextToSpeech2PreTrainedModel:()=>ml,Swin2SRForImageSuperResolution:()=>Aa,Swin2SRModel:()=>Ia,Swin2SRPreTrainedModel:()=>Ea,SwinForImageClassification:()=>Sa,SwinForSemanticSegmentation:()=>Fa,SwinModel:()=>Ca,SwinPreTrainedModel:()=>$a,T5ForConditionalGeneration:()=>Ut,T5Model:()=>qt,T5PreTrainedModel:()=>Gt,TableTransformerForObjectDetection:()=>_a,TableTransformerModel:()=>fa,TableTransformerObjectDetectionOutput:()=>ga,TableTransformerPreTrainedModel:()=>ha,TokenClassifierOutput:()=>hc,TrOCRForCausalLM:()=>Ml,TrOCRPreTrainedModel:()=>yl,UltravoxModel:()=>Fd,UltravoxPreTrainedModel:()=>Sd,UniSpeechForCTC:()=>Wi,UniSpeechForSequenceClassification:()=>Hi,UniSpeechModel:()=>Ui,UniSpeechPreTrainedModel:()=>qi,UniSpeechSatForAudioFrameClassification:()=>Yi,UniSpeechSatForCTC:()=>Xi,UniSpeechSatForSequenceClassification:()=>Ji,UniSpeechSatModel:()=>Ki,UniSpeechSatPreTrainedModel:()=>Qi,ViTForImageClassification:()=>co,ViTMAEModel:()=>Mo,ViTMAEPreTrainedModel:()=>yo,ViTMSNForImageClassification:()=>To,ViTMSNModel:()=>vo,ViTMSNPreTrainedModel:()=>xo,ViTModel:()=>uo,ViTPreTrainedModel:()=>lo,VisionEncoderDecoderModel:()=>Vn,VitMatteForImageMatting:()=>Eo,VitMattePreTrainedModel:()=>Fo,VitPoseForPoseEstimation:()=>_o,VitPosePreTrainedModel:()=>fo,VitsModel:()=>Nl,VitsModelOutput:()=>yc,VitsPreTrainedModel:()=>Bl,VoxtralForConditionalGeneration:()=>Ed,Wav2Vec2BertForCTC:()=>tl,Wav2Vec2BertForSequenceClassification:()=>nl,Wav2Vec2BertModel:()=>el,Wav2Vec2BertPreTrainedModel:()=>Zi,Wav2Vec2ForAudioFrameClassification:()=>Bi,Wav2Vec2ForCTC:()=>Oi,Wav2Vec2ForSequenceClassification:()=>Di,Wav2Vec2Model:()=>Li,Wav2Vec2PreTrainedModel:()=>zi,WavLMForAudioFrameClassification:()=>pl,WavLMForCTC:()=>dl,WavLMForSequenceClassification:()=>ul,WavLMForXVector:()=>cl,WavLMModel:()=>ll,WavLMPreTrainedModel:()=>il,WeSpeakerResNetModel:()=>Gi,WeSpeakerResNetPreTrainedModel:()=>Vi,WhisperForConditionalGeneration:()=>Dn,WhisperModel:()=>On,WhisperPreTrainedModel:()=>Ln,XLMForQuestionAnswering:()=>kn,XLMForSequenceClassification:()=>vn,XLMForTokenClassification:()=>Tn,XLMModel:()=>Mn,XLMPreTrainedModel:()=>yn,XLMRobertaForMaskedLM:()=>Cn,XLMRobertaForQuestionAnswering:()=>En,XLMRobertaForSequenceClassification:()=>Sn,XLMRobertaForTokenClassification:()=>Fn,XLMRobertaModel:()=>$n,XLMRobertaPreTrainedModel:()=>Pn,XLMWithLMHeadModel:()=>xn,XVectorOutput:()=>mc,YolosForObjectDetection:()=>vi,YolosModel:()=>xi,YolosObjectDetectionOutput:()=>Ti,YolosPreTrainedModel:()=>Mi});var r=n("./src/configs.js"),s=n("./src/backends/onnx.js"),o=n("./src/utils/dtypes.js"),a=n("./src/utils/generic.js"),i=n("./src/utils/core.js"),l=n("./src/utils/hub.js"),d=n("./src/utils/constants.js"),u=n("./src/generation/logits_process.js"),c=n("./src/generation/configuration_utils.js"),p=n("./src/utils/tensor.js"),m=n("./src/utils/image.js"),h=n("./src/utils/maths.js"),f=n("./src/generation/stopping_criteria.js"),_=n("./src/generation/logits_sampler.js"),g=n("./src/env.js"),w=n("./src/models/whisper/generation_whisper.js"),b=n("./src/models/whisper/common_whisper.js");const y=0,M=1,x=2,v=3,T=4,k=5,P=6,$=7,C=8,S=9,F=10,E=11,I=12,A=new Map,z=new Map,L=new Map;async function O(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async a=>{const{buffer_or_path:i,session_options:d,session_config:u}=await async function(e,t,n){let a=n.config?.["transformers.js_config"]??{},i=n.device??a.device;i&&"string"!=typeof i&&(i.hasOwnProperty(t)?i=i[t]:(console.warn(`device not specified for "${t}". Using the default device.`),i=null));const d=i??(g.apis.IS_NODE_ENV?"cpu":"wasm"),u=(0,s.deviceToExecutionProviders)(d),c=a.device_config??{};c.hasOwnProperty(d)&&(a={...a,...c[d]});let p=n.dtype??a.dtype;if("string"!=typeof p&&(p&&p.hasOwnProperty(t)?p=p[t]:(p=o.DEFAULT_DEVICE_DTYPE_MAPPING[d]??o.DATA_TYPES.fp32,console.warn(`dtype not specified for "${t}". Using the default dtype (${p}) for this device (${d}).`))),p===o.DATA_TYPES.auto){let e=a.dtype;"string"!=typeof e&&(e=e?.[t]),p=e&&e!==o.DATA_TYPES.auto&&o.DATA_TYPES.hasOwnProperty(e)?e:o.DEFAULT_DEVICE_DTYPE_MAPPING[d]??o.DATA_TYPES.fp32}const m=p;if(!o.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(m))throw new Error(`Invalid dtype: ${m}. Should be one of: ${Object.keys(o.DATA_TYPES).join(", ")}`);if(m===o.DATA_TYPES.fp16&&"webgpu"===d&&!await(0,o.isWebGpuFp16Supported)())throw new Error(`The device (${d}) does not support fp16.`);const h=a.kv_cache_dtype,f=h?"string"==typeof h?h:h[m]??"float32":void 0;if(f&&!["float32","float16"].includes(f))throw new Error(`Invalid kv_cache_dtype: ${f}. Should be one of: float32, float16`);const _={dtype:m,kv_cache_dtype:f,device:d},w=`${t}${o.DEFAULT_DTYPE_SUFFIX_MAPPING[m]}.onnx`,b=`${n.subfolder??""}/${w}`,y={...n.session_options};y.executionProviders??=u;const M=a.free_dimension_overrides;M?y.freeDimensionOverrides??=M:d.startsWith("webnn")&&!y.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${d}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const x=g.apis.IS_NODE_ENV&&g.env.useFSCache,v=(0,l.getModelFile)(e,b,!0,n,x),T=n.use_external_data_format??a.use_external_data_format;let k=[];if(T){let r;r="object"==typeof T?T.hasOwnProperty(w)?T[w]:!!T.hasOwnProperty(t)&&T[t]:T;const s=+r;if(s>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${s}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let t=0;t<s;++t){const r=`${w}_data${0===t?"":"_"+t}`,s=`${n.subfolder??""}/${r}`;k.push(new Promise((async(t,o)=>{const a=await(0,l.getModelFile)(e,s,!0,n,x);t(a instanceof Uint8Array?{path:r,data:a}:r)})))}}else void 0!==y.externalData&&(k=y.externalData.map((async t=>{if("string"==typeof t.data){const r=await(0,l.getModelFile)(e,t.data,!0,n);return{...t,data:r}}return t})));if(k.length>0){const e=await Promise.all(k);g.apis.IS_NODE_ENV||(y.externalData=e)}if("webgpu"===d){const e=(0,r.getCacheShapes)(n.config,{prefix:"present"});if(Object.keys(e).length>0&&!(0,s.isONNXProxy)()){const t={};for(const n in e)t[n]="gpu-buffer";y.preferredOutputLocation=t}}return{buffer_or_path:await v,session_options:y,session_config:_}}(e,t[a],n);return[a,await(0,s.createInferenceSession)(i,d,u)]}))))}async function D(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>[r,await(0,l.getModelJSON)(e,t[r],!1,n)]))))}let B=Promise.resolve();async function N(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const o of e.inputNames){const e=t[o];e instanceof p.Tensor?n[o]=(0,s.isONNXProxy)()?e.clone():e:r.push(o)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const o=Object.keys(t).length,a=e.inputNames.length;if(o>a){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${o} > ${a}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((([e,t])=>[e,t.ort_tensor]))),r=()=>e.run(t);return R(await(g.apis.IS_BROWSER_ENV||g.apis.IS_WEBWORKER_ENV?B=B.then(r):r()))}catch(e){const t=Object.fromEntries(Object.entries(n).map((([e,t])=>{const n={type:t.type,dims:t.dims,location:t.location};return"gpu-buffer"!==n.location&&(n.data=t.data),[e,n]})));throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",t),e}}function R(e){for(let t in e)(0,s.isONNXTensor)(e[t])?e[t]=new p.Tensor(e[t]):"object"==typeof e[t]&&R(e[t]);return e}function j(e){if(e instanceof p.Tensor)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new p.Tensor("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new p.Tensor("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function V(e){return new p.Tensor("bool",[e],[1])}async function G(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:s,...o}=t;if(!n){const r=(0,i.pick)(t,e.sessions.model.inputNames);n=(await q(e,r)).last_hidden_state}o.input_ids=s,o.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(o.encoder_attention_mask=t.attention_mask);return await W(e,o,!0)}async function q(e,t){const n=e.sessions.model,r=(0,i.pick)(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}if(n.inputNames.includes("token_type_ids")&&!r.token_type_ids){if(!r.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");r.token_type_ids=(0,p.zeros_like)(r.input_ids)}if(n.inputNames.includes("pixel_mask")&&!r.pixel_mask){if(!r.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const e=r.pixel_values.dims;r.pixel_mask=(0,p.ones)([e[0],e[2],e[3]])}return await N(n,r)}async function U(e,t){const n=await e.encode(t);return await e.decode(n)}async function W(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:s,...o}=t;if(r.inputNames.includes("use_cache_branch")&&(o.use_cache_branch=V(!!s)),r.inputNames.includes("position_ids")&&o.attention_mask&&!o.position_ids){const t=["paligemma","gemma3_text","gemma3"].includes(e.config.model_type)?1:0;o.position_ids=function(e,t=null,n=0){const{input_ids:r,inputs_embeds:s,attention_mask:o}=e,{data:a,dims:i}=Z(o,n);let l=new p.Tensor("int64",a,i);if(t){const e=-(r??s).dims.at(1);l=l.slice(null,[e,null])}return l}(o,s,t)}e.addPastKeyValues(o,s);const a=(0,i.pick)(o,r.inputNames);return await N(r,a)}function H({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s}){const o=r.tolist().map((t=>t.reduce(((t,n,r)=>(n==e&&t.push(r),t)),[]))),a=o.reduce(((e,t)=>e+t.length),0),i=n.dims[0];if(a!==i)throw new Error(`Number of tokens and features do not match: tokens: ${a}, features ${i}`);let l=0;for(let e=0;e<o.length;++e){const r=o[e],s=t[e];for(let e=0;e<r.length;++e)s[r[e]].data.set(n[l++].data)}return{inputs_embeds:t,attention_mask:s}}function Q({image_token_id:e,inputs_embeds:t,image_features:n,input_ids:r,attention_mask:s}){return H({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}function K({audio_token_id:e,inputs_embeds:t,audio_features:n,input_ids:r,attention_mask:s}){return H({modality_token_id:e,inputs_embeds:t,modality_features:n,input_ids:r,attention_mask:s})}async function X(e,{encode_function:t,merge_function:n,modality_input_name:r,modality_output_name:s,input_ids:o=null,attention_mask:a=null,position_ids:i=null,inputs_embeds:l=null,past_key_values:d=null,generation_config:u=null,logits_processor:c=null,...m}){const h=m[r];if(!l)if(l=await e.encode_text({input_ids:o,...m}),h&&1!==o.dims[1]){const e=await t({[r]:h,...m});({inputs_embeds:l,attention_mask:a}=n({[s]:e,inputs_embeds:l,input_ids:o,attention_mask:a}))}else if(d&&h&&1===o.dims[1]){const e=o.dims[1],t=Object.values(d)[0].dims.at(-2);a=(0,p.cat)([(0,p.ones)([o.dims[0],t]),a.slice(null,[a.dims[1]-e,a.dims[1]])],1)}if(!i&&"qwen2_vl"===e.config.model_type){const{image_grid_thw:t,video_grid_thw:n}=m;[i]=e.get_rope_index(o,t,n,a)}return await W(e,{inputs_embeds:l,past_key_values:d,attention_mask:a,position_ids:i,generation_config:u,logits_processor:c},!0)}async function J(e,t){return await X(e,{...t,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:e.encode_audio.bind(e),merge_function:e._merge_input_ids_with_audio_features.bind(e)})}async function Y(e,t){return await X(e,{...t,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:e.encode_image.bind(e),merge_function:e._merge_input_ids_with_image_features.bind(e)})}function Z(e,t=0){const[n,r]=e.dims,s=e.data,o=new BigInt64Array(s.length);for(let e=0;e<n;++e){const n=e*r;let a=BigInt(t);for(let e=0;e<r;++e){const t=n+e;0n===s[t]?o[t]=BigInt(1):(o[t]=a,a+=s[t])}}return{data:o,dims:e.dims}}function ee(e,t,n,r){const s=n.past_key_values?Object.values(n.past_key_values)[0].dims.at(-2):0;if(!n.attention_mask){let e;for(const t of["input_ids","inputs_embeds","position_ids"])if(n[t]){e=n[t].dims;break}if(!e)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");n.attention_mask=(0,p.ones)([e[0],s+e[1]])}if(n.past_key_values){const{input_ids:e,attention_mask:t}=n;t&&t.dims[1]>e.dims[1]||s<e.dims[1]&&(n.input_ids=e.slice(null,[s,null]))}return n}function te(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:j(t)}}function ne(e,...t){return e.config.is_encoder_decoder?te(e,...t):ee(e,...t)}function re(e,t,n,r){const s=!!n.past_key_values;if(null!==r.guidance_scale&&r.guidance_scale>1&&(s?n.input_ids=(0,p.cat)([n.input_ids,n.input_ids],0):(n.input_ids=(0,p.cat)([n.input_ids,(0,p.full_like)(n.input_ids,BigInt(r.pad_token_id))],0),n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.full_like)(n.attention_mask,0n)],0))),!s&&n.pixel_values||(n.pixel_values=(0,p.full)([0,0,3,384,384],1)),s){const e=0,t=1,r=e>0?1:0,s=1;n.images_seq_mask=new p.Tensor("bool",new Array(e+t).fill(!0).fill(!1,0,t),[s,e+t]),n.images_emb_mask=new p.Tensor("bool",new Array(e).fill(!!r),[s,1,e])}return n}class se extends a.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t,n){super(),this.config=e,this.sessions=t,this.configs=n;const r=L.get(this.constructor),s=A.get(r);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,s){case T:this.can_generate=!0,this._forward=W,this._prepare_inputs_for_generation=ee;break;case x:case v:case $:this.can_generate=!0,this._forward=G,this._prepare_inputs_for_generation=te;break;case M:this._forward=G;break;case P:this.can_generate=!0,this._forward=Y,this._prepare_inputs_for_generation=ne;break;case F:this.can_generate=!0,this._forward=J,this._prepare_inputs_for_generation=ne;break;case S:case I:this.can_generate=!0,this._prepare_inputs_for_generation=ne;break;case C:this.can_generate=!0,this._prepare_inputs_for_generation=re;break;case E:this._forward=U;break;default:this._forward=q}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:o=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:u=null,dtype:c=null,use_external_data_format:p=null,session_options:m={}}={}){let h={progress_callback:t,config:n,cache_dir:s,local_files_only:o,revision:a,model_file_name:i,subfolder:l,device:u,dtype:c,use_external_data_format:p,session_options:m};const f=L.get(this),_=A.get(f);let g;if(n=h.config=await r.AutoConfig.from_pretrained(e,h),_===T)g=await Promise.all([O(e,{model:h.model_file_name??"model"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(_===x||_===v)g=await Promise.all([O(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(_===k)g=await Promise.all([O(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},h)]);else if(_===M)g=await Promise.all([O(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},h)]);else if(_===P){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),g=await Promise.all([O(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(_===F){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};g=await Promise.all([O(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(_===I){const t={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};g=await Promise.all([O(e,t,h),D(e,{generation_config:"generation_config.json"},h)])}else if(_===$)g=await Promise.all([O(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(_===C)g=await Promise.all([O(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(_===S)g=await Promise.all([O(e,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},h),D(e,{generation_config:"generation_config.json"},h)]);else if(_===E)g=await Promise.all([O(e,{encoder_model:"encoder_model",decoder_model:"decoder_model"},h)]);else{if(_!==y){const e=f??n?.model_type;"custom"!==e&&console.warn(`Model type for '${e}' not found, assuming encoder-only architecture. Please report this at ${d.GITHUB_ISSUE_URL}.`)}g=await Promise.all([O(e,{model:h.model_file_name??"model"},h)])}return new this(n,...g)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(e){const t=new u.LogitsProcessorList;return null!==e.temperature&&1!==e.temperature&&t.push(new u.TemperatureLogitsWarper(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new u.TopKLogitsWarper(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new u.TopPLogitsWarper(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new u.LogitsProcessorList;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new u.RepetitionPenaltyLogitsProcessor(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new u.NoRepeatNGramLogitsProcessor(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new u.NoBadWordsLogitsProcessor(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new u.MinLengthLogitsProcessor(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new u.MinNewTokensLengthLogitsProcessor(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new u.ForcedBOSTokenLogitsProcessor(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new u.ForcedEOSTokenLogitsProcessor(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new u.SuppressTokensAtBeginLogitsProcessor(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new u.ClassifierFreeGuidanceLogitsProcessor(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=c.GenerationConfig){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const s=new n(r);return Object.assign(s,this.generation_config??{}),e&&Object.assign(s,e),t&&Object.assign(s,(0,i.pick)(t,Object.getOwnPropertyNames(s))),s}_get_stopping_criteria(e,t=null){const n=new f.StoppingCriteriaList;return null!==e.max_length&&n.push(new f.MaxLengthCriteria(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new f.EosTokenCriteria(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[ou,du,su,Zd],t=L.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let s=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(s+=` Please use the following class instead: ${[...n].join(", ")}`),Error(s)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new p.Tensor("int64",e.flat(),[e.length,1]),r||(n.attention_mask=(0,p.cat)([n.attention_mask,(0,p.ones)([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=(0,i.pick)(n,this.forward_params),s=this.main_input_name;if(s in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[s]=e;return{inputs_tensor:r[s],model_inputs:r,model_input_name:s}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...s}=t,o=await this._prepare_inputs_embeds(t);t={...s,...(0,i.pick)(o,["inputs_embeds","attention_mask"])}}let{last_hidden_state:s}=await q(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)s=(0,p.cat)([s,(0,p.full_like)(s,0)],0),"attention_mask"in t&&(t.attention_mask=(0,p.cat)([t.attention_mask,(0,p.zeros_like)(t.attention_mask)],0));else if(t.decoder_input_ids){const e=j(t.decoder_input_ids).dims[0];if(e!==s.dims[0]){if(1!==s.dims[0])throw new Error(`The encoder outputs have a different batch size (${s.dims[0]}) than the decoder inputs (${e}).`);s=(0,p.cat)(Array.from({length:e},(()=>s)),0)}}return t.encoder_outputs=s,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:s,generation_config:o}){let{decoder_input_ids:a,...i}=n;if(!(a instanceof p.Tensor)){if(a)Array.isArray(a[0])||(a=Array.from({length:e},(()=>a)));else if(r??=s,"musicgen"===this.config.model_type)a=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);a=r}else a=Array.from({length:e},(()=>[r]));a=j(a)}return n.decoder_attention_mask=(0,p.ones_like)(a),{input_ids:a,model_inputs:i}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:s=null,...o}){this._validate_model_class(),t=this._prepare_generation_config(t,o);let{inputs_tensor:a,model_inputs:i,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:o});const d=this.config.is_encoder_decoder;let u;d&&("encoder_outputs"in i||(i=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:a,model_inputs:i,model_input_name:l,generation_config:t}))),d?({input_ids:u,model_inputs:i}=this._prepare_decoder_input_ids_for_generation({batch_size:i[l].dims.at(0),model_input_name:l,model_kwargs:i,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):u=i[l];let c=u.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=c+t.max_new_tokens);const m=this._get_logits_processor(t,c,n),h=this._get_stopping_criteria(t,r),f=i[l].dims.at(0),g=_.LogitsSampler.getSampler(t),w=new Array(f).fill(0),b=u.tolist();let y;s&&s.put(b);let M={};for(;;){if(i=this.prepare_inputs_for_generation(b,i,t),y=await this.forward(i),t.output_attentions&&t.return_dict_in_generate){const e=this.getAttentions(y);for(const t in e)t in M||(M[t]=[]),M[t].push(e[t])}const e=m(b,y.logits.slice(null,-1,null)),n=[];for(let t=0;t<e.dims.at(0);++t){const r=e[t],s=await g(r);for(const[e,r]of s){const s=BigInt(e);w[t]+=r,b[t].push(s),n.push([s]);break}}s&&s.put(n);if(h(b).every((e=>e)))break;i=this._update_model_kwargs_for_generation({generated_input_ids:n,outputs:y,model_inputs:i,is_encoder_decoder:d})}s&&s.end();const x=this.getPastKeyValues(y,i.past_key_values,!0),v=new p.Tensor("int64",b.flat(),[b.length,b[0].length]);if(t.return_dict_in_generate)return{sequences:v,past_key_values:x,...M};for(const e of Object.values(y))"gpu-buffer"===e.location&&e.dispose();return v}getPastKeyValues(e,t,n=!1){const r=Object.create(null);for(const s in e)if(s.startsWith("present")){const o=s.replace("present_conv","past_conv").replace("present","past_key_values"),a=s.includes("encoder");if(r[o]=a&&t?t[o]:e[s],t&&(!a||n)){const e=t[o];"gpu-buffer"===e.location&&e.dispose()}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.sessions.decoder_model_merged??this.sessions.model,n=(e[this.main_input_name]??e.attention_mask)?.dims?.[0]??1,s=t?.config?.kv_cache_dtype??"float32",o="float16"===s?p.DataTypeMap.float16:p.DataTypeMap.float32,a=(0,r.getCacheShapes)(this.config,{batch_size:n});for(const t in a){const n=a[t].reduce(((e,t)=>e*t),1);e[t]=new p.Tensor(s,new o(n),a[t])}}}async encode_image({pixel_values:e}){return(await N(this.sessions.vision_encoder,{pixel_values:e})).image_features}async encode_text({input_ids:e}){return(await N(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}async encode_audio({audio_values:e}){return(await N(this.sessions.audio_encoder,{audio_values:e})).audio_features}}class oe{}class ae extends oe{constructor({last_hidden_state:e,hidden_states:t=null,attentions:n=null}){super(),this.last_hidden_state=e,this.hidden_states=t,this.attentions=n}}class ie extends se{}class le extends ie{}class de extends ie{async _call(e){return new fc(await super._call(e))}}class ue extends ie{async _call(e){return new pc(await super._call(e))}}class ce extends ie{async _call(e){return new hc(await super._call(e))}}class pe extends ie{async _call(e){return new _c(await super._call(e))}}class me extends se{}class he extends me{}class fe extends me{async _call(e){return new fc(await super._call(e))}}class _e extends me{async _call(e){return new pc(await super._call(e))}}class ge extends me{async _call(e){return new hc(await super._call(e))}}class we extends me{async _call(e){return new _c(await super._call(e))}}class be extends se{}class ye extends be{}class Me extends be{async _call(e){return new fc(await super._call(e))}}class xe extends be{async _call(e){return new pc(await super._call(e))}}class ve extends be{async _call(e){return new hc(await super._call(e))}}class Te extends se{}class ke extends Te{}class Pe extends Te{}class $e extends se{}class Ce extends $e{}class Se extends se{}class Fe extends Se{}class Ee extends Se{async _call(e){return new fc(await super._call(e))}}class Ie extends Se{async _call(e){return new pc(await super._call(e))}}class Ae extends Se{async _call(e){return new hc(await super._call(e))}}class ze extends Se{async _call(e){return new _c(await super._call(e))}}class Le extends se{}class Oe extends Le{}class De extends Le{async _call(e){return new fc(await super._call(e))}}class Be extends Le{async _call(e){return new pc(await super._call(e))}}class Ne extends Le{async _call(e){return new hc(await super._call(e))}}class Re extends Le{async _call(e){return new _c(await super._call(e))}}class je extends se{}class Ve extends je{}class Ge extends je{async _call(e){return new fc(await super._call(e))}}class qe extends je{async _call(e){return new pc(await super._call(e))}}class Ue extends je{async _call(e){return new hc(await super._call(e))}}class We extends je{async _call(e){return new _c(await super._call(e))}}class He extends se{}class Qe extends He{}class Ke extends He{async _call(e){return new fc(await super._call(e))}}class Xe extends He{async _call(e){return new pc(await super._call(e))}}class Je extends He{async _call(e){return new hc(await super._call(e))}}class Ye extends He{async _call(e){return new _c(await super._call(e))}}class Ze extends se{}class et extends Ze{}class tt extends Ze{async _call(e){return new fc(await super._call(e))}}class nt extends Ze{async _call(e){return new pc(await super._call(e))}}class rt extends Ze{async _call(e){return new hc(await super._call(e))}}class st extends Ze{async _call(e){return new _c(await super._call(e))}}class ot extends se{}class at extends ot{}class it extends ot{async _call(e){return new fc(await super._call(e))}}class lt extends ot{async _call(e){return new pc(await super._call(e))}}class dt extends ot{async _call(e){return new hc(await super._call(e))}}class ut extends ot{async _call(e){return new _c(await super._call(e))}}class ct extends se{}class pt extends ct{}class mt extends ct{async _call(e){return new pc(await super._call(e))}}class ht extends ct{async _call(e){return new hc(await super._call(e))}}class ft extends ct{async _call(e){return new _c(await super._call(e))}}class _t extends ct{async _call(e){return new fc(await super._call(e))}}class gt extends se{}class wt extends gt{}class bt extends gt{async _call(e){return new fc(await super._call(e))}}class yt extends gt{async _call(e){return new pc(await super._call(e))}}class Mt extends gt{async _call(e){return new hc(await super._call(e))}}class xt extends se{}class vt extends xt{}class Tt extends xt{async _call(e){return new fc(await super._call(e))}}class kt extends xt{async _call(e){return new pc(await super._call(e))}}class Pt extends xt{async _call(e){return new _c(await super._call(e))}}class $t extends se{}class Ct extends $t{}class St extends $t{async _call(e){return new fc(await super._call(e))}}class Ft extends $t{async _call(e){return new pc(await super._call(e))}}class Et extends $t{async _call(e){return new hc(await super._call(e))}}class It extends $t{async _call(e){return new _c(await super._call(e))}}class At extends se{}class zt extends At{}class Lt extends At{async _call(e){return new fc(await super._call(e))}}class Ot extends At{async _call(e){return new pc(await super._call(e))}}class Dt extends At{async _call(e){return new _c(await super._call(e))}}class Bt extends se{}class Nt extends Bt{}class Rt extends Bt{async _call(e){return new pc(await super._call(e))}}class jt extends Bt{async _call(e){return new _c(await super._call(e))}}class Vt extends Bt{async _call(e){return new fc(await super._call(e))}}class Gt extends se{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class qt extends Gt{}class Ut extends Gt{}class Wt extends se{}class Ht extends Wt{}class Qt extends Wt{}class Kt extends se{}class Xt extends Kt{}class Jt extends Kt{}class Yt extends se{}class Zt extends Yt{}class en extends Yt{}class tn extends Yt{async _call(e){return new pc(await super._call(e))}}class nn extends se{}class rn extends nn{}class sn extends nn{}class on extends nn{async _call(e){return new pc(await super._call(e))}}class an extends nn{}class ln extends se{}class dn extends ln{}class un extends ln{}class cn extends se{}class pn extends cn{}class mn extends cn{}class hn extends se{}class fn extends hn{}class _n extends hn{async _call(e){return new fc(await super._call(e))}}class gn extends hn{async _call(e){return new pc(await super._call(e))}}class wn extends hn{async _call(e){return new hc(await super._call(e))}}class bn extends hn{async _call(e){return new _c(await super._call(e))}}class yn extends se{}class Mn extends yn{}class xn extends yn{async _call(e){return new fc(await super._call(e))}}class vn extends yn{async _call(e){return new pc(await super._call(e))}}class Tn extends yn{async _call(e){return new hc(await super._call(e))}}class kn extends yn{async _call(e){return new _c(await super._call(e))}}class Pn extends se{}class $n extends Pn{}class Cn extends Pn{async _call(e){return new fc(await super._call(e))}}class Sn extends Pn{async _call(e){return new pc(await super._call(e))}}class Fn extends Pn{async _call(e){return new hc(await super._call(e))}}class En extends Pn{async _call(e){return new _c(await super._call(e))}}class In extends se{}class An extends In{}class zn extends In{}class Ln extends se{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class On extends Ln{}class Dn extends Ln{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,w.WhisperGenerationConfig)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const s=`<|${(0,b.whisper_language_to_code)(n)}|>`;t.push(e.lang_to_id[s]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...s}){t=this._prepare_generation_config(t,s);const o=s.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new u.LogitsProcessorList,n.push(new u.WhisperTimeStampLogitsProcessor(t,o))),t.begin_suppress_tokens&&(n??=new u.LogitsProcessorList,n.push(new u.SuppressTokensAtBeginLogitsProcessor(t.begin_suppress_tokens,o.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const a=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:o,...s});return t.return_token_timestamps&&(a.token_timestamps=this._extract_token_timestamps(a,t.alignment_heads,t.num_frames)),a}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let s=this.config.median_filter_width;void 0===s&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),s=7);const o=e.cross_attentions,a=Array.from({length:this.config.decoder_layers},((e,t)=>(0,p.cat)(o.map((e=>e[t])),2))),l=(0,p.stack)(t.map((([e,t])=>{if(e>=a.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${a.length}).`);return n?a[e].slice(null,t,null,[0,n]):a[e].slice(null,t)}))).transpose(1,0,2,3),[d,u]=(0,p.std_mean)(l,-2,0,!0),c=l.clone();for(let e=0;e<c.dims[0];++e){const t=c[e];for(let n=0;n<t.dims[0];++n){const r=t[n],o=d[e][n][0].data,a=u[e][n][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-a[e])/o[e];t.set((0,h.medianFilter)(t,s))}}}const m=[(0,p.mean)(c,1)],f=e.sequences.dims,_=new p.Tensor("float32",new Float32Array(f[0]*f[1]),f);for(let e=0;e<f[0];++e){const t=m[e].neg().squeeze_(0),[n,s]=(0,h.dynamic_time_warping)(t.tolist()),o=Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t])),a=(0,i.mergeArrays)([1],o).map((e=>!!e)),l=[];for(let e=0;e<a.length;++e)a[e]&&l.push(s[e]*r);_[e].data.set(l,1)}return _}}class Bn extends Dn{}class Nn extends se{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class Rn extends Nn{}class jn extends Nn{}class Vn extends se{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class Gn extends se{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class qn extends Gn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Un extends qn{}class Wn extends qn{}class Hn extends se{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Qn extends Hn{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:(0,p.cat)([t,e],1),attention_mask:(0,p.cat)([(0,p.ones)(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let s,o;return e&&(s=await this.encode_text({input_ids:e})),t&&(o=await this.encode_image({pixel_values:t})),s&&o?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:s,image_features:o,input_ids:e,attention_mask:r})):n=s||o,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:s,encoder_outputs:o,past_key_values:a,inputs_embeds:i,decoder_inputs_embeds:l}){if(i||({inputs_embeds:i,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:i,attention_mask:n})),!o){let{last_hidden_state:e}=await q(this,{inputs_embeds:i,attention_mask:n});o=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const d={inputs_embeds:l,attention_mask:s,encoder_attention_mask:n,encoder_hidden_states:o,past_key_values:a};return await W(this,d,!0)}}class Kn extends se{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Xn extends Kn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Jn extends Gn{_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_index,...e,image_features:n})}}class Yn extends se{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class Zn extends Yn{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,input_features:r=null,input_features_mask:s=null,position_ids:o=null,inputs_embeds:a=null,per_layer_inputs:i=null,past_key_values:l=null,generation_config:d=null,logits_processor:u=null,...c}){if(!(a&&i||(({inputs_embeds:a,per_layer_inputs:i}=await N(this.sessions.embed_tokens,{input_ids:e})),1===e.dims[1]))){if(n){const{image_features:r}=await N(this.sessions.vision_encoder,{pixel_values:n});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_image_features({image_features:r,inputs_embeds:a,input_ids:e,attention_mask:t}))}if(r){const{audio_features:n}=await N(this.sessions.audio_encoder,{input_features:r,input_features_mask:s});({inputs_embeds:a,attention_mask:t}=this._merge_input_ids_with_audio_features({audio_features:n,inputs_embeds:a,input_ids:e,attention_mask:t}))}}return await W(this,{inputs_embeds:a,per_layer_inputs:i,past_key_values:l,attention_mask:t,position_ids:o,generation_config:d,logits_processor:u},!0)}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_id,...e,image_features:n})}_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return K({audio_token_id:this.config.audio_token_id,...e,audio_features:n})}}class er extends se{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class tr extends er{async encode_image({pixel_values:e,pixel_attention_mask:t}){return(await N(this.sessions.vision_encoder,{pixel_values:e,pixel_attention_mask:t})).image_features}_merge_input_ids_with_image_features(e){const t=e.image_features.dims.at(-1),n=e.image_features.view(-1,t);return Q({image_token_id:this.config.image_token_id,...e,image_features:n})}}class nr extends tr{}class rr extends se{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class sr extends rr{async forward({input_ids:e=null,attention_mask:t=null,pixel_values:n=null,image_sizes:r=null,position_ids:s=null,inputs_embeds:o=null,past_key_values:a=null,generation_config:i=null,logits_processor:l=null,...d}){if(!o){let t;if(n&&1!==e.dims[1]){if(!r)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:t}=await N(this.sessions.vision_encoder,{pixel_values:n,image_sizes:r}))}else{const e=this.config.normalized_config.hidden_size;t=new p.Tensor("float32",[],[0,e])}({inputs_embeds:o}=await N(this.sessions.prepare_inputs_embeds,{input_ids:e,image_features:t}))}return await W(this,{inputs_embeds:o,past_key_values:a,attention_mask:t,position_ids:s,generation_config:i,logits_processor:l},!1)}}class or extends se{}class ar extends or{}class ir extends or{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class lr extends or{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class dr extends or{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class ur extends or{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class cr extends se{}class pr extends cr{}class mr extends cr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class hr extends or{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class fr extends se{}class _r extends fr{}class gr extends se{}class wr extends gr{async forward(e){const t=!e.input_ids,n=!e.pixel_values;if(t&&n)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(t&&(e.input_ids=(0,p.ones)([e.pixel_values.dims[0],1])),n){const{image_size:t}=this.config.vision_config;e.pixel_values=(0,p.full)([0,3,t,t],0)}const{text_embeddings:r,image_embeddings:s,l2norm_text_embeddings:o,l2norm_image_embeddings:a}=await super.forward(e),i={};return t||(i.text_embeddings=r,i.l2norm_text_embeddings=o),n||(i.image_embeddings=s,i.l2norm_image_embeddings=a),i}}class br extends gr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class yr extends gr{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"vision_model"})}}class Mr extends se{}class xr extends Mr{}class vr extends Mr{}class Tr extends se{}class kr extends Tr{}class Pr extends Tr{}class $r extends se{}class Cr extends $r{}class Sr extends $r{}class Fr extends se{}class Er extends Fr{}class Ir extends Fr{}class Ar extends se{}class zr extends Ar{}class Lr extends Ar{}class Or extends se{}class Dr extends Or{}class Br extends Or{}class Nr extends se{}class Rr extends Nr{}class jr extends Nr{}class Vr extends se{}class Gr extends Vr{}class qr extends Vr{}class Ur extends se{}class Wr extends Ur{}class Hr extends Ur{}class Qr extends se{}class Kr extends Qr{}class Xr extends Qr{}class Jr extends se{}class Yr extends Jr{}class Zr extends Jr{}class es extends se{}class ts extends es{}class ns extends es{}class rs extends se{}class ss extends rs{}class os extends rs{}class as extends se{}class is extends as{}class ls extends as{}class ds extends se{}class us extends ds{}class cs extends ds{}class ps extends se{}class ms extends ps{}class hs extends ps{}class fs extends se{}class _s extends fs{}class gs extends fs{}class ws extends se{}class bs extends ws{}class ys extends ws{}class Ms extends se{}class xs extends Ms{}class vs extends Ms{}class Ts extends se{}class ks extends Ts{}class Ps extends Ts{}class $s extends se{}class Cs extends $s{}class Ss extends $s{}class Fs extends se{}class Es extends Fs{}class Is extends Fs{}class As extends se{}class zs extends As{}class Ls extends As{}class Os extends se{}class Ds extends Os{}class Bs extends Os{}class Ns extends se{}class Rs extends Ns{}class js extends Ns{}class Vs extends se{}class Gs extends Vs{}class qs extends Vs{}class Us extends se{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class Ws extends Us{get_rope_index(e,t,n,r){const{vision_config:s,image_token_id:o,video_token_id:a,vision_start_token_id:i}=this.config,l=s.spatial_merge_size??2,d=[];if(t||n){let s=e.tolist();r||(r=(0,p.ones_like)(e));const u=r.tolist(),c=Array.from({length:3},(t=>Array.from({length:e.dims[0]},(t=>Array.from({length:e.dims[1]},(e=>1)))))),m=t?t.tolist():[],f=n?n.tolist():[];let _=0,g=0;for(let e=0;e<s.length;++e){const t=s[e].filter(((t,n)=>1==u[e][n])),n=t.reduce(((e,t,n)=>(t==i&&e.push(n),e)),[]).map((e=>t[e+1])),r=n.filter((e=>e==o)).length,p=n.filter((e=>e==a)).length;let w=[],b=0,y=r,M=p;for(let e=0;e<n.length;++e){const e=t.findIndex(((e,t)=>t>b&&e==o)),n=t.findIndex(((e,t)=>t>b&&e==a)),r=y>0&&-1!==e?e:t.length+1,s=M>0&&-1!==n?n:t.length+1;let i,d,u,c;r<s?([d,u,c]=m[_],++_,--y,i=r):([d,u,c]=f[g],++g,--M,i=s);const[p,x,v]=[Number(d),Math.floor(Number(u)/l),Math.floor(Number(c)/l)],T=i-b,k=w.length>0?(0,h.max)(w.at(-1))[0]+1:0;w.push(Array.from({length:3*T},((e,t)=>k+t%T)));const P=T+k,$=p*x*v,C=Array.from({length:$},((e,t)=>P+Math.floor(t/(x*v)))),S=Array.from({length:$},((e,t)=>P+Math.floor(t/v)%x)),F=Array.from({length:$},((e,t)=>P+t%v));w.push([C,S,F].flat()),b=i+$}if(b<t.length){const e=w.length>0?(0,h.max)(w.at(-1))[0]+1:0,n=t.length-b;w.push(Array.from({length:3*n},((t,r)=>e+r%n)))}const x=w.reduce(((e,t)=>e+t.length),0),v=new Array(x);let T=0;for(let e=0;e<3;++e)for(let t=0;t<w.length;++t){const n=w[t],r=n.length/3;for(let t=e*r;t<(e+1)*r;++t)v[T++]=n[t]}let k=0;const P=u[e];for(let t=0;t<P.length;++t)if(1==P[t]){for(let n=0;n<3;++n)c[n][e][t]=v[n*x/3+k];++k}const $=(0,h.max)(v)[0];d.push($+1-s[e].length)}return[new p.Tensor("int64",c.flat(1/0),[3,e.dims[0],e.dims[1]]),new p.Tensor("int64",d,[d.length,1])]}if(r){const{data:e,dims:t}=Z(r),n=BigInt64Array.from({length:3*e.length},((t,n)=>e[n%e.length])),s=Array.from({length:t[0]},((n,r)=>(0,h.max)(e.subarray(t[1]*r,t[1]*(r+1)))[0]+1n+BigInt(t[1])));return[new p.Tensor("int64",n,[3,...t]),new p.Tensor("int64",s,[s.length,1])]}{const[t,n]=e.dims,r=BigInt64Array.from({length:3*t*n},((e,r)=>BigInt(Math.floor(r%n/t))));return[new p.Tensor("int64",r,[3,...e.dims]),(0,p.zeros)([t,1])]}}async encode_image({pixel_values:e,image_grid_thw:t}){return(await N(this.sessions.vision_encoder,{pixel_values:e,grid_thw:t})).image_features}_merge_input_ids_with_image_features(e){return Q({image_token_id:this.config.image_token_id,...e})}prepare_inputs_for_generation(e,t,n){if(t.attention_mask&&!t.position_ids)if(t.past_key_values){t.pixel_values=null;const e=BigInt(Object.values(t.past_key_values)[0].dims.at(-2)),n=t.rope_deltas.map((t=>e+t));t.position_ids=(0,p.stack)([n,n,n],0)}else[t.position_ids,t.rope_deltas]=this.get_rope_index(t.input_ids,t.image_grid_thw,t.video_grid_thw,t.attention_mask);return t}}class Hs extends se{}class Qs extends Hs{}class Ks extends Hs{}class Xs extends se{}class Js extends Xs{}class Ys extends Xs{}class Zs extends se{}class eo extends Zs{}class to extends Zs{}class no extends se{}class ro extends no{}class so extends no{}class oo extends se{}class ao extends oo{}class io extends oo{}class lo extends se{}class uo extends lo{}class co extends lo{async _call(e){return new pc(await super._call(e))}}class po extends se{}class mo extends po{}class ho extends po{async _call(e){return new pc(await super._call(e))}}class fo extends se{}class _o extends fo{}class go extends se{}class wo extends go{}class bo extends go{async _call(e){return new pc(await super._call(e))}}class yo extends se{}class Mo extends yo{}class xo extends se{}class vo extends xo{}class To extends xo{async _call(e){return new pc(await super._call(e))}}class ko extends se{}class Po extends ko{}class $o extends se{}class Co extends $o{}class So extends $o{async _call(e){return new pc(await super._call(e))}}class Fo extends se{}class Eo extends Fo{async _call(e){return new bc(await super._call(e))}}class Io extends se{}class Ao extends Io{}class zo extends Io{async _call(e){return new pc(await super._call(e))}}class Lo extends se{}class Oo extends Lo{}class Do extends Lo{async _call(e){return new pc(await super._call(e))}}class Bo extends se{}class No extends Bo{}class Ro extends Bo{}class jo extends se{}class Vo extends jo{}class Go extends jo{}class qo extends se{}class Uo extends qo{}class Wo extends qo{async _call(e){return new pc(await super._call(e))}}class Ho extends se{}class Qo extends Ho{}class Ko extends Ho{async _call(e){return new Jo(await super._call(e))}}class Xo extends Ho{async _call(e){return new Yo(await super._call(e))}}class Jo extends oe{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Yo extends oe{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Zo extends se{}class ea extends Zo{}class ta extends Zo{async _call(e){return new na(await super._call(e))}}class na extends oe{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ra extends se{}class sa extends ra{}class oa extends ra{async _call(e){return new aa(await super._call(e))}}class aa extends na{}class ia extends se{}class la extends ia{}class da extends ia{async _call(e){return new ua(await super._call(e))}}class ua extends na{}class ca extends se{}class pa extends ca{}class ma extends ca{async _call(e){return new na(await super._call(e))}}class ha extends se{}class fa extends ha{}class _a extends ha{async _call(e){return new ga(await super._call(e))}}class ga extends Jo{}class wa extends se{}class ba extends wa{}class ya extends wa{async _call(e){return new pc(await super._call(e))}}class Ma extends se{}class xa extends Ma{}class va extends Ma{async _call(e){return new pc(await super._call(e))}}class Ta extends se{}class ka extends Ta{}class Pa extends Ta{async _call(e){return new pc(await super._call(e))}}class $a extends se{}class Ca extends $a{}class Sa extends $a{async _call(e){return new pc(await super._call(e))}}class Fa extends $a{}class Ea extends se{}class Ia extends Ea{}class Aa extends Ea{}class za extends se{}class La extends za{}class Oa extends za{}class Da extends se{}class Ba extends Da{}class Na extends se{}class Ra extends Na{}class ja extends Na{}class Va extends Na{}class Ga extends se{}class qa extends Ga{}class Ua extends se{}class Wa extends Ua{}class Ha extends se{}class Qa extends Ha{}class Ka extends se{}class Xa extends Ka{}class Ja extends Ka{}class Ya extends se{}class Za extends Ya{}class ei extends Ya{}class ti extends se{}class ni extends ti{}class ri extends se{}class si extends ri{}class oi extends ri{async _call(e){return new pc(await super._call(e))}}class ai extends se{}class ii extends ai{}class li extends ai{async _call(e){return new pc(await super._call(e))}}class di extends se{}class ui extends di{}class ci extends di{async _call(e){return new pc(await super._call(e))}}class pi extends se{}class mi extends pi{}class hi extends pi{async _call(e){return new pc(await super._call(e))}}class fi extends se{}class _i extends fi{}class gi extends se{}class wi extends gi{}class bi extends se{}class yi extends bi{}class Mi extends se{}class xi extends Mi{}class vi extends Mi{async _call(e){return new Ti(await super._call(e))}}class Ti extends oe{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class ki extends se{}class Pi extends ki{async get_image_embeddings({pixel_values:e}){return await q(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new p.Tensor("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await N(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new $i(await super._call(e))}}class $i extends oe{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Ci extends se{}class Si extends Ci{}class Fi extends Ci{}class Ei extends se{}class Ii extends Ei{}class Ai extends Ei{}class zi extends se{}class Li extends zi{}class Oi extends zi{async _call(e){return new gc(await super._call(e))}}class Di extends zi{async _call(e){return new pc(await super._call(e))}}class Bi extends zi{async _call(e){return new hc(await super._call(e))}}class Ni extends se{}class Ri extends Ni{}class ji extends Ni{async _call(e){return new hc(await super._call(e))}}class Vi extends se{}class Gi extends Vi{}class qi extends se{}class Ui extends qi{}class Wi extends qi{async _call(e){return new gc(await super._call(e))}}class Hi extends qi{async _call(e){return new pc(await super._call(e))}}class Qi extends se{}class Ki extends Qi{}class Xi extends Qi{async _call(e){return new gc(await super._call(e))}}class Ji extends Qi{async _call(e){return new pc(await super._call(e))}}class Yi extends Qi{async _call(e){return new hc(await super._call(e))}}class Zi extends se{}class el extends Zi{}class tl extends Zi{async _call(e){return new gc(await super._call(e))}}class nl extends Zi{async _call(e){return new pc(await super._call(e))}}class rl extends se{}class sl extends zi{}class ol extends zi{async _call(e){return new gc(await super._call(e))}}class al extends zi{async _call(e){return new pc(await super._call(e))}}class il extends se{}class ll extends il{}class dl extends il{async _call(e){return new gc(await super._call(e))}}class ul extends il{async _call(e){return new pc(await super._call(e))}}class cl extends il{async _call(e){return new mc(await super._call(e))}}class pl extends il{async _call(e){return new hc(await super._call(e))}}class ml extends se{}class hl extends ml{}class fl extends se{}class _l extends fl{}class gl extends fl{}class wl extends fl{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:s=20,vocoder:o=null}={}){const a={input_ids:e},{encoder_outputs:i,encoder_attention_mask:l}=await q(this,a),d=i.dims[1]/this.config.reduction_factor,u=Math.floor(d*s),c=Math.floor(d*r),m=this.config.num_mel_bins;let h=[],f=null,_=null,g=0;for(;;){++g;const e=V(!!_);let r;r=_?_.output_sequence_out:new p.Tensor("float32",new Float32Array(m),[1,1,m]);let s={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:i};this.addPastKeyValues(s,f),_=await N(this.sessions.decoder_model_merged,s),f=this.getPastKeyValues(_,f);const{prob:o,spectrum:a}=_;if(h.push(a),g>=c&&(Array.from(o.data).filter((e=>e>=n)).length>0||g>=u))break}const w=(0,p.cat)(h),{waveform:b}=await N(o.sessions.model,{spectrogram:w});return{spectrogram:w,waveform:b}}}class bl extends se{main_input_name="spectrogram"}class yl extends se{}class Ml extends yl{}class xl extends se{}class vl extends xl{}class Tl extends xl{}class kl extends se{}class Pl extends kl{}class $l extends kl{}class Cl extends se{}class Sl extends Cl{}class Fl extends Cl{}class El extends se{}class Il extends El{}class Al extends El{}class zl extends se{}class Ll extends zl{}class Ol extends zl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"text_model"})}}class Dl extends zl{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"audio_model"})}}class Bl extends se{}class Nl extends Bl{async _call(e){return new yc(await super._call(e))}}class Rl extends se{}class jl extends Rl{}class Vl extends Rl{}class Gl extends Rl{}class ql extends se{}class Ul extends ql{}class Wl extends ql{}class Hl extends se{}class Ql extends Hl{}class Kl extends Hl{async _call(e){return new pc(await super._call(e))}}class Xl extends se{}class Jl extends Xl{}class Yl extends Xl{}class Zl extends se{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,s=n-r;let o=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const a=t%n-Math.floor(t/n)%r;a>0&&a<=s&&(e.data[o++]=e.data[t])}const a=Math.floor(t/r),i=o/(a*r);return new p.Tensor(e.type,e.data.slice(0,o),[a,r,i])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r));return super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await N(this.sessions.encodec_decode,{audio_codes:n});return r}}class ed extends se{}class td extends ed{}class nd extends ed{async _call(e){return new pc(await super._call(e))}}class rd extends ed{}class sd extends se{}class od extends sd{}class ad extends sd{async _call(e){return new pc(await super._call(e))}}class id extends sd{}class ld extends se{}class dd extends ld{}class ud extends ld{async _call(e){return new pc(await super._call(e))}}class cd extends ld{}class pd extends se{}class md extends pd{}class hd extends pd{async _call(e){return new pc(await super._call(e))}}class fd extends pd{}class _d extends se{}class gd extends _d{}class wd extends se{}class bd extends wd{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...e){super(...e),this._generation_mode="text"}async forward(e){const t=this._generation_mode??"text";let n;if("text"!==t&&e.past_key_values){const t=this.sessions.gen_img_embeds,r=(0,i.pick)({image_ids:e.input_ids},t.inputNames);n=await N(t,r)}else{const t=this.sessions.prepare_inputs_embeds,r=(0,i.pick)(e,t.inputNames);n=await N(t,r)}const r={...e,...n},s=await W(this,r),o=this.sessions["text"===t?"lm_head":"gen_head"];if(!o)throw new Error(`Unable to find "${o}" generation head`);const a=await N(o,(0,i.pick)(s,o.inputNames));return{...n,...s,...a}}async generate(e){return this._generation_mode="text",super.generate(e)}async generate_images(e){this._generation_mode="image";const t=(e.inputs??e[this.main_input_name]).dims[1],n=(await super.generate(e)).slice(null,[t,null]),r=this.sessions.image_decode,{decoded_image:s}=await N(r,{generated_tokens:n}),o=s.add_(1).mul_(127.5).clamp_(0,255).to("uint8"),a=[];for(const e of o){const t=m.RawImage.fromTensor(e);a.push(t)}return a}}class yd extends oe{constructor({char_logits:e,bpe_logits:t,wp_logits:n}){super(),this.char_logits=e,this.bpe_logits=t,this.wp_logits=n}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class Md extends se{}class xd extends Md{async _call(e){return new yd(await super._call(e))}}class vd extends se{}class Td extends vd{}class kd extends vd{}class Pd extends se{}class $d extends Pd{}class Cd extends Pd{}class Sd extends se{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class Fd extends Sd{_merge_input_ids_with_audio_features(e){const t=e.audio_features.dims.at(-1),n=e.audio_features.view(-1,t);return K({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...e,audio_features:n})}}class Ed extends Fd{}class Id extends se{main_input_name="input_values";forward_params=["input_values"]}class Ad extends oe{constructor({audio_codes:e}){super(),this.audio_codes=e}}class zd extends oe{constructor({audio_values:e}){super(),this.audio_values=e}}class Ld extends Id{async encode(e){return new Ad(await N(this.sessions.encoder_model,e))}async decode(e){return new zd(await N(this.sessions.decoder_model,e))}}class Od extends Id{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Dd extends Id{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Bd extends se{main_input_name="input_values";forward_params=["input_values"]}class Nd extends oe{constructor({audio_codes:e}){super(),this.audio_codes=e}}class Rd extends oe{constructor({audio_values:e}){super(),this.audio_values=e}}class jd extends Bd{async encode(e){return new Nd(await N(this.sessions.encoder_model,e))}async decode(e){return new Rd(await N(this.sessions.decoder_model,e))}}class Vd extends Bd{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Gd extends Bd{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class qd extends se{main_input_name="input_values";forward_params=["input_values"]}class Ud extends qd{async encode(e){return await N(this.sessions.encoder_model,e)}async decode(e){return await N(this.sessions.decoder_model,e)}}class Wd extends qd{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"encoder_model"})}}class Hd extends qd{static async from_pretrained(e,t={}){return super.from_pretrained(e,{...t,model_file_name:t.model_file_name??"decoder_model"})}}class Qd{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:s=null,local_files_only:o=!1,revision:a="main",model_file_name:i=null,subfolder:l="onnx",device:d=null,dtype:u=null,use_external_data_format:c=null,session_options:p={}}={}){const m={progress_callback:t,config:n,cache_dir:s,local_files_only:o,revision:a,model_file_name:i,subfolder:l,device:d,dtype:u,use_external_data_format:c,session_options:p};if(m.config=await r.AutoConfig.from_pretrained(e,m),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const h=m.config.model_type;for(const t of this.MODEL_CLASS_MAPPINGS){let n=t.get(h);if(!n){for(const e of t.values())if(e[0]===h){n=e;break}if(!n)continue}return await n[1].from_pretrained(e,m)}if(this.BASE_IF_FAIL)return Au.has(h)||console.warn(`Unknown model class "${h}", attempting to construct from base class.`),await se.from_pretrained(e,m);throw Error(`Unsupported model type: ${h}`)}}const Kd=new Map([["bert",["BertModel",le]],["neobert",["NeoBertModel",he]],["modernbert",["ModernBertModel",ye]],["nomic_bert",["NomicBertModel",Ce]],["roformer",["RoFormerModel",Fe]],["electra",["ElectraModel",Ve]],["esm",["EsmModel",wt]],["convbert",["ConvBertModel",Oe]],["camembert",["CamembertModel",Qe]],["deberta",["DebertaModel",et]],["deberta-v2",["DebertaV2Model",at]],["mpnet",["MPNetModel",Ct]],["albert",["AlbertModel",Nt]],["distilbert",["DistilBertModel",pt]],["roberta",["RobertaModel",fn]],["xlm",["XLMModel",Mn]],["xlm-roberta",["XLMRobertaModel",$n]],["clap",["ClapModel",Ll]],["clip",["CLIPModel",ar]],["clipseg",["CLIPSegModel",xr]],["chinese_clip",["ChineseCLIPModel",_r]],["siglip",["SiglipModel",pr]],["jina_clip",["JinaCLIPModel",wr]],["mobilebert",["MobileBertModel",vt]],["squeezebert",["SqueezeBertModel",zt]],["wav2vec2",["Wav2Vec2Model",Li]],["wav2vec2-bert",["Wav2Vec2BertModel",el]],["unispeech",["UniSpeechModel",Ui]],["unispeech-sat",["UniSpeechSatModel",Ki]],["hubert",["HubertModel",sl]],["wavlm",["WavLMModel",ll]],["audio-spectrogram-transformer",["ASTModel",An]],["vits",["VitsModel",Nl]],["pyannote",["PyAnnoteModel",Ri]],["wespeaker-resnet",["WeSpeakerResNetModel",Gi]],["detr",["DetrModel",Qo]],["rt_detr",["RTDetrModel",ea]],["rt_detr_v2",["RTDetrV2Model",sa]],["rf_detr",["RFDetrModel",la]],["d_fine",["DFineModel",pa]],["table-transformer",["TableTransformerModel",fa]],["vit",["ViTModel",uo]],["ijepa",["IJepaModel",mo]],["pvt",["PvtModel",wo]],["vit_msn",["ViTMSNModel",vo]],["vit_mae",["ViTMAEModel",Mo]],["groupvit",["GroupViTModel",Po]],["fastvit",["FastViTModel",Co]],["mobilevit",["MobileViTModel",Ao]],["mobilevitv2",["MobileViTV2Model",Oo]],["owlvit",["OwlViTModel",No]],["owlv2",["Owlv2Model",Vo]],["beit",["BeitModel",Uo]],["deit",["DeiTModel",ba]],["hiera",["HieraModel",xa]],["convnext",["ConvNextModel",si]],["convnextv2",["ConvNextV2Model",ii]],["dinov2",["Dinov2Model",ui]],["dinov2_with_registers",["Dinov2WithRegistersModel",mi]],["dinov3_vit",["DINOv3ViTModel",_i]],["dinov3_convnext",["DINOv3ConvNextModel",wi]],["resnet",["ResNetModel",ka]],["swin",["SwinModel",Ca]],["swin2sr",["Swin2SRModel",Ia]],["donut-swin",["DonutSwinModel",ni]],["yolos",["YolosModel",xi]],["dpt",["DPTModel",La]],["glpn",["GLPNModel",Za]],["hifigan",["SpeechT5HifiGan",bl]],["efficientnet",["EfficientNetModel",Ql]],["decision_transformer",["DecisionTransformerModel",gd]],["patchtst",["PatchTSTForPrediction",Td]],["patchtsmixer",["PatchTSMixerForPrediction",$d]],["mobilenet_v1",["MobileNetV1Model",td]],["mobilenet_v2",["MobileNetV2Model",od]],["mobilenet_v3",["MobileNetV3Model",dd]],["mobilenet_v4",["MobileNetV4Model",md]],["maskformer",["MaskFormerModel",Xa]],["mgp-str",["MgpstrForSceneTextRecognition",xd]],["style_text_to_speech_2",["StyleTextToSpeech2Model",hl]]]),Xd=new Map([["t5",["T5Model",qt]],["longt5",["LongT5Model",Ht]],["mt5",["MT5Model",Xt]],["bart",["BartModel",Zt]],["mbart",["MBartModel",rn]],["marian",["MarianModel",Si]],["whisper",["WhisperModel",On]],["m2m_100",["M2M100Model",Ii]],["blenderbot",["BlenderbotModel",dn]],["blenderbot-small",["BlenderbotSmallModel",pn]]]),Jd=new Map([["mimi",["MimiModel",Ld]],["dac",["DacModel",jd]],["snac",["SnacModel",Ud]]]),Yd=new Map([["bloom",["BloomModel",eo]],["jais",["JAISModel",Cr]],["gpt2",["GPT2Model",kr]],["gptj",["GPTJModel",Dr]],["gpt_bigcode",["GPTBigCodeModel",Rr]],["gpt_neo",["GPTNeoModel",Er]],["gpt_neox",["GPTNeoXModel",zr]],["codegen",["CodeGenModel",Gr]],["llama",["LlamaModel",Wr]],["arcee",["ArceeModel",Kr]],["lfm2",["Lfm2Model",Yr]],["smollm3",["SmolLM3Model",ts]],["exaone",["ExaoneModel",us]],["olmo",["OlmoModel",_s]],["olmo2",["Olmo2Model",bs]],["mobilellm",["MobileLLMModel",ms]],["granite",["GraniteModel",xs]],["cohere",["CohereModel",ks]],["gemma",["GemmaModel",Cs]],["gemma2",["Gemma2Model",Es]],["gemma3_text",["Gemma3Model",zs]],["helium",["HeliumModel",ss]],["glm",["GlmModel",is]],["openelm",["OpenELMModel",Ds]],["qwen2",["Qwen2Model",Rs]],["qwen3",["Qwen3Model",Gs]],["phi",["PhiModel",Qs]],["phi3",["Phi3Model",Js]],["mpt",["MptModel",ro]],["opt",["OPTModel",ao]],["mistral",["MistralModel",vl]],["ernie4_5",["Ernie4_5_Model",Pl]],["starcoder2",["Starcoder2Model",Sl]],["falcon",["FalconModel",Il]],["stablelm",["StableLmModel",Ul]],["modernbert-decoder",["ModernBertDecoderModel",ke]]]),Zd=new Map([["speecht5",["SpeechT5ForSpeechToText",gl]],["whisper",["WhisperForConditionalGeneration",Dn]],["lite-whisper",["LiteWhisperForConditionalGeneration",Bn]],["moonshine",["MoonshineForConditionalGeneration",jn]]]),eu=new Map([["speecht5",["SpeechT5ForTextToSpeech",wl]]]),tu=new Map([["vits",["VitsModel",Nl]],["musicgen",["MusicgenForConditionalGeneration",Zl]]]),nu=new Map([["bert",["BertForSequenceClassification",ue]],["neobert",["NeoBertForSequenceClassification",_e]],["modernbert",["ModernBertForSequenceClassification",xe]],["roformer",["RoFormerForSequenceClassification",Ie]],["electra",["ElectraForSequenceClassification",qe]],["esm",["EsmForSequenceClassification",yt]],["convbert",["ConvBertForSequenceClassification",Be]],["camembert",["CamembertForSequenceClassification",Xe]],["deberta",["DebertaForSequenceClassification",nt]],["deberta-v2",["DebertaV2ForSequenceClassification",lt]],["mpnet",["MPNetForSequenceClassification",Ft]],["albert",["AlbertForSequenceClassification",Rt]],["distilbert",["DistilBertForSequenceClassification",mt]],["roberta",["RobertaForSequenceClassification",gn]],["xlm",["XLMForSequenceClassification",vn]],["xlm-roberta",["XLMRobertaForSequenceClassification",Sn]],["bart",["BartForSequenceClassification",tn]],["mbart",["MBartForSequenceClassification",on]],["mobilebert",["MobileBertForSequenceClassification",kt]],["squeezebert",["SqueezeBertForSequenceClassification",Ot]]]),ru=new Map([["bert",["BertForTokenClassification",ce]],["neobert",["NeoBertForTokenClassification",ge]],["modernbert",["ModernBertForTokenClassification",ve]],["roformer",["RoFormerForTokenClassification",Ae]],["electra",["ElectraForTokenClassification",Ue]],["esm",["EsmForTokenClassification",Mt]],["convbert",["ConvBertForTokenClassification",Ne]],["camembert",["CamembertForTokenClassification",Je]],["deberta",["DebertaForTokenClassification",rt]],["deberta-v2",["DebertaV2ForTokenClassification",dt]],["mpnet",["MPNetForTokenClassification",Et]],["distilbert",["DistilBertForTokenClassification",ht]],["roberta",["RobertaForTokenClassification",wn]],["xlm",["XLMForTokenClassification",Tn]],["xlm-roberta",["XLMRobertaForTokenClassification",Fn]]]),su=new Map([["t5",["T5ForConditionalGeneration",Ut]],["longt5",["LongT5ForConditionalGeneration",Qt]],["mt5",["MT5ForConditionalGeneration",Jt]],["bart",["BartForConditionalGeneration",en]],["mbart",["MBartForConditionalGeneration",sn]],["marian",["MarianMTModel",Fi]],["m2m_100",["M2M100ForConditionalGeneration",Ai]],["blenderbot",["BlenderbotForConditionalGeneration",un]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",mn]]]),ou=new Map([["bloom",["BloomForCausalLM",to]],["gpt2",["GPT2LMHeadModel",Pr]],["jais",["JAISLMHeadModel",Sr]],["gptj",["GPTJForCausalLM",Br]],["gpt_bigcode",["GPTBigCodeForCausalLM",jr]],["gpt_neo",["GPTNeoForCausalLM",Ir]],["gpt_neox",["GPTNeoXForCausalLM",Lr]],["codegen",["CodeGenForCausalLM",qr]],["llama",["LlamaForCausalLM",Hr]],["arcee",["ArceeForCausalLM",Xr]],["lfm2",["Lfm2ForCausalLM",Zr]],["smollm3",["SmolLM3ForCausalLM",ns]],["exaone",["ExaoneForCausalLM",cs]],["olmo",["OlmoForCausalLM",gs]],["olmo2",["Olmo2ForCausalLM",ys]],["mobilellm",["MobileLLMForCausalLM",hs]],["granite",["GraniteForCausalLM",vs]],["cohere",["CohereForCausalLM",Ps]],["gemma",["GemmaForCausalLM",Ss]],["gemma2",["Gemma2ForCausalLM",Is]],["gemma3_text",["Gemma3ForCausalLM",Ls]],["helium",["HeliumForCausalLM",os]],["glm",["GlmForCausalLM",ls]],["openelm",["OpenELMForCausalLM",Bs]],["qwen2",["Qwen2ForCausalLM",js]],["qwen3",["Qwen3ForCausalLM",qs]],["phi",["PhiForCausalLM",Ks]],["phi3",["Phi3ForCausalLM",Ys]],["mpt",["MptForCausalLM",so]],["opt",["OPTForCausalLM",io]],["mbart",["MBartForCausalLM",an]],["mistral",["MistralForCausalLM",Tl]],["ernie4_5",["Ernie4_5_ForCausalLM",$l]],["starcoder2",["Starcoder2ForCausalLM",Fl]],["falcon",["FalconForCausalLM",Al]],["trocr",["TrOCRForCausalLM",Ml]],["stablelm",["StableLmForCausalLM",Wl]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Pe]],["phi3_v",["Phi3VForCausalLM",sr]]]),au=new Map([["multi_modality",["MultiModalityCausalLM",bd]]]),iu=new Map([["bert",["BertForMaskedLM",de]],["neobert",["NeoBertForMaskedLM",fe]],["modernbert",["ModernBertForMaskedLM",Me]],["roformer",["RoFormerForMaskedLM",Ee]],["electra",["ElectraForMaskedLM",Ge]],["esm",["EsmForMaskedLM",bt]],["convbert",["ConvBertForMaskedLM",De]],["camembert",["CamembertForMaskedLM",Ke]],["deberta",["DebertaForMaskedLM",tt]],["deberta-v2",["DebertaV2ForMaskedLM",it]],["mpnet",["MPNetForMaskedLM",St]],["albert",["AlbertForMaskedLM",Vt]],["distilbert",["DistilBertForMaskedLM",_t]],["roberta",["RobertaForMaskedLM",_n]],["xlm",["XLMWithLMHeadModel",xn]],["xlm-roberta",["XLMRobertaForMaskedLM",Cn]],["mobilebert",["MobileBertForMaskedLM",Tt]],["squeezebert",["SqueezeBertForMaskedLM",Lt]]]),lu=new Map([["bert",["BertForQuestionAnswering",pe]],["neobert",["NeoBertForQuestionAnswering",we]],["roformer",["RoFormerForQuestionAnswering",ze]],["electra",["ElectraForQuestionAnswering",We]],["convbert",["ConvBertForQuestionAnswering",Re]],["camembert",["CamembertForQuestionAnswering",Ye]],["deberta",["DebertaForQuestionAnswering",st]],["deberta-v2",["DebertaV2ForQuestionAnswering",ut]],["mpnet",["MPNetForQuestionAnswering",It]],["albert",["AlbertForQuestionAnswering",jt]],["distilbert",["DistilBertForQuestionAnswering",ft]],["roberta",["RobertaForQuestionAnswering",bn]],["xlm",["XLMForQuestionAnswering",kn]],["xlm-roberta",["XLMRobertaForQuestionAnswering",En]],["mobilebert",["MobileBertForQuestionAnswering",Pt]],["squeezebert",["SqueezeBertForQuestionAnswering",Dt]]]),du=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Vn]],["idefics3",["Idefics3ForConditionalGeneration",tr]],["smolvlm",["SmolVLMForConditionalGeneration",nr]]]),uu=new Map([["llava",["LlavaForConditionalGeneration",qn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Un]],["moondream1",["Moondream1ForConditionalGeneration",Wn]],["florence2",["Florence2ForConditionalGeneration",Qn]],["qwen2-vl",["Qwen2VLForConditionalGeneration",Ws]],["idefics3",["Idefics3ForConditionalGeneration",tr]],["smolvlm",["SmolVLMForConditionalGeneration",nr]],["paligemma",["PaliGemmaForConditionalGeneration",Xn]],["llava_qwen2",["LlavaQwen2ForCausalLM",Jn]],["gemma3n",["Gemma3nForConditionalGeneration",Zn]]]),cu=new Map([["ultravox",["UltravoxModel",Fd]],["voxtral",["VoxtralForConditionalGeneration",Ed]]]),pu=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Vn]]]),mu=new Map([["vit",["ViTForImageClassification",co]],["ijepa",["IJepaForImageClassification",ho]],["pvt",["PvtForImageClassification",bo]],["vit_msn",["ViTMSNForImageClassification",To]],["fastvit",["FastViTForImageClassification",So]],["mobilevit",["MobileViTForImageClassification",zo]],["mobilevitv2",["MobileViTV2ForImageClassification",Do]],["beit",["BeitForImageClassification",Wo]],["deit",["DeiTForImageClassification",ya]],["hiera",["HieraForImageClassification",va]],["convnext",["ConvNextForImageClassification",oi]],["convnextv2",["ConvNextV2ForImageClassification",li]],["dinov2",["Dinov2ForImageClassification",ci]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",hi]],["resnet",["ResNetForImageClassification",Pa]],["swin",["SwinForImageClassification",Sa]],["segformer",["SegformerForImageClassification",Vl]],["efficientnet",["EfficientNetForImageClassification",Kl]],["mobilenet_v1",["MobileNetV1ForImageClassification",nd]],["mobilenet_v2",["MobileNetV2ForImageClassification",ad]],["mobilenet_v3",["MobileNetV3ForImageClassification",ud]],["mobilenet_v4",["MobileNetV4ForImageClassification",hd]]]),hu=new Map([["detr",["DetrForObjectDetection",Ko]],["rt_detr",["RTDetrForObjectDetection",ta]],["rt_detr_v2",["RTDetrV2ForObjectDetection",oa]],["rf_detr",["RFDetrForObjectDetection",da]],["d_fine",["DFineForObjectDetection",ma]],["table-transformer",["TableTransformerForObjectDetection",_a]],["yolos",["YolosForObjectDetection",vi]]]),fu=new Map([["owlvit",["OwlViTForObjectDetection",Ro]],["owlv2",["Owlv2ForObjectDetection",Go]],["grounding-dino",["GroundingDinoForObjectDetection",yi]]]),_u=new Map([["detr",["DetrForSegmentation",Xo]],["clipseg",["CLIPSegForImageSegmentation",vr]]]),gu=new Map([["segformer",["SegformerForSemanticSegmentation",Gl]],["sapiens",["SapiensForSemanticSegmentation",Ra]],["swin",["SwinForSemanticSegmentation",Fa]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",rd]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",id]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",cd]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",fd]]]),wu=new Map([["detr",["DetrForSegmentation",Xo]],["maskformer",["MaskFormerForInstanceSegmentation",Ja]]]),bu=new Map([["sam",["SamModel",Pi]]]),yu=new Map([["wav2vec2",["Wav2Vec2ForCTC",Oi]],["wav2vec2-bert",["Wav2Vec2BertForCTC",tl]],["unispeech",["UniSpeechForCTC",Wi]],["unispeech-sat",["UniSpeechSatForCTC",Xi]],["wavlm",["WavLMForCTC",dl]],["hubert",["HubertForCTC",ol]]]),Mu=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",Di]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",nl]],["unispeech",["UniSpeechForSequenceClassification",Hi]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Ji]],["wavlm",["WavLMForSequenceClassification",ul]],["hubert",["HubertForSequenceClassification",al]],["audio-spectrogram-transformer",["ASTForAudioClassification",zn]]]),xu=new Map([["wavlm",["WavLMForXVector",cl]]]),vu=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",Yi]],["wavlm",["WavLMForAudioFrameClassification",pl]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",Bi]],["pyannote",["PyAnnoteForAudioFrameClassification",ji]]]),Tu=new Map([["vitmatte",["VitMatteForImageMatting",Eo]]]),ku=new Map([["patchtst",["PatchTSTForPrediction",kd]],["patchtsmixer",["PatchTSMixerForPrediction",Cd]]]),Pu=new Map([["swin2sr",["Swin2SRForImageSuperResolution",Aa]]]),$u=new Map([["dpt",["DPTForDepthEstimation",Oa]],["depth_anything",["DepthAnythingForDepthEstimation",Ba]],["glpn",["GLPNForDepthEstimation",ei]],["sapiens",["SapiensForDepthEstimation",ja]],["depth_pro",["DepthProForDepthEstimation",qa]],["metric3d",["Metric3DForDepthEstimation",Wa]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Qa]]]),Cu=new Map([["sapiens",["SapiensForNormalEstimation",Va]]]),Su=new Map([["vitpose",["VitPoseForPoseEstimation",_o]]]),Fu=new Map([["clip",["CLIPVisionModelWithProjection",ur]],["siglip",["SiglipVisionModel",hr]],["jina_clip",["JinaCLIPVisionModel",yr]]]),Eu=[[Kd,y],[Xd,M],[Yd,T],[Jd,E],[nu,y],[ru,y],[su,x],[Zd,x],[ou,T],[au,C],[iu,y],[lu,y],[du,v],[uu,P],[cu,F],[mu,y],[_u,y],[wu,y],[gu,y],[Tu,y],[ku,y],[Pu,y],[$u,y],[Cu,y],[Su,y],[hu,y],[fu,y],[bu,k],[yu,y],[Mu,y],[eu,x],[tu,y],[xu,y],[vu,y],[Fu,y]];for(const[e,t]of Eu)for(const[n,r]of e.values())A.set(n,t),L.set(r,n),z.set(n,r);const Iu=[["MusicgenForConditionalGeneration",Zl,$],["Phi3VForCausalLM",sr,S],["CLIPTextModelWithProjection",lr,y],["SiglipTextModel",mr,y],["JinaCLIPTextModel",br,y],["ClapTextModelWithProjection",Ol,y],["ClapAudioModelWithProjection",Dl,y],["DacEncoderModel",Vd,y],["DacDecoderModel",Gd,y],["MimiEncoderModel",Od,y],["MimiDecoderModel",Dd,y],["SnacEncoderModel",Wd,y],["SnacDecoderModel",Hd,y],["Gemma3nForConditionalGeneration",Zn,I]];for(const[e,t,n]of Iu)A.set(e,n),L.set(t,e),z.set(e,t);const Au=new Map([["modnet",_u],["birefnet",_u],["isnet",_u],["ben",_u]]);for(const[e,t]of Au.entries())t.set(e,["PreTrainedModel",se]),A.set(e,y),L.set(se,e),z.set(e,se);class zu extends Qd{static MODEL_CLASS_MAPPINGS=Eu.map((e=>e[0]));static BASE_IF_FAIL=!0}class Lu extends Qd{static MODEL_CLASS_MAPPINGS=[nu]}class Ou extends Qd{static MODEL_CLASS_MAPPINGS=[ru]}class Du extends Qd{static MODEL_CLASS_MAPPINGS=[su]}class Bu extends Qd{static MODEL_CLASS_MAPPINGS=[Zd]}class Nu extends Qd{static MODEL_CLASS_MAPPINGS=[eu]}class Ru extends Qd{static MODEL_CLASS_MAPPINGS=[tu]}class ju extends Qd{static MODEL_CLASS_MAPPINGS=[ou]}class Vu extends Qd{static MODEL_CLASS_MAPPINGS=[iu]}class Gu extends Qd{static MODEL_CLASS_MAPPINGS=[lu]}class qu extends Qd{static MODEL_CLASS_MAPPINGS=[du]}class Uu extends Qd{static MODEL_CLASS_MAPPINGS=[mu]}class Wu extends Qd{static MODEL_CLASS_MAPPINGS=[_u]}class Hu extends Qd{static MODEL_CLASS_MAPPINGS=[gu]}class Qu extends Qd{static MODEL_CLASS_MAPPINGS=[wu]}class Ku extends Qd{static MODEL_CLASS_MAPPINGS=[hu]}class Xu extends Qd{static MODEL_CLASS_MAPPINGS=[fu]}class Ju extends Qd{static MODEL_CLASS_MAPPINGS=[bu]}class Yu extends Qd{static MODEL_CLASS_MAPPINGS=[yu]}class Zu extends Qd{static MODEL_CLASS_MAPPINGS=[Mu]}class ec extends Qd{static MODEL_CLASS_MAPPINGS=[xu]}class tc extends Qd{static MODEL_CLASS_MAPPINGS=[vu]}class nc extends Qd{static MODEL_CLASS_MAPPINGS=[pu]}class rc extends Qd{static MODEL_CLASS_MAPPINGS=[Tu]}class sc extends Qd{static MODEL_CLASS_MAPPINGS=[Pu]}class oc extends Qd{static MODEL_CLASS_MAPPINGS=[$u]}class ac extends Qd{static MODEL_CLASS_MAPPINGS=[Cu]}class ic extends Qd{static MODEL_CLASS_MAPPINGS=[Su]}class lc extends Qd{static MODEL_CLASS_MAPPINGS=[Fu]}class dc extends Qd{static MODEL_CLASS_MAPPINGS=[uu]}class uc extends Qd{static MODEL_CLASS_MAPPINGS=[cu]}class cc extends oe{constructor({logits:e,past_key_values:t,encoder_outputs:n,decoder_attentions:r=null,cross_attentions:s=null}){super(),this.logits=e,this.past_key_values=t,this.encoder_outputs=n,this.decoder_attentions=r,this.cross_attentions=s}}class pc extends oe{constructor({logits:e,...t}){super(),this.logits=e;const n=Object.values(t);n.length>0&&(this.attentions=n)}}class mc extends oe{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class hc extends oe{constructor({logits:e}){super(),this.logits=e}}class fc extends oe{constructor({logits:e}){super(),this.logits=e}}class _c extends oe{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class gc extends oe{constructor({logits:e}){super(),this.logits=e}}class wc extends oe{constructor({logits:e,past_key_values:t}){super(),this.logits=e,this.past_key_values=t}}class bc extends oe{constructor({alphas:e}){super(),this.alphas=e}}class yc extends oe{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}},"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){(0,r.validate_audio_inputs)(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}},"./src/models/auto/feature_extraction_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoFeatureExtractor:()=>a});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),o=(n("./src/base/feature_extraction_utils.js"),n("./src/models/feature_extractors.js"));class a{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.FEATURE_EXTRACTOR_NAME,!0,t),a=n.feature_extractor_type,i=o[a];if(!i)throw new Error(`Unknown feature_extractor_type: '${a}'. Please report this at ${r.GITHUB_ISSUE_URL}.`);return new i(n)}}},"./src/models/auto/image_processing_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoImageProcessor:()=>i});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),o=n("./src/base/image_processors_utils.js"),a=n("./src/models/image_processors.js");class i{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),i=n.image_processor_type??n.feature_extractor_type;let l=a[i?.replace(/Fast$/,"")];return l||(void 0!==i&&console.warn(`Image processor type '${i}' not found, assuming base ImageProcessor. Please report this at ${r.GITHUB_ISSUE_URL}.`),l=o.ImageProcessor),new l(n)}}},"./src/models/auto/processing_auto.js":(e,t,n)=>{n.r(t),n.d(t,{AutoProcessor:()=>d});var r=n("./src/utils/constants.js"),s=n("./src/utils/hub.js"),o=n("./src/base/processing_utils.js"),a=n("./src/models/processors.js"),i=n("./src/models/image_processors.js"),l=n("./src/models/feature_extractors.js");class d{static async from_pretrained(e,t={}){const n=await(0,s.getModelJSON)(e,r.IMAGE_PROCESSOR_NAME,!0,t),{image_processor_type:d,feature_extractor_type:u,processor_class:c}=n;if(c&&a[c])return a[c].from_pretrained(e,t);if(!d&&!u)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const p={};if(d){const e=i[d.replace(/Fast$/,"")];if(!e)throw new Error(`Unknown image_processor_type: '${d}'.`);p.image_processor=new e(n)}if(u){const e=i[u];if(e)p.image_processor=new e(n);else{const e=l[u];if(!e)throw new Error(`Unknown feature_extractor_type: '${u}'.`);p.feature_extractor=new e(n)}}return new o.Processor({},p,null)}}},"./src/models/beit/image_processing_beit.js":(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/bit/image_processing_bit.js":(e,t,n)=>{n.r(t),n.d(t,{BitImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/chinese_clip/image_processing_chinese_clip.js":(e,t,n)=>{n.r(t),n.d(t,{ChineseCLIPFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/clap/feature_extraction_clap.js":(e,t,n)=>{n.r(t),n.d(t,{ClapFeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e),this.mel_filters=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,s.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let s,o=!1;const a=e.length-t;if(a>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{o=!0;const n=Math.floor(Math.random()*(a+1));e=e.subarray(n,n+t),s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(a<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-a;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);s=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return s.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return(0,s.spectrogram)(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){(0,r.validate_audio_inputs)(e,"ClapFeatureExtractor");return{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}},"./src/models/clip/image_processing_clip.js":(e,t,n)=>{n.r(t),n.d(t,{CLIPFeatureExtractor:()=>o,CLIPImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/convnext/image_processing_convnext.js":(e,t,n)=>{n.r(t),n.d(t,{ConvNextFeatureExtractor:()=>o,ConvNextImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,s]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,s,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class o extends s{}},"./src/models/dac/feature_extraction_dac.js":(e,t,n)=>{n.r(t),n.d(t,{DacFeatureExtractor:()=>s});var r=n("./src/models/encodec/feature_extraction_encodec.js");class s extends r.EncodecFeatureExtractor{}},"./src/models/deit/image_processing_deit.js":(e,t,n)=>{n.r(t),n.d(t,{DeiTFeatureExtractor:()=>o,DeiTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/detr/image_processing_detr.js":(e,t,n)=>{n.r(t),n.d(t,{DetrFeatureExtractor:()=>a,DetrImageProcessor:()=>o});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=(0,s.full)(n,1n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class a extends o{}},"./src/models/dinov3_vit/image_processing_dinov3_vit.js":(e,t,n)=>{n.r(t),n.d(t,{DINOv3ViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/donut/image_processing_donut.js":(e,t,n)=>{n.r(t),n.d(t,{DonutFeatureExtractor:()=>o,DonutImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,o,a]=t;let i=this.image_mean;Array.isArray(this.image_mean)||(i=new Array(a).fill(i));let l=this.image_std;Array.isArray(l)||(l=new Array(a).fill(i));const d=i.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,n,{center:!0,constant_values:d,...r})}}class o extends s{}},"./src/models/dpt/image_processing_dpt.js":(e,t,n)=>{n.r(t),n.d(t,{DPTFeatureExtractor:()=>o,DPTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/efficientnet/image_processing_efficientnet.js":(e,t,n)=>{n.r(t),n.d(t,{EfficientNetImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}},"./src/models/encodec/feature_extraction_encodec.js":(e,t,n)=>{n.r(t),n.d(t,{EncodecFeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class o extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"EncodecFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=this.config.feature_size;if(e.length%t!=0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${t}).`);const n=[1,t,e.length/t];return{input_values:new s.Tensor("float32",e,n)}}}},"./src/models/feature_extractors.js":(e,t,n)=>{n.r(t),n.d(t,{ASTFeatureExtractor:()=>r.ASTFeatureExtractor,ClapFeatureExtractor:()=>o.ClapFeatureExtractor,DacFeatureExtractor:()=>a.DacFeatureExtractor,EncodecFeatureExtractor:()=>s.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>i.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>_.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>u.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>c.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>p.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>h.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>f.WhisperFeatureExtractor});var r=n("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),s=n("./src/models/encodec/feature_extraction_encodec.js"),o=n("./src/models/clap/feature_extraction_clap.js"),a=n("./src/models/dac/feature_extraction_dac.js"),i=n("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=n("./src/models/moonshine/feature_extraction_moonshine.js"),d=n("./src/models/pyannote/feature_extraction_pyannote.js"),u=n("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),c=n("./src/models/snac/feature_extraction_snac.js"),p=n("./src/models/speecht5/feature_extraction_speecht5.js"),m=n("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),h=n("./src/models/wespeaker/feature_extraction_wespeaker.js"),f=n("./src/models/whisper/feature_extraction_whisper.js"),_=n("./src/base/image_processors_utils.js")},"./src/models/florence2/processing_florence2.js":(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;constructor(e,t,n){super(e,t,n);const{tasks_answer_post_processing_type:r,task_prompts_without_inputs:s,task_prompts_with_input:o}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(r??{})),this.task_prompts_without_inputs=new Map(Object.entries(s??{})),this.task_prompts_with_input=new Map(Object.entries(o??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let s;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":s=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const o="ocr"===r?"quad_boxes":"bboxes",a=e.matchAll(this.regexes[o]),i=[],l=[];for(const[e,t,...r]of a)i.push(t?t.trim():i.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));s={labels:i,[o]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:s}}async _call(e,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...await this.image_processor(e,n),...t?this.tokenizer(this.construct_prompts(t),n):{}}}}},"./src/models/gemma3n/feature_extraction_gemma3n.js":(e,t,n)=>{n.r(t),n.d(t,{Gemma3nAudioFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),o=n("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const{fft_length:t,feature_size:n,min_frequency:r,max_frequency:s,sampling_rate:a,frame_length:i}=this.config,l=(0,o.mel_filter_bank)(Math.floor(1+t/2),n,r,s,a,null,"htk",!1);this.mel_filters=l,this.window=(0,o.window_function)(i,"hann")}async _extract_fbank_features(e,t){return(0,o.spectrogram)(e,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(e,{max_length:t=48e4,truncation:n=!0,padding:o=!0,pad_to_multiple_of:a=128}={}){if((0,r.validate_audio_inputs)(e,"Gemma3nAudioFeatureExtractor"),n&&e.length>t&&(e=e.slice(0,t)),o&&e.length%a!=0){const t=a-e.length%a,n=new Float64Array(e.length+t);n.set(e),0!==this.config.padding_value&&n.fill(this.config.padding_value,e.length),e=n}const i=await this._extract_fbank_features(e,this.config.max_length),l=(0,s.full)([1,i.dims[0]],!0);return{input_features:i.unsqueeze_(0),input_features_mask:l}}}},"./src/models/gemma3n/processing_gemma3n.js":(e,t,n)=>{n.r(t),n.d(t,{Gemma3nProcessor:()=>i});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/models/auto/feature_extraction_auto.js"),a=n("./src/tokenizers.js");n("./src/utils/image.js"),n("./src/utils/audio.js");class i extends r.Processor{static image_processor_class=s.AutoImageProcessor;static feature_extractor_class=o.AutoFeatureExtractor;static tokenizer_class=a.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(e,t,n){super(e,t,n),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:r,boa_token:s,audio_token:o,eoa_token:a,image_token_id:i,boi_token:l,image_token:d,eoi_token:u}=this.tokenizer.config;this.audio_token_id=r,this.boa_token=s,this.audio_token=o;const c=o.repeat(this.audio_seq_length);this.full_audio_sequence=`\n\n${s}${c}${a}\n\n`,this.image_token_id=i,this.boi_token=l,this.image_token=d;const p=d.repeat(this.image_seq_length);this.full_image_sequence=`\n\n${l}${p}${u}\n\n`}async _call(e,t=null,n=null,r={}){let s,o;return"string"==typeof e&&(e=[e]),n&&(s=await this.feature_extractor(n,r),e=e.map((e=>e.replaceAll(this.audio_token,this.full_audio_sequence)))),t&&(o=await this.image_processor(t,r),e=e.map((e=>e.replaceAll(this.image_token,this.full_image_sequence)))),{...this.tokenizer(e,r),...o,...s}}}},"./src/models/glpn/image_processing_glpn.js":(e,t,n)=>{n.r(t),n.d(t,{GLPNFeatureExtractor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/grounding_dino/image_processing_grounding_dino.js":(e,t,n)=>{n.r(t),n.d(t,{GroundingDinoImageProcessor:()=>o});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e){const t=await super._call(e),n=t.pixel_values.dims,r=(0,s.ones)([n[0],n[2],n[3]]);return{...t,pixel_mask:r}}}},"./src/models/grounding_dino/processing_grounding_dino.js":(e,t,n)=>{n.r(t),n.d(t,{GroundingDinoProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js"),a=n("./src/base/image_processors_utils.js");function i(e,t){const n=e.dims.at(-1)-1,r=e.tolist();r.fill(!1,0,1),r.fill(!1,n);const s=t.tolist();return r.map(((e,t)=>e?t:null)).filter((e=>null!==e)).map((e=>s[e]))}class l extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;async _call(e,t,n={}){const r=e?await this.image_processor(e,n):{};return{...t?this.tokenizer(t,n):{},...r}}post_process_grounded_object_detection(e,t,{box_threshold:n=.25,text_threshold:r=.25,target_sizes:s=null}={}){const{logits:o,pred_boxes:l}=e,d=o.dims[0];if(null!==s&&s.length!==d)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const u=o.dims.at(1),c=o.sigmoid(),p=c.max(-1).tolist(),m=l.tolist().map((e=>e.map((e=>(0,a.center_to_corners_format)(e))))),h=[];for(let e=0;e<d;++e){const o=null!==s?s[e]:null;null!==o&&(m[e]=m[e].map((e=>e.map(((e,t)=>e*o[(t+1)%2])))));const a=p[e],l=[],d=[],f=[];for(let s=0;s<u;++s){const o=a[s];if(o<=n)continue;const u=m[e][s],p=c[e][s];l.push(o),f.push(u);const h=i(p.gt(r),t[e]);d.push(h)}h.push({scores:l,boxes:f,labels:this.batch_decode(d)})}return h}}},"./src/models/idefics3/image_processing_idefics3.js":(e,t,n)=>{n.r(t),n.d(t,{Idefics3ImageProcessor:()=>o});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class o extends r.ImageProcessor{constructor(e){super(e),this.do_image_splitting=e.do_image_splitting??!0,this.max_image_size=e.max_image_size}get_resize_for_vision_encoder(e,t){let[n,r]=e.dims.slice(-2);const s=r/n;return r>=n?(r=Math.ceil(r/t)*t,n=Math.floor(r/s),n=Math.ceil(n/t)*t):(n=Math.ceil(n/t)*t,r=Math.floor(n*s),r=Math.ceil(r/t)*t),{height:n,width:r}}async _call(e,{do_image_splitting:t=null,return_row_col_info:n=!1}={}){let r;if(Array.isArray(e)){if(0===e.length||!e[0])throw new Error("No images provided.");r=Array.isArray(e[0])?e:[e]}else r=[[e]];let o=[],a=[],i=[];const l=[],d=[];for(const e of r){let n=await Promise.all(e.map((e=>this.preprocess(e))));l.push(...n.map((e=>e.original_size))),d.push(...n.map((e=>e.reshaped_input_size))),n.forEach((e=>e.pixel_values.unsqueeze_(0)));const{longest_edge:r}=this.max_image_size;let u;if(t??this.do_image_splitting){let e=new Array(n.length),t=new Array(n.length);u=await Promise.all(n.map((async(n,o)=>{const a=this.get_resize_for_vision_encoder(n.pixel_values,r),i=await(0,s.interpolate_4d)(n.pixel_values,{size:[a.height,a.width]}),{frames:l,num_splits_h:d,num_splits_w:u}=await this.split_image(i,this.max_image_size);return e[o]=d,t[o]=u,(0,s.cat)(l,0)}))),a.push(e),i.push(t)}else{const e=[r,r];u=await Promise.all(n.map((t=>(0,s.interpolate_4d)(t.pixel_values,{size:e})))),a.push(new Array(n.length).fill(0)),i.push(new Array(n.length).fill(0))}o.push((0,s.cat)(u,0))}const u=o.length,[c,p,m,h]=o[0].dims;let f,_;if(1===u)f=o[0].unsqueeze_(0),_=(0,s.full)([u,c,m,h],!0);else{const e=Math.max(...o.map((e=>e.dims.at(0))));_=(0,s.full)([u,e,m,h],!0);const t=_.data,n=e*m*h;for(let r=0;r<u;++r){const a=o[r].dims[0];if(a<e){o[r]=(0,s.cat)([o[r],(0,s.full)([e-a,p,m,h],0)],0);const i=r*n+a*m*h,l=(r+1)*n;t.fill(!1,i,l)}}f=(0,s.stack)(o,0)}return{pixel_values:f,pixel_attention_mask:_,original_sizes:l,reshaped_input_sizes:d,...n?{rows:a,cols:i}:{}}}async split_image(e,{longest_edge:t}){const n=t,r=t,o=[],[a,i]=e.dims.slice(-2);let l=0,d=0;if(a>n||i>r){l=Math.ceil(a/n),d=Math.ceil(i/r);const t=Math.ceil(a/l),u=Math.ceil(i/d);for(let n=0;n<l;++n)for(let r=0;r<d;++r){let c,p,m,h;n===l-1?(p=a-t,h=a):(p=n*t,h=(n+1)*t),r===d-1?(c=i-u,m=i):(c=r*u,m=(r+1)*u);const f=[p,c],_=[h,m],g=await(0,s.slice)(e,f,_,[2,3]);o.push(g)}const c=n,p=r;a===c&&i===p||(e=await(0,s.interpolate_4d)(e,{size:[c,p]}))}return o.push(e),{frames:o,num_splits_h:l,num_splits_w:d}}}},"./src/models/idefics3/processing_idefics3.js":(e,t,n)=>{n.r(t),n.d(t,{Idefics3Processor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js"),a=(n("./src/utils/image.js"),n("./src/utils/core.js"));function i(e,t,n,r,s,o){return 0===e&&0===t?function(e,t,n,r){return`${t}${r}`+n.repeat(e)+`${t}`}(n,r,s,o):function(e,t,n,r,s,o){let a="";for(let o=0;o<t;++o){for(let t=0;t<n;++t)a+=r+`<row_${o+1}_col_${t+1}>`+s.repeat(e);a+="\n"}return a+=`\n${r}${o}`+s.repeat(e)+`${r}`,a}(n,e,t,r,s,o)}class l extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(e,t=null,n={}){let r;n.return_row_col_info??=!0,t&&(r=await this.image_processor(t,n)),Array.isArray(e)||(e=[e]);const s=r.rows??[new Array(e.length).fill(0)],o=r.cols??[new Array(e.length).fill(0)],l=this.config.image_seq_len,d=[],u=[];for(let t=0;t<e.length;++t){const n=e[t],r=s[t],c=o[t];d.push((0,a.count)(n,this.image_token));const p=r.map(((e,t)=>i(e,c[t],l,this.fake_image_token,this.image_token,this.global_img_token))),m=n.split(this.image_token);if(0===m.length)throw new Error("The image token should be present in the text.");let h=m[0];for(let e=0;e<p.length;++e)h+=p[e]+m[e+1];u.push(h)}return{...this.tokenizer(u),...r}}}},"./src/models/image_processors.js":(e,t,n)=>{n.r(t),n.d(t,{BeitFeatureExtractor:()=>r.BeitFeatureExtractor,BitImageProcessor:()=>s.BitImageProcessor,CLIPFeatureExtractor:()=>a.CLIPFeatureExtractor,CLIPImageProcessor:()=>a.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>o.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>i.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>i.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>u.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>p.DPTFeatureExtractor,DPTImageProcessor:()=>p.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>d.DetrFeatureExtractor,DetrImageProcessor:()=>d.DetrImageProcessor,DonutFeatureExtractor:()=>c.DonutFeatureExtractor,DonutImageProcessor:()=>c.DonutImageProcessor,EfficientNetImageProcessor:()=>m.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>h.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>w.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>b.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>y.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>M.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>M.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>x.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>x.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>v.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>v.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>T.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>T.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>k.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>k.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>P.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>P.MobileViTImageProcessor,NougatImageProcessor:()=>$.NougatImageProcessor,OwlViTFeatureExtractor:()=>S.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>S.OwlViTImageProcessor,Owlv2ImageProcessor:()=>C.Owlv2ImageProcessor,Phi3VImageProcessor:()=>F.Phi3VImageProcessor,PvtImageProcessor:()=>E.PvtImageProcessor,Qwen2VLImageProcessor:()=>I.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>A.RTDetrImageProcessor,SamImageProcessor:()=>z.SamImageProcessor,SegformerFeatureExtractor:()=>L.SegformerFeatureExtractor,SegformerImageProcessor:()=>L.SegformerImageProcessor,SiglipImageProcessor:()=>O.SiglipImageProcessor,SmolVLMImageProcessor:()=>D.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>B.Swin2SRImageProcessor,VLMImageProcessor:()=>g.VLMImageProcessor,ViTFeatureExtractor:()=>N.ViTFeatureExtractor,ViTImageProcessor:()=>N.ViTImageProcessor,VitMatteImageProcessor:()=>R.VitMatteImageProcessor,VitPoseImageProcessor:()=>j.VitPoseImageProcessor,YolosFeatureExtractor:()=>V.YolosFeatureExtractor,YolosImageProcessor:()=>V.YolosImageProcessor});var r=n("./src/models/beit/image_processing_beit.js"),s=n("./src/models/bit/image_processing_bit.js"),o=n("./src/models/chinese_clip/image_processing_chinese_clip.js"),a=n("./src/models/clip/image_processing_clip.js"),i=n("./src/models/convnext/image_processing_convnext.js"),l=n("./src/models/deit/image_processing_deit.js"),d=n("./src/models/detr/image_processing_detr.js"),u=n("./src/models/dinov3_vit/image_processing_dinov3_vit.js"),c=n("./src/models/donut/image_processing_donut.js"),p=n("./src/models/dpt/image_processing_dpt.js"),m=n("./src/models/efficientnet/image_processing_efficientnet.js"),h=n("./src/models/glpn/image_processing_glpn.js"),f=n("./src/models/grounding_dino/image_processing_grounding_dino.js"),_=n("./src/models/idefics3/image_processing_idefics3.js"),g=n("./src/models/janus/image_processing_janus.js"),w=n("./src/models/jina_clip/image_processing_jina_clip.js"),b=n("./src/models/llava_onevision/image_processing_llava_onevision.js"),y=n("./src/models/mask2former/image_processing_mask2former.js"),M=n("./src/models/maskformer/image_processing_maskformer.js"),x=n("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),v=n("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),T=n("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),k=n("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),P=n("./src/models/mobilevit/image_processing_mobilevit.js"),$=n("./src/models/nougat/image_processing_nougat.js"),C=n("./src/models/owlv2/image_processing_owlv2.js"),S=n("./src/models/owlvit/image_processing_owlvit.js"),F=n("./src/models/phi3_v/image_processing_phi3_v.js"),E=n("./src/models/pvt/image_processing_pvt.js"),I=n("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),A=n("./src/models/rt_detr/image_processing_rt_detr.js"),z=n("./src/models/sam/image_processing_sam.js"),L=n("./src/models/segformer/image_processing_segformer.js"),O=n("./src/models/siglip/image_processing_siglip.js"),D=n("./src/models/smolvlm/image_processing_smolvlm.js"),B=n("./src/models/swin2sr/image_processing_swin2sr.js"),N=n("./src/models/vit/image_processing_vit.js"),R=n("./src/models/vitmatte/image_processing_vitmatte.js"),j=n("./src/models/vitpose/image_processing_vitpose.js"),V=n("./src/models/yolos/image_processing_yolos.js")},"./src/models/janus/image_processing_janus.js":(e,t,n)=>{n.r(t),n.d(t,{VLMImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){super({do_pad:!0,pad_size:{width:e.image_size,height:e.image_size},...e}),this.constant_values=this.config.background_color.map((e=>e*this.rescale_factor))}pad_image(e,t,n,r){return super.pad_image(e,t,n,{constant_values:this.constant_values,center:!0,...r})}}},"./src/models/janus/processing_janus.js":(e,t,n)=>{n.r(t),n.d(t,{VLChatProcessor:()=>d});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js"),a=n("./src/utils/core.js"),i=n("./src/utils/tensor.js"),l=n("./src/utils/image.js");class d extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;constructor(e,t,n){super(e,t,n),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(e,{images:t=null,chat_template:n="default"}={}){t?Array.isArray(t)||(t=[t]):t=await Promise.all(e.filter((e=>e.images)).flatMap((e=>e.images)).map((e=>l.RawImage.read(e))));const r=this.tokenizer,s=e=>r.encode(e,{add_special_tokens:!1}),o=r.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0,chat_template:n}).split(this.image_tag),d=o.length-1;if(t.length!==d)throw new Error(`Number of images provided (${t.length}) does not match number of "${this.image_tag}" image tags (${d})`);const[u,c,p]=r.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let m=s(o[0]),h=new Array(m.length).fill(!1);for(let e=1;e<o.length;++e){const t=new Array(this.num_image_tokens).fill(u),n=s(o[e]);m=(0,a.mergeArrays)(m,[c],t,[p],n);const r=new Array(this.num_image_tokens).fill(!0);h=(0,a.mergeArrays)(h,[!1],r,[!1],new Array(n.length).fill(!1))}const f=[1,m.length],_={input_ids:new i.Tensor("int64",m,f),attention_mask:new i.Tensor("int64",new Array(m.length).fill(1),f),images_seq_mask:new i.Tensor("bool",h,f),images_emb_mask:new i.Tensor("bool",new Array(d*this.num_image_tokens).fill(!0),[1,d,this.num_image_tokens])};if(t&&t.length>0){const e=await this.image_processor(t);return e.pixel_values.unsqueeze_(0),{..._,...e}}return _}}},"./src/models/jina_clip/image_processing_jina_clip.js":(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{constructor(e){const{resize_mode:t,fill_color:n,interpolation:r,size:s,...o}=e;super({...o,size:"squash"===t?{width:s,height:s}:"shortest"===t?{shortest_edge:s}:{longest_edge:s},resample:"bicubic"===r?3:2,do_center_crop:!0,crop_size:s,do_normalize:!0})}}},"./src/models/jina_clip/processing_jina_clip.js":(e,t,n)=>{n.r(t),n.d(t,{JinaCLIPProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;async _call(e=null,t=null,n={}){if(!e&&!t)throw new Error("Either text or images must be provided");return{...e?this.tokenizer(e,n):{},...t?await this.image_processor(t,n):{}}}}},"./src/models/llava/processing_llava.js":(e,t,n)=>{n.r(t),n.d(t,{LlavaProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;static uses_processor_config=!0;async _call(e,t=null,n={}){const r=await this.image_processor(e,n);if(t){const[e,n]=r.pixel_values.dims.slice(-2),{image_token:s,patch_size:o,num_additional_image_tokens:a}=this.config,i=Math.floor(e/o)*Math.floor(n/o)+a;t=structuredClone(t),Array.isArray(t)||(t=[t]);for(let e=0;e<t.length;++e)t[e]=t[e].replace(s,s.repeat(i))}const s=t?this.tokenizer(t,n):{};return{...r,...s}}}},"./src/models/llava_onevision/image_processing_llava_onevision.js":(e,t,n)=>{n.r(t),n.d(t,{LlavaOnevisionImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/mask2former/image_processing_mask2former.js":(e,t,n)=>{n.r(t),n.d(t,{Mask2FormerImageProcessor:()=>s});var r=n("./src/models/maskformer/image_processing_maskformer.js");class s extends r.MaskFormerImageProcessor{}},"./src/models/maskformer/image_processing_maskformer.js":(e,t,n)=>{n.r(t),n.d(t,{MaskFormerFeatureExtractor:()=>o,MaskFormerImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_panoptic_segmentation(...e){return(0,r.post_process_panoptic_segmentation)(...e)}post_process_instance_segmentation(...e){return(0,r.post_process_instance_segmentation)(...e)}}class o extends s{}},"./src/models/mgp_str/processing_mgp_str.js":(e,t,n)=>{n.r(t),n.d(t,{MgpstrProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js"),a=n("./src/utils/maths.js");const i={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(e,t){if(!i.hasOwnProperty(t))throw new Error(`Format ${t} is not supported.`);const[n,r]=i[t],s=this[n].bind(this),[o,l]=e.dims,d=[],u=[],c=e.tolist();for(let e=0;e<o;++e){const t=c[e],n=[],s=[];for(let e=1;e<l;++e){const[o,i]=(0,a.max)((0,a.softmax)(t[e]));if(s.push(o),i==r)break;n.push(i)}const o=s.length>0?s.reduce(((e,t)=>e*t),1):0;u.push(n),d.push(o)}return[s(u),d]}char_decode(e){return this.char_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}bpe_decode(e){return this.bpe_tokenizer.batch_decode(e)}wp_decode(e){return this.wp_tokenizer.batch_decode(e).map((e=>e.replaceAll(" ","")))}batch_decode([e,t,n]){const[r,s]=this._decode_helper(e,"char"),[o,i]=this._decode_helper(t,"bpe"),[l,d]=this._decode_helper(n,"wp"),u=[],c=[];for(let e=0;e<r.length;++e){const[t,n]=(0,a.max)([s[e],i[e],d[e]]);u.push([r[e],o[e],l[e]][n]),c.push(t)}return{generated_text:u,scores:c,char_preds:r,bpe_preds:o,wp_preds:l}}static async from_pretrained(...e){const t=await super.from_pretrained(...e),n=await o.AutoTokenizer.from_pretrained("Xenova/gpt2"),r=await o.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return t.components={image_processor:t.image_processor,char_tokenizer:t.tokenizer,bpe_tokenizer:n,wp_tokenizer:r},t}async _call(e,t=null){const n=await this.image_processor(e);return t&&(n.labels=this.tokenizer(t).input_ids),n}}},"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV1FeatureExtractor:()=>o,MobileNetV1ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV2FeatureExtractor:()=>o,MobileNetV2ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV3FeatureExtractor:()=>o,MobileNetV3ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":(e,t,n)=>{n.r(t),n.d(t,{MobileNetV4FeatureExtractor:()=>o,MobileNetV4ImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/mobilevit/image_processing_mobilevit.js":(e,t,n)=>{n.r(t),n.d(t,{MobileViTFeatureExtractor:()=>o,MobileViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/moonshine/feature_extraction_moonshine.js":(e,t,n)=>{n.r(t),n.d(t,{MoonshineFeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class o extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"MoonshineFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,e.length];return{input_values:new s.Tensor("float32",e,t)}}}},"./src/models/moonshine/processing_moonshine.js":(e,t,n)=>{n.r(t),n.d(t,{MoonshineProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),o=n("./src/base/processing_utils.js");class a extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/nougat/image_processing_nougat.js":(e,t,n)=>{n.r(t),n.d(t,{NougatImageProcessor:()=>s});var r=n("./src/models/donut/image_processing_donut.js");class s extends r.DonutImageProcessor{}},"./src/models/owlv2/image_processing_owlv2.js":(e,t,n)=>{n.r(t),n.d(t,{Owlv2ImageProcessor:()=>s});var r=n("./src/models/owlvit/image_processing_owlvit.js");class s extends r.OwlViTImageProcessor{}},"./src/models/owlvit/image_processing_owlvit.js":(e,t,n)=>{n.r(t),n.d(t,{OwlViTFeatureExtractor:()=>o,OwlViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class o extends s{}},"./src/models/owlvit/processing_owlvit.js":(e,t,n)=>{n.r(t),n.d(t,{OwlViTProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");class a extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor}},"./src/models/paligemma/processing_paligemma.js":(e,t,n)=>{n.r(t),n.d(t,{PaliGemmaProcessor:()=>i});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");const a="<image>";class i extends r.Processor{static tokenizer_class=o.AutoTokenizer;static image_processor_class=s.AutoImageProcessor;static uses_processor_config=!1;async _call(e,t=null,n={}){t||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),t=""),Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const r=this.tokenizer.bos_token,s=this.image_processor.config.image_seq_length;let o;t.some((e=>e.includes(a)))?o=t.map((e=>{const t=e.replaceAll(a,a.repeat(s)),n=t.lastIndexOf(a),o=-1===n?0:n+7;return t.slice(0,o)+r+t.slice(o)+"\n"})):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),o=t.map((t=>function(e,t,n,r,s){return`${r.repeat(n*s)}${t}${e}\n`}(t,r,s,a,e.length))));const i=this.tokenizer(o,n);return{...await this.image_processor(e,n),...i}}}},"./src/models/phi3_v/image_processing_phi3_v.js":(e,t,n)=>{n.r(t),n.d(t,{Phi3VImageProcessor:()=>u});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");const o=336,a=[2,3],{ceil:i,floor:l,sqrt:d}=Math;class u extends r.ImageProcessor{constructor(e){super({...e,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=e.num_crops}calc_num_image_tokens_from_image_size(e,t){const{num_img_tokens:n}=this.config;return l((l(t/o)*l(e/o)+1)*n+1+(l(t/o)+1)*d(n))}get_resize_output_image_size(e,t){const n=this._num_crops,[r,s]=e.size;let o=r/s,a=1;for(;a*Math.ceil(a/o)<=n;)a+=1;a-=1;const i=Math.floor(336*a);return[i,Math.floor(i/o)]}pad_image(e,t,n,r={}){const[s,a]=t,l=o*i(s/o),d=o*i(a/o),u=[1,1,1].map(((e,t)=>(e-this.image_mean[t])/this.image_std[t]));return super.pad_image(e,t,{width:d,height:l},{center:!0,constant_values:u,...r})}async _call(e,{num_crops:t=null}={}){if(this._num_crops=t??=this.config.num_crops,t<4||d(t)%1!=0)throw new Error("num_crops must be a square number >= 4");Array.isArray(e)||(e=[e]);const n=e.length,r=await Promise.all(e.map((e=>this.preprocess(e)))),u=r.map((e=>e.original_size)),c=r.map((e=>e.reshaped_input_size)),p=[];for(const{pixel_values:e}of r){e.unsqueeze_(0);const[n,r]=e.dims.slice(-2),i=await(0,s.interpolate_4d)(e,{size:[o,o],mode:"bicubic"});if(t>0){const u=[],c=d(t),m=l(r/c),h=l(n/c);for(let t=0;t<c;++t)for(let o=0;o<c;++o){let i,l,d,p;t===c-1?(l=n-h,p=n):(l=t*h,p=(t+1)*h),o===c-1?(i=r-m,d=r):(i=o*m,d=(o+1)*m);const f=[l,i],_=[p,d],g=await(0,s.slice)(e,f,_,a);u.push(g)}const f=await(0,s.interpolate_4d)((0,s.cat)(u,0),{size:[o,o],mode:"bicubic"});p.push((0,s.cat)([i,f],0))}else p.push(i)}const m=(0,s.stack)(p,0),h=c.map((e=>e.map((e=>o*i(e/o)))));return{pixel_values:m,original_sizes:u,reshaped_input_sizes:c,image_sizes:new s.Tensor("int64",h.flat(),[n,2]),num_img_tokens:h.map((([e,t])=>this.calc_num_image_tokens_from_image_size(t,e)))}}}},"./src/models/phi3_v/processing_phi3_v.js":(e,t,n)=>{n.r(t),n.d(t,{Phi3VProcessor:()=>l});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");n("./src/utils/image.js");const a="<|image|>",i=/<\|image_\d+\|>/g;class l extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;async _call(e,t=null,{padding:n=!0,truncation:r=!0,num_crops:s=null}={}){let o,l;if(Array.isArray(e)||(e=[e]),t){l=await this.image_processor(t,{num_crops:s});const{num_img_tokens:d}=l,u=e.map(((e,t)=>e.split(i).join(a.repeat(d[t]))));o=this.tokenizer(u,{padding:n,truncation:r});const c=this.tokenizer.model.convert_tokens_to_ids([a])[0];o.input_ids.map_((e=>e==c?-e:e))}else o=this.tokenizer(e);return{...o,...l}}}},"./src/models/processors.js":(e,t,n)=>{n.r(t),n.d(t,{Florence2Processor:()=>r.Florence2Processor,Gemma3nProcessor:()=>s.Gemma3nProcessor,GroundingDinoProcessor:()=>o.GroundingDinoProcessor,Idefics3Processor:()=>a.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>d.LlavaProcessor,MgpstrProcessor:()=>u.MgpstrProcessor,MoonshineProcessor:()=>c.MoonshineProcessor,OwlViTProcessor:()=>p.OwlViTProcessor,PaliGemmaProcessor:()=>h.PaliGemmaProcessor,Phi3VProcessor:()=>m.Phi3VProcessor,PyAnnoteProcessor:()=>f.PyAnnoteProcessor,Qwen2VLProcessor:()=>_.Qwen2VLProcessor,SamProcessor:()=>g.SamProcessor,SmolVLMProcessor:()=>w.SmolVLMProcessor,SpeechT5Processor:()=>b.SpeechT5Processor,UltravoxProcessor:()=>y.UltravoxProcessor,VLChatProcessor:()=>i.VLChatProcessor,VoxtralProcessor:()=>M.VoxtralProcessor,Wav2Vec2Processor:()=>x.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>v.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>T.WhisperProcessor});var r=n("./src/models/florence2/processing_florence2.js"),s=n("./src/models/gemma3n/processing_gemma3n.js"),o=n("./src/models/grounding_dino/processing_grounding_dino.js"),a=n("./src/models/idefics3/processing_idefics3.js"),i=n("./src/models/janus/processing_janus.js"),l=n("./src/models/jina_clip/processing_jina_clip.js"),d=n("./src/models/llava/processing_llava.js"),u=n("./src/models/mgp_str/processing_mgp_str.js"),c=n("./src/models/moonshine/processing_moonshine.js"),p=n("./src/models/owlvit/processing_owlvit.js"),m=n("./src/models/phi3_v/processing_phi3_v.js"),h=n("./src/models/paligemma/processing_paligemma.js"),f=n("./src/models/pyannote/processing_pyannote.js"),_=n("./src/models/qwen2_vl/processing_qwen2_vl.js"),g=n("./src/models/sam/processing_sam.js"),w=n("./src/models/smolvlm/processing_smolvlm.js"),b=n("./src/models/speecht5/processing_speecht5.js"),y=n("./src/models/ultravox/processing_ultravox.js"),M=n("./src/models/voxtral/processing_voxtral.js"),x=n("./src/models/wav2vec2/processing_wav2vec2.js"),v=n("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),T=n("./src/models/whisper/processing_whisper.js")},"./src/models/pvt/image_processing_pvt.js":(e,t,n)=>{n.r(t),n.d(t,{PvtImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/pyannote/feature_extraction_pyannote.js":(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),o=n("./src/utils/maths.js");class a extends r.FeatureExtractor{async _call(e){(0,r.validate_audio_inputs)(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new s.Tensor("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let s=-1;for(let n=0;n<t.length;++n){const r=(0,o.softmax)(t[n]),[a,i]=(0,o.max)(r),[l,d]=[n,n+1];i!==s?(s=i,e.push({id:i,start:l,end:d,score:a})):(e.at(-1).end=d,e.at(-1).score+=a)}r.push(e.map((({id:e,start:t,end:r,score:s})=>({id:e,start:t*n,end:r*n,confidence:s/(r-t)}))))}return r}}},"./src/models/pyannote/processing_pyannote.js":(e,t,n)=>{n.r(t),n.d(t,{PyAnnoteProcessor:()=>o});var r=n("./src/base/processing_utils.js"),s=n("./src/models/pyannote/feature_extraction_pyannote.js");class o extends r.Processor{static feature_extractor_class=s.PyAnnoteFeatureExtractor;async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}},"./src/models/qwen2_vl/image_processing_qwen2_vl.js":(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLImageProcessor:()=>o});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e,...t){const{pixel_values:n,original_sizes:r,reshaped_input_sizes:o}=await super._call(e,...t);let a=n;const{temporal_patch_size:i,merge_size:l,patch_size:d}=this.config;1===a.dims[0]&&(a=(0,s.cat)(Array.from({length:i},(()=>a)),0));const u=a.dims[0]/i,c=a.dims[1],p=Math.floor(a.dims[2]/d),m=Math.floor(a.dims[3]/d);return{pixel_values:a.view(u,i,c,Math.floor(p/l),l,d,Math.floor(m/l),l,d).permute(0,3,6,4,7,2,1,5,8).view(u*p*m,c*i*d*d),image_grid_thw:new s.Tensor("int64",[u,p,m],[1,3]),original_sizes:r,reshaped_input_sizes:o}}}},"./src/models/qwen2_vl/processing_qwen2_vl.js":(e,t,n)=>{n.r(t),n.d(t,{Qwen2VLProcessor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js"),o=n("./src/tokenizers.js");n("./src/utils/image.js");class a extends r.Processor{static image_processor_class=s.AutoImageProcessor;static tokenizer_class=o.AutoTokenizer;async _call(e,t=null,...n){let r,s;if(Array.isArray(e)||(e=[e]),t&&(r=await this.image_processor(t),s=r.image_grid_thw),s){let t=this.image_processor.config.merge_size**2,n=0;const r=s.tolist();e=e.map((e=>{for(;e.includes("<|image_pad|>");){const s=Number(r[n++].reduce(((e,t)=>e*t),1n));e=e.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(s/t)))}return e.replaceAll("<|placeholder|>","<|image_pad|>")}))}return{...this.tokenizer(e),...r}}}},"./src/models/rt_detr/image_processing_rt_detr.js":(e,t,n)=>{n.r(t),n.d(t,{RTDetrImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}},"./src/models/sam/image_processing_sam.js":(e,t,n)=>{n.r(t),n.d(t,{SamImageProcessor:()=>a});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/core.js"),o=n("./src/utils/tensor.js");class a extends r.ImageProcessor{reshape_input_points(e,t,n,r=!1){e=structuredClone(e);let a=(0,s.calculateDimensions)(e);if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let s=t[r],o=n[r],a=[o[0]/s[0],o[1]/s[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let s=0;s<e[r][t][n].length;++s)e[r][t][n][s]*=a[s%2]}return new o.Tensor("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let n=(0,s.calculateDimensions)(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new o.Tensor("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const s=await super._call(e);if(t&&(s.input_points=this.reshape_input_points(t,s.original_sizes,s.reshaped_input_sizes)),n){if(!s.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");s.input_labels=this.add_input_labels(n,s.input_points)}return r&&(s.input_boxes=this.reshape_input_points(r,s.original_sizes,s.reshaped_input_sizes,!0)),s}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:s=!0,pad_size:a=null}={}){const i=[],l=[(a=a??this.pad_size).height,a.width];for(let a=0;a<t.length;++a){const d=t[a],u=n[a];let c=await(0,o.interpolate_4d)(e[a],{mode:"bilinear",size:l});if(c=c.slice(null,null,[0,u[0]],[0,u[1]]),c=await(0,o.interpolate_4d)(c,{mode:"bilinear",size:d}),s){const e=c.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);c=new o.Tensor("bool",t,c.dims)}i.push(c)}return i}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:s=32,crop_n_points_downscale_factor:o=1}={}){}}},"./src/models/sam/processing_sam.js":(e,t,n)=>{n.r(t),n.d(t,{SamProcessor:()=>o});var r=n("./src/base/processing_utils.js"),s=n("./src/models/auto/image_processing_auto.js");class o extends r.Processor{static image_processor_class=s.AutoImageProcessor;async _call(...e){return await this.image_processor(...e)}post_process_masks(...e){return this.image_processor.post_process_masks(...e)}reshape_input_points(...e){return this.image_processor.reshape_input_points(...e)}}},"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":(e,t,n)=>{n.r(t),n.d(t,{SeamlessM4TFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js"),o=n("./src/utils/audio.js");class a extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,o.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,o.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return e=e.map((e=>32768*e)),(0,o.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:o=!0,return_attention_mask:a=!0}={}){(0,r.validate_audio_inputs)(e,"SeamlessM4TFeatureExtractor");let i,l=await this._extract_fbank_features(e,this.config.max_length);if(o){const[e,t]=l.dims,n=l.data;for(let r=0;r<t;++r){let s=0;for(let o=0;o<e;++o)s+=n[o*t+r];const o=s/e;let a=0;for(let s=0;s<e;++s)a+=(n[s*t+r]-o)**2;a/=e-1;const i=Math.sqrt(a+1e-7);for(let s=0;s<e;++s){const e=s*t+r;n[e]=(n[e]-o)/i}}}if(t){const[e,t]=l.dims,r=l.data,o=e%n;if(o>0){const n=new Float32Array(t*(e+o));n.set(r),n.fill(this.config.padding_value,r.length);const d=e+o;l=new s.Tensor(l.type,n,[d,t]),a&&(i=new s.Tensor("int64",new BigInt64Array(d),[1,d]),i.data.fill(1n,0,e))}}const[d,u]=l.dims,c=this.config.stride;if(0!==d%c)throw new Error(`The number of frames (${d}) must be a multiple of the stride (${c}).`);const p=l.view(1,Math.floor(d/c),u*c),m={input_features:p};if(a){const e=p.dims[1],t=new BigInt64Array(e);if(i){const e=i.data;for(let n=1,r=0;n<d;n+=c,++r)t[r]=e[n]}else t.fill(1n);m.attention_mask=new s.Tensor("int64",t,[1,e])}return m}}},"./src/models/segformer/image_processing_segformer.js":(e,t,n)=>{n.r(t),n.d(t,{SegformerFeatureExtractor:()=>o,SegformerImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_semantic_segmentation(...e){return(0,r.post_process_semantic_segmentation)(...e)}}class o extends s{}},"./src/models/siglip/image_processing_siglip.js":(e,t,n)=>{n.r(t),n.d(t,{SiglipImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}},"./src/models/smolvlm/image_processing_smolvlm.js":(e,t,n)=>{n.r(t),n.d(t,{SmolVLMImageProcessor:()=>r.Idefics3ImageProcessor});var r=n("./src/models/idefics3/image_processing_idefics3.js")},"./src/models/smolvlm/processing_smolvlm.js":(e,t,n)=>{n.r(t),n.d(t,{SmolVLMProcessor:()=>r.Idefics3Processor});var r=n("./src/models/idefics3/processing_idefics3.js")},"./src/models/snac/feature_extraction_snac.js":(e,t,n)=>{n.r(t),n.d(t,{SnacFeatureExtractor:()=>s});var r=n("./src/models/dac/feature_extraction_dac.js");class s extends r.DacFeatureExtractor{}},"./src/models/speecht5/feature_extraction_speecht5.js":(e,t,n)=>{n.r(t),n.d(t,{SpeechT5FeatureExtractor:()=>s});var r=n("./src/base/feature_extraction_utils.js");class s extends r.FeatureExtractor{}},"./src/models/speecht5/processing_speecht5.js":(e,t,n)=>{n.r(t),n.d(t,{SpeechT5Processor:()=>a});var r=n("./src/base/processing_utils.js"),s=n("./src/tokenizers.js"),o=n("./src/models/auto/feature_extraction_auto.js");class a extends r.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=o.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/swin2sr/image_processing_swin2sr.js":(e,t,n)=>{n.r(t),n.d(t,{Swin2SRImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{pad_image(e,t,n,r={}){const[s,o,a]=t;return super.pad_image(e,t,{width:o+(n-o%n)%n,height:s+(n-s%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}},"./src/models/ultravox/processing_ultravox.js":(e,t,n)=>{n.r(t),n.d(t,{UltravoxProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),o=n("./src/base/processing_utils.js");class a extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;static uses_processor_config=!0;async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");let r={};if(t){const s=t.length,{input_features:o}=await this.feature_extractor(t,{...n,max_length:s}),a=Math.round(s/this.config.encoder_ds_factor+1e-4),i=1+Math.ceil(a/this.config.stack_factor);r.audio_token_len=[i],r.audio_values=o;const l=this.config.audio_placeholder;if(!e.includes(l))throw new Error(`The input text does not contain the image token ${l}.`);e=e.replaceAll(l,l.repeat(i))}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}},"./src/models/vit/image_processing_vit.js":(e,t,n)=>{n.r(t),n.d(t,{ViTFeatureExtractor:()=>o,ViTImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{}class o extends s{}},"./src/models/vitmatte/image_processing_vitmatte.js":(e,t,n)=>{n.r(t),n.d(t,{VitMatteImageProcessor:()=>o});var r=n("./src/base/image_processors_utils.js"),s=n("./src/utils/tensor.js");class o extends r.ImageProcessor{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:(0,s.stack)(n.map(((e,t)=>(0,s.cat)([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}},"./src/models/vitpose/image_processing_vitpose.js":(e,t,n)=>{n.r(t),n.d(t,{VitPoseImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_pose_estimation(e,t,{threshold:n=null}={}){const r=e.tolist(),[s,o,a,i]=e.dims,l=[];for(let e=0;e<s;++e){const s=r[e],o=t[e],d=[];for(let e=0;e<o.length;++e){const t=o[e],r=[],l=[],u=[],c=t.at(-2)/i,p=t.at(-1)/a;for(let e=0;e<s.length;++e){let[t,o]=[0,0],a=0,i=-1/0;const d=s[e];for(let e=0;e<d.length;++e){const n=d[e];for(let r=0;r<n.length;++r){const s=n[r];a+=s,i=Math.max(i,s),t+=(r+.5)*s,o+=e*s}}if(null!=n&&i<n)continue;const m=[c*t/a,p*o/a];r.push(m),u.push(e),l.push(i)}d.push({bbox:t,scores:l,labels:u,keypoints:r})}l.push(d)}return l}}},"./src/models/voxtral/processing_voxtral.js":(e,t,n)=>{n.r(t),n.d(t,{VoxtralProcessor:()=>l});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),o=n("./src/base/processing_utils.js"),a=n("./src/utils/tensor.js");const i="[AUDIO]";class l extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;static uses_processor_config=!1;async _call(e,t=null,n={}){if(Array.isArray(e))throw new Error("Batched inputs are not supported yet.");const r={};if(t){if(!e.includes(i))throw new Error(`The input text does not contain the audio token ${i}.`);Array.isArray(t)||(t=[t]);const s=e.split(i),o=s.length-1;if(o!==t.length)throw new Error(`The number of audio inputs (${t.length}) does not match the number of audio tokens in the text (${o}).`);const l=this.feature_extractor.config.n_samples,d=t.map((e=>function(e,t){const n=[];for(let r=0;r<e.length;r+=t)n.push(e.subarray(r,Math.min(r+t,e.length)));return n}(e,l))),u=d.map((e=>e.length)),c=d.flat(),p=(await Promise.all(c.map((e=>this.feature_extractor(e,n))))).map((e=>e.input_features));r.audio_values=p.length>1?(0,a.cat)(p,0):p[0];let m=s[0];for(let e=0;e<u.length;++e){m+="[BEGIN_AUDIO]";for(let t=0;t<u[e];++t)m+=i.repeat(375);m+=s[e+1]}e=m}return{...this.tokenizer(e,{add_special_tokens:!1,...n}),...r}}}},"./src/models/wav2vec2/feature_extraction_wav2vec2.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2FeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=n("./src/utils/tensor.js");class o extends r.FeatureExtractor{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){(0,r.validate_audio_inputs)(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new s.Tensor("float32",t,n),attention_mask:new s.Tensor("int64",new BigInt64Array(t.length).fill(1n),n)}}}},"./src/models/wav2vec2/processing_wav2vec2.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2Processor:()=>a});var r=n("./src/tokenizers.js"),s=n("./src/models/auto/feature_extraction_auto.js"),o=n("./src/base/processing_utils.js");class a extends o.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":(e,t,n)=>{n.r(t),n.d(t,{Wav2Vec2ProcessorWithLM:()=>a});var r=n("./src/tokenizers.js"),s=n("./src/models/auto/feature_extraction_auto.js"),o=n("./src/base/processing_utils.js");class a extends o.Processor{static tokenizer_class=r.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/wespeaker/feature_extraction_wespeaker.js":(e,t,n)=>{n.r(t),n.d(t,{WeSpeakerFeatureExtractor:()=>o});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js"));class o extends r.FeatureExtractor{constructor(e){super(e);const t=this.config.sampling_rate,n=(0,s.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);this.mel_filters=n,this.window=(0,s.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return e=e.map((e=>32768*e)),(0,s.spectrogram)(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){(0,r.validate_audio_inputs)(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,s,o]=t.dims;for(let t=0;t<r;++t){const r=t*s*o,a=t*o;for(let t=0;t<s;++t){const s=r+t*o;for(let t=0;t<o;++t)n[s+t]-=e[a+t]}}}return{input_features:t}}}},"./src/models/whisper/common_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WHISPER_LANGUAGE_MAPPING:()=>s,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>o,whisper_language_to_code:()=>a});const r=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],s=new Map(r),o=new Map([...r.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function a(e){e=e.toLowerCase();let t=o.get(e);if(void 0===t){const n=e.match(/^<\|([a-z]{2})\|>$/);if(n&&(e=n[1]),!s.has(e)){const t=2===e.length?s.keys():s.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(Array.from(t))}`)}t=e}return t}},"./src/models/whisper/feature_extraction_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperFeatureExtractor:()=>a});var r=n("./src/base/feature_extraction_utils.js"),s=(n("./src/utils/tensor.js"),n("./src/utils/audio.js")),o=n("./src/utils/maths.js");class a extends r.FeatureExtractor{constructor(e){super(e),this.config.mel_filters??=(0,s.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,s.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await(0,s.spectrogram)(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(e.length/this.config.hop_length),this.config.nb_max_frames)}),n=t.data,r=(0,o.max)(n)[0];for(let e=0;e<n.length;++e)n[e]=(Math.max(n[e],r-8)+4)/4;return t}async _call(e,{max_length:t=null}={}){let n;(0,r.validate_audio_inputs)(e,"WhisperFeatureExtractor");const s=t??this.config.n_samples;e.length>s?(e.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),n=e.slice(0,s)):(n=new Float32Array(s),n.set(e));return{input_features:(await this._extract_fbank_features(n)).unsqueeze_(0)}}}},"./src/models/whisper/generation_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperGenerationConfig:()=>s});var r=n("./src/generation/configuration_utils.js");class s extends r.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}},"./src/models/whisper/processing_whisper.js":(e,t,n)=>{n.r(t),n.d(t,{WhisperProcessor:()=>a});var r=n("./src/models/auto/feature_extraction_auto.js"),s=n("./src/tokenizers.js"),o=n("./src/base/processing_utils.js");class a extends o.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=r.AutoFeatureExtractor;async _call(e){return await this.feature_extractor(e)}}},"./src/models/yolos/image_processing_yolos.js":(e,t,n)=>{n.r(t),n.d(t,{YolosFeatureExtractor:()=>o,YolosImageProcessor:()=>s});var r=n("./src/base/image_processors_utils.js");class s extends r.ImageProcessor{post_process_object_detection(...e){return(0,r.post_process_object_detection)(...e)}}class o extends s{}},"./src/ops/registry.js":(e,t,n)=>{n.r(t),n.d(t,{TensorOpRegistry:()=>l});var r=n("./src/backends/onnx.js"),s=n("./src/utils/tensor.js"),o=n("./src/env.js");const a=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV,i=async(e,t,n)=>{const o=await(0,r.createInferenceSession)(new Uint8Array(e),t);let i=Promise.resolve();return async e=>{const t=(0,r.isONNXProxy)(),l=Object.fromEntries(Object.entries(e).map((([e,n])=>[e,(t?n.clone():n).ort_tensor]))),d=await(i=a?i.then((()=>o.run(l))):o.run(l));return Array.isArray(n)?n.map((e=>new s.Tensor(d[e]))):new s.Tensor(d[n])}};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=i([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=i([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=i([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=i([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=i([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=i([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=i([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=i([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}},"./src/pipelines.js":(e,t,n)=>{n.r(t),n.d(t,{AudioClassificationPipeline:()=>C,AutomaticSpeechRecognitionPipeline:()=>F,BackgroundRemovalPipeline:()=>z,DepthEstimationPipeline:()=>j,DocumentQuestionAnsweringPipeline:()=>B,FeatureExtractionPipeline:()=>P,FillMaskPipeline:()=>b,ImageClassificationPipeline:()=>I,ImageFeatureExtractionPipeline:()=>$,ImageSegmentationPipeline:()=>A,ImageToImagePipeline:()=>R,ImageToTextPipeline:()=>E,ObjectDetectionPipeline:()=>O,Pipeline:()=>f,QuestionAnsweringPipeline:()=>w,SummarizationPipeline:()=>M,Text2TextGenerationPipeline:()=>y,TextClassificationPipeline:()=>_,TextGenerationPipeline:()=>T,TextToAudioPipeline:()=>N,TokenClassificationPipeline:()=>g,TranslationPipeline:()=>x,ZeroShotAudioClassificationPipeline:()=>S,ZeroShotClassificationPipeline:()=>k,ZeroShotImageClassificationPipeline:()=>L,ZeroShotObjectDetectionPipeline:()=>D,pipeline:()=>q});var r=n("./src/tokenizers.js"),s=n("./src/models.js"),o=n("./src/models/auto/processing_auto.js"),a=(n("./src/base/processing_utils.js"),n("./src/utils/generic.js")),i=n("./src/utils/core.js"),l=n("./src/utils/maths.js"),d=n("./src/utils/audio.js"),u=n("./src/utils/tensor.js"),c=n("./src/utils/image.js");async function p(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>c.RawImage.read(e))))}async function m(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?(0,d.read_audio)(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function h(e,t){t&&(e=e.map((e=>0|e)));const[n,r,s,o]=e;return{xmin:n,ymin:r,xmax:s,ymax:o}}class f extends a.Callable{constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class _ extends f{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),s="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new u.Tensor("float32",(0,l.softmax)(e.data),e.dims),o=this.model.config.id2label,a=[];for(const e of r.logits){const n=s(e),r=await(0,u.topk)(n,t),i=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:i[t]})));1===t?a.push(...l):a.push(l)}return Array.isArray(e)||1===t?a:a[0]}}class g extends f{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),s=(await this.model(r)).logits,o=this.model.config.id2label,a=[];for(let e=0;e<s.dims[0];++e){const n=r.input_ids[e],i=s[e],d=[];for(let e=0;e<i.dims[0];++e){const r=i[e],s=(0,l.max)(r.data)[1],a=o?o[s]:`LABEL_${s}`;if(t.includes(a))continue;const u=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===u)continue;const c=(0,l.softmax)(r.data);d.push({entity:a,score:c[s],index:e,word:u})}a.push(d)}return n?a:a[0]}}class w extends f{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:s,end_logits:o}=await this.model(r),a=r.input_ids.tolist(),d=r.attention_mask.tolist(),u=this.tokenizer.all_special_ids,c=[];for(let e=0;e<s.dims[0];++e){const t=a[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),p=(d[e].map(((e,n)=>1==e&&(0===n||n>r&&-1===u.findIndex((e=>e==t[n]))))),s[e].tolist()),m=o[e].tolist();for(let n=1;n<p.length;++n)(0==d[e]||n<=r||-1!==u.findIndex((e=>e==t[n])))&&(p[n]=-1/0,m[n]=-1/0);const h=(0,l.softmax)(p).map(((e,t)=>[e,t])),f=(0,l.softmax)(m).map(((e,t)=>[e,t]));h[0][0]=0,f[0][0]=0;const _=(0,i.product)(h,f).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(_.length,n);++e){const[n,r,s]=_[e],o=t.slice(n,r+1),a=this.tokenizer.decode(o,{skip_special_tokens:!0});c.push({answer:a,score:s})}}return 1===n?c[0]:c}}class b extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),s=[],o=n.input_ids.tolist();for(let e=0;e<o.length;++e){const n=o[e],a=n.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===a)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const i=r[e][a],d=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(i.data),i.dims),t),c=d[0].tolist(),p=d[1].tolist();s.push(p.map(((e,t)=>{const r=n.slice();return r[a]=e,{score:c[t],token:Number(e),token_str:this.tokenizer.decode([e]),sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?s:s[0]}}class y extends f{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,s={padding:!0,truncation:!0};let o;o=this instanceof x&&"_build_translation_inputs"in r?r._build_translation_inputs(e,s,t):r(e,s);const a=await this.model.generate({...o,...t});return r.batch_decode(a,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class M extends y{_key="summary_text";constructor(e){super(e)}}class x extends y{_key="translation_text";constructor(e){super(e)}}function v(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}class T extends f{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,s=!1,o=t.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,n=e;else{if(v(e))e=[e];else{if(!Array.isArray(e)||!e.every(v))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}s=!0,n=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0}))),o=!1}const a=!s&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const i=this.tokenizer(n,{add_special_tokens:o,padding:!0,truncation:!0}),l=await this.model.generate({...i,...t}),d=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let u;!a&&i.input_ids.dims.at(-1)>0&&(u=this.tokenizer.batch_decode(i.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const c=Array.from({length:e.length},(e=>[]));for(let t=0;t<d.length;++t){const n=Math.floor(t/l.dims[0]*e.length);u&&(d[t]=d[t].slice(u[n])),c[n].push({generated_text:s?[...e[n],{role:"assistant",content:d[t]}]:d[t]})}return r||1!==c.length?c:c[0]}}class k extends f{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const s=Array.isArray(e);s||(e=[e]),Array.isArray(t)||(t=[t]);const o=t.map((e=>n.replace("{}",e))),a=r||1===t.length,i=[];for(const n of e){const e=[];for(const t of o){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),s=await this.model(r);a?e.push([s.logits.data[this.contradiction_id],s.logits.data[this.entailment_id]]):e.push(s.logits.data[this.entailment_id])}const r=(a?e.map((e=>(0,l.softmax)(e)[1])):(0,l.softmax)(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));i.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return s?i:i[0]}}class P extends f{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:s="binary"}={}){const o=this.tokenizer(e,{padding:!0,truncation:!0}),a=await this.model(o);let i=a.last_hidden_state??a.logits??a.token_embeddings;switch(t){case"none":break;case"mean":i=(0,u.mean_pooling)(i,o.attention_mask);break;case"first_token":case"cls":i=i.slice(null,0);break;case"last_token":case"eos":i=i.slice(null,-1);break;default:throw Error(`Pooling method '${t}' not supported.`)}return n&&(i=i.normalize(2,-1)),r&&(i=(0,u.quantize_embeddings)(i,s)),i}}class $ extends f{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r});let o;if(t){if(!("pooler_output"in s))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");o=s.pooler_output}else o=s.last_hidden_state??s.logits??s.image_embeds;return o}}class C extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await m(e,n),s=this.model.config.id2label,o=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],a=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(r.data),r.dims),t),i=a[0].tolist(),d=a[1].tolist().map(((e,t)=>({label:s?s[e]:`LABEL_${e}`,score:i[t]})));o.push(d)}return Array.isArray(e)?o:o[0]}}class S extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const s=t.map((e=>n.replace("{}",e))),o=this.tokenizer(s,{padding:!0,truncation:!0}),a=this.processor.feature_extractor.config.sampling_rate,i=await m(e,a),d=[];for(const e of i){const n=await this.processor(e),r=await this.model({...o,...n}),s=(0,l.softmax)(r.logits_per_audio.data);d.push([...s].map(((e,n)=>({score:e,label:t[n]}))))}return r?d[0]:d}}class F extends f{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);case"moonshine":return this._call_moonshine(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await m(e,r),o=[];for(const e of s){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push((0,l.max)(e.data)[1]);const s=this.tokenizer.decode(r);o.push({text:s})}return n?o[0]:o}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,s=t.force_full_sequences??!1;let o=t.stride_length_s??null;const a={...t};"word"===n&&(a.return_token_timestamps=!0,a.return_timestamps=!1);const i=!Array.isArray(e);i&&(e=[e]);const d=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,u=this.processor.feature_extractor.config.hop_length,c=this.processor.feature_extractor.config.sampling_rate,p=await m(e,c),h=[];for(const e of p){let t=[];if(r>0){if(null===o)o=r/6;else if(r<=o)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const n=c*r,s=c*o,a=n-2*s;let i=0;for(;;){const r=i+n,o=e.subarray(i,r),l=await this.processor(o),d=0===i,u=r>=e.length;if(t.push({stride:[o.length,d?0:s,u?0:s],input_features:l.input_features,is_last:u}),u)break;i+=a}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){a.num_frames=Math.floor(e.stride[0]/u);const t=await this.model.generate({inputs:e.input_features,...a});"word"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>(0,l.round)(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/c))}const[i,p]=this.tokenizer._decode_asr(t,{time_precision:d,return_timestamps:n,force_full_sequences:s});h.push({text:i,...p})}return i?h[0]:h}async _call_moonshine(e,t){const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,s=await m(e,r),o=[];for(const e of s){const n=await this.processor(e),s=6*Math.floor(e.length/r),a=await this.model.generate({max_new_tokens:s,...t,...n}),i=this.processor.batch_decode(a,{skip_special_tokens:!0})[0];o.push({text:i})}return n?o[0]:o}}class E extends f{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await p(e),{pixel_values:s}=await this.processor(r),o=[];for(const e of s){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));o.push(r)}return n?o:o[0]}}class I extends f{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await p(e),{pixel_values:r}=await this.processor(n),s=await this.model({pixel_values:r}),o=this.model.config.id2label,a=[];for(const e of s.logits){const n=await(0,u.topk)(new u.Tensor("float32",(0,l.softmax)(e.data),e.dims),t),r=n[0].tolist(),s=n[1].tolist().map(((e,t)=>({label:o?o[e]:`LABEL_${e}`,score:r[t]})));a.push(s)}return Array.isArray(e)?a:a[0]}}class A extends f{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:s=null,target_sizes:o=null,subtask:a=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const i=await p(e),l=i.map((e=>[e.height,e.width])),d=await this.processor(i),{inputNames:u,outputNames:m}=this.model.sessions.model;if(!u.includes("pixel_values")){if(1!==u.length)throw Error(`Expected a single input name, but got ${u.length} inputs: ${u}.`);const e=u[0];if(e in d)throw Error(`Input name ${e} already exists in the inputs.`);d[e]=d.pixel_values}const h=await this.model(d);let f=null;if(null!==a)f=this.subtasks_mapping[a];else if(this.processor.image_processor)for(const[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.image_processor){f=this.processor.image_processor[t].bind(this.processor.image_processor),a=e;break}const _=this.model.config.id2label,g=[];if(a)if("panoptic"===a||"instance"===a){const e=f(h,t,n,r,s,o??l)[0],a=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(a.data.length);for(let n=0;n<a.data.length;++n)a.data[n]===t.id&&(e[n]=255);const n=new c.RawImage(e,a.dims[1],a.dims[0],1);g.push({score:t.score,label:_[t.label_id],mask:n})}}else{if("semantic"!==a)throw Error(`Subtask ${a} not supported.`);{const{segmentation:e,labels:t}=f(h,o??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new c.RawImage(t,e.dims[1],e.dims[0],1);g.push({score:null,label:_[n],mask:r})}}}else{const e=1e-5,t=h[m[0]];for(let n=0;n<l.length;++n){const r=l[n],s=t[n];s.data.some((t=>t<-e||t>1+e))&&s.sigmoid_();const o=await c.RawImage.fromTensor(s.mul_(255).to("uint8")).resize(r[1],r[0]);g.push({label:null,score:null,mask:o})}}return g}}class z extends A{constructor(e){super(e)}async _call(e,t={}){if(Array.isArray(e)&&1!==e.length)throw Error("Background removal pipeline currently only supports a batch size of 1.");const n=await p(e),r=await super._call(e,t);return n.map(((e,t)=>{const n=e.clone();return n.putAlpha(r[t].mask),n}))}}class L extends f{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),s=await p(e),o=t.map((e=>n.replace("{}",e))),a=this.tokenizer(o,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:i}=await this.processor(s),d=await this.model({...a,pixel_values:i}),u="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>(0,l.softmax)(e.data),c=[];for(const e of d.logits_per_image){const n=[...u(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),c.push(n)}return r?c:c[0]}}class O extends f{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const s=await p(e),o=n?null:s.map((e=>[e.height,e.width])),{pixel_values:a,pixel_mask:i}=await this.processor(s),l=await this.model({pixel_values:a,pixel_mask:i}),d=this.processor.image_processor.post_process_object_detection(l,t,o),u=this.model.config.id2label,c=d.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:u[e.classes[r]],box:h(t,!n)})))));return r?c:c[0]}}class D extends f{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:s=!1}={}){const o=Array.isArray(e),a=await p(e),i=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(a),d=[];for(let e=0;e<a.length;++e){const o=a[e],u=s?null:[[o.height,o.width]],c=l.pixel_values[e].unsqueeze_(0),p=await this.model({...i,pixel_values:c});let m;if("post_process_grounded_object_detection"in this.processor){const e=this.processor.post_process_grounded_object_detection(p,i.input_ids,{box_threshold:n,text_threshold:n,target_sizes:u})[0];m=e.boxes.map(((t,n)=>({score:e.scores[n],label:e.labels[n],box:h(t,!s)})))}else{const e=this.processor.image_processor.post_process_object_detection(p,n,u,!0)[0];m=e.boxes.map(((n,r)=>({score:e.scores[r],label:t[e.classes[r]],box:h(n,!s)})))}m.sort(((e,t)=>t.score-e.score)),null!==r&&(m=m.slice(0,r)),d.push(m)}return o?d:d[0]}}class B extends f{constructor(e){super(e)}async _call(e,t,n={}){const r=(await p(e))[0],{pixel_values:s}=await this.processor(r),o=`<s_docvqa><s_question>${t}</s_question><s_answer>`,a=this.tokenizer(o,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,i=await this.model.generate({inputs:s,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:a,...n}),l=this.tokenizer.batch_decode(i)[0].match(/<s_answer>(.*?)<\/s_answer>/);let d=null;return l&&l.length>=2&&(d=l[1].trim()),[{answer:d}]}}class N extends f{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return new d.RawAudio(n.data,r)}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await s.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new u.Tensor("float32",t,[1,t.length]);else if(!(t instanceof u.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),o=this.processor.feature_extractor.config.sampling_rate;return new d.RawAudio(r.data,o)}}class R extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),r=await this.model(n),s=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");s.push(c.RawImage.fromTensor(t))}return s.length>1?s:s[0]}}class j extends f{constructor(e){super(e)}async _call(e){const t=await p(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),s=[];for(let e=0;e<t.length;++e){const n=r[e],[o,a]=n.dims.slice(-2),[i,l]=t[e].size,d=(await(0,u.interpolate_4d)(n.view(1,1,o,a),{size:[l,i],mode:"bilinear"})).view(l,i),p=d.min().item(),m=d.max().item(),h=d.sub(p).div_(m-p).mul_(255).to("uint8").unsqueeze(0),f=c.RawImage.fromTensor(h);s.push({predicted_depth:d,depth:f})}return s.length>1?s:s[0]}}const V=Object.freeze({"text-classification":{tokenizer:r.AutoTokenizer,pipeline:_,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:r.AutoTokenizer,pipeline:g,model:s.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:r.AutoTokenizer,pipeline:w,model:s.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:r.AutoTokenizer,pipeline:b,model:s.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:r.AutoTokenizer,pipeline:M,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:r.AutoTokenizer,pipeline:x,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:r.AutoTokenizer,pipeline:y,model:s.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:r.AutoTokenizer,pipeline:T,model:s.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:r.AutoTokenizer,pipeline:k,model:s.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:C,model:s.AutoModelForAudioClassification,processor:o.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:r.AutoTokenizer,pipeline:S,model:s.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:r.AutoTokenizer,pipeline:F,model:[s.AutoModelForSpeechSeq2Seq,s.AutoModelForCTC],processor:o.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:r.AutoTokenizer,pipeline:N,model:[s.AutoModelForTextToWaveform,s.AutoModelForTextToSpectrogram],processor:[o.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:r.AutoTokenizer,pipeline:E,model:s.AutoModelForVision2Seq,processor:o.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:I,model:s.AutoModelForImageClassification,processor:o.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:A,model:[s.AutoModelForImageSegmentation,s.AutoModelForSemanticSegmentation,s.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:z,model:[s.AutoModelForImageSegmentation,s.AutoModelForSemanticSegmentation,s.AutoModelForUniversalSegmentation],processor:o.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:r.AutoTokenizer,pipeline:L,model:s.AutoModel,processor:o.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:O,model:s.AutoModelForObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:r.AutoTokenizer,pipeline:D,model:s.AutoModelForZeroShotObjectDetection,processor:o.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:r.AutoTokenizer,pipeline:B,model:s.AutoModelForDocumentQuestionAnswering,processor:o.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:R,model:s.AutoModelForImageToImage,processor:o.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:j,model:s.AutoModelForDepthEstimation,processor:o.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:r.AutoTokenizer,pipeline:P,model:s.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:o.AutoProcessor,pipeline:$,model:[s.AutoModelForImageFeatureExtraction,s.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),G=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function q(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:s=null,local_files_only:o=!1,revision:a="main",device:l=null,dtype:d=null,subfolder:u="onnx",use_external_data_format:c=null,model_file_name:p=null,session_options:m={}}={}){e=G[e]??e;const h=V[e.split("_",1)[0]];if(!h)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(V)}]`);t||(t=h.default.model,console.log(`No model specified. Using default model: "${t}".`));const f={progress_callback:n,config:r,cache_dir:s,local_files_only:o,revision:a,device:l,dtype:d,subfolder:u,use_external_data_format:c,model_file_name:p,session_options:m},_=new Map([["tokenizer",h.tokenizer],["model",h.model],["processor",h.processor]]),g=await async function(e,t,n){const r=Object.create(null),s=[];for(const[o,a]of e.entries()){if(!a)continue;let e;e=Array.isArray(a)?new Promise((async(e,r)=>{let s;for(const o of a){if(null===o)return void e(null);try{return void e(await o.from_pretrained(t,n))}catch(e){if(e.message?.includes("Unsupported model type"))s=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);s=e}}}r(s)})):a.from_pretrained(t,n),r[o]=e,s.push(e)}await Promise.all(s);for(const[e,t]of Object.entries(r))r[e]=await t;return r}(_,t,f);g.task=e,(0,i.dispatchCallback)(n,{status:"ready",task:e,model:t});return new(0,h.pipeline)(g)}},"./src/tokenizers.js":(e,t,n)=>{n.r(t),n.d(t,{AlbertTokenizer:()=>Te,AutoTokenizer:()=>gt,BartTokenizer:()=>Be,BertTokenizer:()=>ve,BlenderbotSmallTokenizer:()=>ut,BlenderbotTokenizer:()=>dt,BloomTokenizer:()=>Ve,CLIPTokenizer:()=>ot,CamembertTokenizer:()=>Ae,CodeGenTokenizer:()=>st,CodeLlamaTokenizer:()=>Ue,CohereTokenizer:()=>ht,ConvBertTokenizer:()=>Fe,DebertaTokenizer:()=>$e,DebertaV2Tokenizer:()=>Ce,DistilBertTokenizer:()=>Ie,ElectraTokenizer:()=>Le,Ernie4_5_Tokenizer:()=>_t,EsmTokenizer:()=>Xe,FalconTokenizer:()=>Qe,GPT2Tokenizer:()=>De,GPTNeoXTokenizer:()=>Ke,GemmaTokenizer:()=>Ye,Grok1Tokenizer:()=>Ze,HerbertTokenizer:()=>Se,LlamaTokenizer:()=>qe,M2M100Tokenizer:()=>nt,MBart50Tokenizer:()=>Re,MBartTokenizer:()=>Ne,MPNetTokenizer:()=>He,MarianTokenizer:()=>it,MgpstrTokenizer:()=>ft,MobileBertTokenizer:()=>ke,NllbTokenizer:()=>tt,NougatTokenizer:()=>pt,PreTrainedTokenizer:()=>xe,Qwen2Tokenizer:()=>Je,RoFormerTokenizer:()=>Ee,RobertaTokenizer:()=>je,SiglipTokenizer:()=>at,SpeechT5Tokenizer:()=>ct,SqueezeBertTokenizer:()=>Pe,T5Tokenizer:()=>Oe,TokenizerModel:()=>v,VitsTokenizer:()=>mt,Wav2Vec2CTCTokenizer:()=>lt,WhisperTokenizer:()=>rt,XLMRobertaTokenizer:()=>We,XLMTokenizer:()=>ze,is_chinese_char:()=>g});var r=n("./src/utils/generic.js"),s=n("./src/utils/core.js"),o=n("./src/utils/hub.js"),a=n("./src/utils/maths.js"),i=n("./src/utils/tensor.js"),l=n("./src/utils/data-structures.js"),d=n("./node_modules/@huggingface/jinja/dist/index.js"),u=n("./src/models/whisper/common_whisper.js");async function c(e,t){const n=await Promise.all([(0,o.getModelJSON)(e,"tokenizer.json",!0,t),(0,o.getModelJSON)(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function p(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of M)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=(0,s.escapeRegExp)(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function m(e){return new Map(Object.entries(e))}function h(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function f(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function _(e){return e.replace(/\p{M}/gu,"")}function g(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const w="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",b=new RegExp(`^[${w}]+$`,"gu"),y=".,!?…。，、।۔،",M=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${y}])]+`,` ?[^\\s${y}]+`]]);class x{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class v extends r.Callable{constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new T(e);case"Unigram":return new k(e,...t);case"BPE":return new C(e);default:if(e.vocab)return Array.isArray(e.vocab)?new k(e,...t):Object.hasOwn(e,"continuing_subword_prefix")&&Object.hasOwn(e,"unk_token")?Object.hasOwn(e,"merges")?new C(e):new T(e):new S(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){return e=this.encode(e),this.fuse_unk&&(e=function(e,t,n){const r=[];let s=0;for(;s<e.length;)if(r.push(e[s]),(t.get(e[s])??n)===n)for(;++s<e.length&&(t.get(e[s])??n)===n;)t.get(r.at(-1))!==n&&(r[r.length-1]+=e[s]);else++s;return r}(e,this.tokens_to_ids,this.unk_token_id)),e}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class T extends v{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,s=0;const o=[];for(;s<e.length;){let t=e.length,n=null;for(;s<t;){let r=e.slice(s,t).join("");if(s>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}o.push(n),s=t}r?t.push(this.unk_token):t.push(...o)}return t}}class k extends v{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t)[this.vocab[t],this.scores[t]]=e.vocab[t];this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,a.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.chars;let n=0;for(;n<t.length;){let r=!1;const o=[],a=t.slice(n).join(""),i=this.trie.commonPrefixSearch(a);for(const t of i){o.push(t);const a=this.tokens_to_ids.get(t),i=this.scores[a],l=(0,s.len)(t);e.insert(n,l,i,a),r||1!==l||(r=!0)}r||e.insert(n,1,this.unk_score,this.unk_token_id),n+=1}}tokenize(e){const t=new l.TokenLattice(e,this.bos_token_id,this.eos_token_id);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const P=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),$=(0,s.reverseDictionary)(P);class C extends v{constructor(e){super(e),this.tokens_to_ids=m(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;const t=Array.isArray(e.merges[0]);this.merges=t?e.merges:e.merges.map((e=>e.split(" ",2))),this.bpe_ranks=new Map(this.merges.map(((e,t)=>[JSON.stringify(e),t]))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new l.PriorityQueue(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},s=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:s,next:null};s.next=r,this._add_node(e,s),s=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return e.length<this.max_length_to_cache&&this.cache.put(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(JSON.stringify([t.token,t.next.token]));void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)if(this.tokens_to_ids.has(n))t.push(n);else if(this.byte_fallback){const e=Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`));e.every((e=>this.tokens_to_ids.has(e)))?t.push(...e):t.push(this.unk_token)}else t.push(this.unk_token)}return t}}class S extends v{constructor(e,t){super(e),this.tokens_to_ids=m(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class F extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new V(e);case"Precompiled":return new he(e);case"Sequence":return new j(e);case"Replace":return new E(e);case"NFC":return new A(e);case"NFD":return new z(e);case"NFKC":return new L(e);case"NFKD":return new O(e);case"Strip":return new D(e);case"StripAccents":return new B(e);case"Lowercase":return new N(e);case"Prepend":return new R(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class E extends F{normalize(e){const t=p(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class I extends F{form=void 0;normalize(e){return e=e.normalize(this.form)}}class A extends I{form="NFC"}class z extends I{form="NFD"}class L extends I{form="NFKC"}class O extends I{form="NFKD"}class D extends F{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class B extends F{normalize(e){return e=_(e)}}class N extends F{normalize(e){return e=e.toLowerCase()}}class R extends F{normalize(e){return e=this.config.prepend+e}}class j extends F{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>F.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class V extends F{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];g(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/\p{Mn}/gu,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class G extends r.Callable{static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new q(e);case"Sequence":return new fe(e);case"Whitespace":return new _e(e);case"WhitespaceSplit":return new ge(e);case"Metaspace":return new pe(e);case"ByteLevel":return new U(e);case"Split":return new W(e);case"Punctuation":return new H(e);case"Digits":return new Q(e);case"Replace":return new we(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class q extends G{constructor(e){super(),this.pattern=new RegExp(`[^\\s${w}]+|[${w}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class U extends G{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=P,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e);return(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class W extends G{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:"removed"===this.config.behavior?.toLowerCase()?e.split(this.pattern).filter((e=>e)):function(e,t){const n=[];let r=0;for(const s of e.matchAll(t)){const t=s[0];r<s.index&&n.push(e.slice(r,s.index)),t.length>0&&n.push(t),r=s.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class H extends G{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${w}]+|[${w}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class Q extends G{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class K extends r.Callable{constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new Y(e);case"ByteLevel":return new Z(e);case"RobertaProcessing":return new J(e);case"BertProcessing":return new X(e);case"Sequence":return new ee(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class X extends K{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=(0,s.mergeArrays)([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const o=n&&this instanceof J?[this.sep]:[],a=n?[this.sep]:[];e=(0,s.mergeArrays)(e,o,t,a),r=(0,s.mergeArrays)(r,new Array(t.length+o.length+a.length).fill(1))}return{tokens:e,token_type_ids:r}}}class J extends X{}class Y extends K{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let o=[],a=[];for(const i of r)"SpecialToken"in i?n&&(o.push(i.SpecialToken.id),a.push(i.SpecialToken.type_id)):"Sequence"in i&&("A"===i.Sequence.id?(o=(0,s.mergeArrays)(o,e),a=(0,s.mergeArrays)(a,new Array(e.length).fill(i.Sequence.type_id))):"B"===i.Sequence.id&&(o=(0,s.mergeArrays)(o,t),a=(0,s.mergeArrays)(a,new Array(t.length).fill(i.Sequence.type_id))));return{tokens:o,token_type_ids:a}}}class Z extends K{post_process(e,t=null){return t&&(e=(0,s.mergeArrays)(e,t)),{tokens:e}}}class ee extends K{constructor(e){super(e),this.processors=e.processors.map((e=>K.fromConfig(e)))}post_process(e,t=null,n={}){let r;for(const s of this.processors)if(s instanceof Z){if(e=s.post_process(e).tokens,t){t=s.post_process(t).tokens}}else{const o=s.post_process(e,t,n);e=o.tokens,r=o.token_type_ids}return{tokens:e,token_type_ids:r}}}class te extends r.Callable{constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new ae(e);case"Metaspace":return new me(e);case"ByteLevel":return new ie(e);case"Replace":return new ne(e);case"ByteFallback":return new re(e);case"Fuse":return new se(e);case"Strip":return new oe(e);case"Sequence":return new de(e);case"CTC":return new le(e);case"BPEDecoder":return new ue(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class ne extends te{decode_chain(e){const t=p(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class re extends te{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class se extends te{decode_chain(e){return[e.join("")]}}class oe extends te{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class ae extends te{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=f(e)),e)))}}class ie extends te{constructor(e){super(e),this.byte_decoder=$,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class le extends te{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=f(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class de extends te{constructor(e){super(e),this.decoders=e.decoders.map((e=>te.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class ue extends te{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class ce extends te{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class pe extends G{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class me extends te{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class he extends F{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class fe extends G{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>G.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class _e extends G{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class ge extends G{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class we extends G{constructor(e){super(),this.config=e,this.pattern=p(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const be=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function ye(e,t,n,r){for(const o of Object.keys(e)){const a=t-e[o].length,i=n(o),l=new Array(a).fill(i);e[o]="right"===r?(0,s.mergeArrays)(e[o],l):(0,s.mergeArrays)(l,e[o])}}function Me(e,t){for(const n of Object.keys(e))e[n].length=t}class xe extends r.Callable{return_token_type_ids=!1;padding_side="right";constructor(e,t){super(),this.config=t,this.normalizer=F.fromConfig(e.normalizer),this.pre_tokenizer=G.fromConfig(e.pre_tokenizer),this.model=v.fromConfig(e.model,t),this.post_processor=K.fromConfig(e.post_processor),this.decoder=te.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new x(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map((e=>e.content))),this.added_tokens_map=new Map(this.added_tokens.map((e=>[e.content,e]))),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.add_bos_token=t.add_bos_token,this.add_eos_token=t.add_eos_token,this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this.config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:o="main",legacy:a=null}={}){return new this(...await c(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:o,legacy:a}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:s=null,max_length:o=null,return_tensor:l=!0,return_token_type_ids:d=null}={}){const u=Array.isArray(e);let c;if(u){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");c=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:d})))}else c=e.map((e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:d})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");c=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:d})]}if(null===o?o=this.model_max_length:null===s&&(!0===r?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),o=this.model_max_length):!1===r&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),s=!0)),!0===r&&(o=Math.min((0,a.max)(c.map((e=>e.input_ids.length)))[0],o??1/0)),o=Math.min(o,this.model_max_length??1/0),r||s)for(let e=0;e<c.length;++e)c[e].input_ids.length!==o&&(c[e].input_ids.length>o?s&&Me(c[e],o):r&&ye(c[e],o,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const p={};if(l){if((!r||!s)&&c.some((e=>{for(const t of Object.keys(e))if(e[t].length!==c[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[c.length,c[0].input_ids.length];for(const t of Object.keys(c[0]))p[t]=new i.Tensor("int64",BigInt64Array.from(c.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(c[0]))p[e]=c.map((t=>t[e]));if(!u)for(const e of Object.keys(p))p[e]=p[e][0]}return p}_encode_text(e){if(null===e)return null;const t=this.added_tokens_splitter.split(e);for(let e=0;e<t.length;++e){const n=this.added_tokens_map.get(t[e]);n&&(n.lstrip&&e>0&&(t[e-1]=t[e-1].trimEnd()),n.rstrip&&e<t.length-1&&(t[e+1]=t[e+1].trimStart()))}const n=t.flatMap(((e,t)=>{if(0===e.length)return[];if(this.added_tokens_map.has(e))return[e];if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return _(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}));return n}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:s,token_type_ids:o}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),a=this.model.convert_tokens_to_ids(s),i={input_ids:a,attention_mask:new Array(a.length).fill(1)};return(r??this.return_token_type_ids)&&o&&(i.token_type_ids=o),i}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),o=this._encode_text(t);return this.post_processor?this.post_processor(r,o,{add_special_tokens:n}):{tokens:(0,s.mergeArrays)(r??[],o??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof i.Tensor&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof i.Tensor&&(e=h(e)),!Array.isArray(e)||0===e.length||!(0,s.isIntegralNumber)(e[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let s=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(s=s.replaceAll(this.decoder.end_of_word_suffix," "),t&&(s=s.trim())),(n??this.clean_up_tokenization_spaces)&&(s=f(s)),s}get_chat_template({chat_template:e=null,tools:t=null}={}){if(this.chat_template&&"object"==typeof this.chat_template){const n=this.chat_template;if(null!==e&&Object.hasOwn(n,e))e=n[e];else if(null===e)if(null!==t&&"tool_use"in n)e=n.tool_use;else{if(!("default"in n))throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(n).sort()}.`);e=n.default}}else if(null===e){if(!this.chat_template)throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");e=this.chat_template}return e}apply_chat_template(e,{tools:t=null,documents:n=null,chat_template:r=null,add_generation_prompt:s=!1,tokenize:o=!0,padding:a=!1,truncation:i=!1,max_length:l=null,return_tensor:u=!0,return_dict:c=!1,tokenizer_kwargs:p={},...m}={}){if("string"!=typeof(r=this.get_chat_template({chat_template:r,tools:t})))throw Error("chat_template must be a string, but got "+typeof r);let h=this._compiled_template_cache.get(r);void 0===h&&(h=new d.Template(r),this._compiled_template_cache.set(r,h));const f=Object.create(null);for(const e of be){const t=this.getToken(e);t&&(f[e]=t)}const _=h.render({messages:e,add_generation_prompt:s,tools:t,documents:n,...f,...m});if(o){const e=this._call(_,{add_special_tokens:!1,padding:a,truncation:i,max_length:l,return_tensor:u,...p});return c?e:e.input_ids}return _}}class ve extends xe{return_token_type_ids=!0}class Te extends xe{return_token_type_ids=!0}class ke extends xe{return_token_type_ids=!0}class Pe extends xe{return_token_type_ids=!0}class $e extends xe{return_token_type_ids=!0}class Ce extends xe{return_token_type_ids=!0}class Se extends xe{return_token_type_ids=!0}class Fe extends xe{return_token_type_ids=!0}class Ee extends xe{return_token_type_ids=!0}class Ie extends xe{}class Ae extends xe{}class ze extends xe{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class Le extends xe{return_token_type_ids=!0}class Oe extends xe{}class De extends xe{}class Be extends xe{}class Ne extends xe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class Re extends Ne{}class je extends xe{}class Ve extends xe{}const Ge="▁";class qe extends xe{padding_side="left";constructor(e,t){super(e,t),this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new pe({replacement:Ge,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(Ge+e.replaceAll(Ge," "));return t.length>1&&t[0]===Ge&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}}class Ue extends xe{}class We extends xe{}class He extends xe{}class Qe extends xe{}class Ke extends xe{}class Xe extends xe{}class Je extends xe{}class Ye extends xe{}class Ze extends xe{}function et(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const s=r.src_lang,o=r.tgt_lang;if(!e.language_codes.includes(o))throw new Error(`Target language code "${o}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==s){if(!e.language_codes.includes(s))throw new Error(`Source language code "${s}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(s);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(o)])[0],e._call(t,n)}class tt extends xe{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class nt extends xe{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return et(this,e,t,n)}}class rt extends xe{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:s=!0}={}){if(null===r)throw Error("Must specify time_precision");let o=null;const i="word"===t;function l(){return{language:o,timestamp:[null,null],text:""}}const d=[];let c=l(),p=0;const m=this.timestamp_begin,h=m+1500;let f=[],_=[],g=!1,w=null;const y=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,s=i?n.token_timestamps:null;let M=null,x=m;if("stride"in n){const[t,s,o]=n.stride;if(p-=s,w=t-o,s&&(x=s/r+m),o)for(let t=e.length-1;t>=0;--t){const n=Number(e[t]);if(n>=m){if(null!==M&&(n-m)*r<w)break;M=n}}}let v=[],T=[];for(let n=0;n<e.length;++n){const w=Number(e[n]);if(y.has(w)){const e=this.decode([w]),n=u.WHISPER_LANGUAGE_MAPPING.get(e.slice(2,-2));if(void 0!==n){if(null!==o&&n!==o&&!t){f.push(v);const e=this.findLongestCommonSequence(f)[0],t=this.decode(e);c.text=t,d.push(c),f=[],v=[],c=l()}o=c.language=n}}else if(w>=m&&w<=h){const e=(w-m)*r+p,t=(0,a.round)(e,2);if(null!==M&&w>=M)g=!0;else if(g||f.length>0&&w<x)g=!1;else if(null===c.timestamp[0])c.timestamp[0]=t;else if(t===c.timestamp[0]);else{c.timestamp[1]=t,f.push(v),i&&_.push(T);const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);c.text=r,i&&(c.words=this.collateWordTimestamps(e,n,o)),d.push(c),f=[],v=[],_=[],T=[],c=l()}}else if(v.push(w),i){let e,t=(0,a.round)(s[n]+p,2);if(n+1<s.length){e=(0,a.round)(s[n+1]+p,2);const o=this.decode([w]);b.test(o)&&(e=(0,a.round)(Math.min(t+r,e),2))}else e=null;T.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;p+=e-r}v.length>0?(f.push(v),i&&_.push(T)):f.every((e=>0===e.length))&&(c=l(),f=[],v=[],_=[],T=[])}if(f.length>0){if(s&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(f,_),r=this.decode(e);c.text=r,i&&(c.words=this.collateWordTimestamps(e,n,o)),d.push(c)}let M=Object.create(null);const x=d.map((e=>e.text)).join("");if(t||n){for(let e=0;e<d.length;++e){const r=d[e];t||delete r.timestamp,n||delete r.language}if(i){const e=[];for(const t of d)for(const n of t.words)e.push(n);M={chunks:e}}else M={chunks:d}}return[x,M]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,s=[];const o=Array.isArray(t)&&t.length>0;let a=o?[]:null,i=o?t[0]:null;for(let l=1;l<e.length;++l){const d=e[l];let u=0,c=[r,r,0,0];const p=d.length;for(let e=1;e<r+p;++e){const s=Math.max(0,r-e),a=Math.min(r,r+p-e),m=n.slice(s,a),h=Math.max(0,e-r),f=Math.min(p,e),_=d.slice(h,f);if(m.length!==_.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let g;g=o?m.filter(((e,n)=>e===_[n]&&i[s+n]<=t[l][h+n])).length:m.filter(((e,t)=>e===_[t])).length;const w=g/e+e/1e4;g>1&&w>u&&(u=w,c=[s,a,h,f])}const[m,h,f,_]=c,g=Math.floor((h+m)/2),w=Math.floor((_+f)/2);s.push(...n.slice(0,g)),n=d.slice(w),r=n.length,o&&(a.push(...i.slice(0,g)),i=t[l].slice(w))}return s.push(...n),o?(a.push(...i),[s,a]):[s,[]]}collateWordTimestamps(e,t,n){const[r,s,o]=this.combineTokensIntoWords(e,n),a=[];for(let e=0;e<r.length;++e){const n=o[e];a.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return a}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let s,o,a;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[s,o,a]=this.splitTokensOnUnicode(e):[s,o,a]=this.splitTokensOnSpaces(e),this.mergePunctuations(s,o,a,n,r)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof i.Tensor&&(e=h(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let s=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*n).toFixed(2);s.push(`<|${e}|>`),s.push([])}else s[s.length-1].push(t);return s=s.map((e=>"string"==typeof e?e:super.decode(e,t))),s.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],s=[];let o=[],a=[],i=0;for(let l=0;l<e.length;++l){const d=e[l];o.push(d),a.push(l);const u=this.decode(o,{decode_with_timestamps:!0});u.includes("�")&&"�"!==t[i+u.indexOf("�")]||(n.push(u),r.push(o),s.push(a),o=[],a=[],i+=u.length)}return[n,r,s]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),s=[],o=[],a=[],i=new RegExp(`^[${w}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],d=n[e],u=r[e],c=d[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=l.startsWith(" "),m=l.trim(),h=i.test(m);if(c||p||h||0===s.length)s.push(l),o.push(d),a.push(u);else{const e=s.length-1;s[e]+=l,o[e].push(...d),a[e].push(...u)}}return[s,o,a]}mergePunctuations(e,t,n,r,o){const a=structuredClone(e),i=structuredClone(t),l=structuredClone(n);let d=a.length-2,u=a.length-1;for(;d>=0;)a[d].startsWith(" ")&&r.includes(a[d].trim())?(a[u]=a[d]+a[u],i[u]=(0,s.mergeArrays)(i[d],i[u]),l[u]=(0,s.mergeArrays)(l[d],l[u]),a[d]="",i[d]=[],l[d]=[]):u=d,--d;for(d=0,u=1;u<a.length;)!a[d].endsWith(" ")&&o.includes(a[u])?(a[d]+=a[u],i[d]=(0,s.mergeArrays)(i[d],i[u]),l[d]=(0,s.mergeArrays)(l[d],l[u]),a[u]="",i[u]=[],l[u]=[]):d=u,++u;return[a.filter((e=>e)),i.filter((e=>e.length>0)),l.filter((e=>e.length>0))]}}class st extends xe{}class ot extends xe{}class at extends xe{}class it extends xe{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,s.mergeArrays)([e],super._encode_text(t))}}}class lt extends xe{}class dt extends xe{}class ut extends xe{}class ct extends xe{}class pt extends xe{}class mt extends xe{constructor(e,t){super(e,t),this.decoder=new ce({})}}class ht extends xe{}class ft extends xe{}class _t extends xe{}class gt{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Oe,DistilBertTokenizer:Ie,CamembertTokenizer:Ae,DebertaTokenizer:$e,DebertaV2Tokenizer:Ce,BertTokenizer:ve,HerbertTokenizer:Se,ConvBertTokenizer:Fe,RoFormerTokenizer:Ee,XLMTokenizer:ze,ElectraTokenizer:Le,MobileBertTokenizer:ke,SqueezeBertTokenizer:Pe,AlbertTokenizer:Te,GPT2Tokenizer:De,BartTokenizer:Be,MBartTokenizer:Ne,MBart50Tokenizer:Re,RobertaTokenizer:je,WhisperTokenizer:rt,CodeGenTokenizer:st,CLIPTokenizer:ot,SiglipTokenizer:at,MarianTokenizer:it,BloomTokenizer:Ve,NllbTokenizer:tt,M2M100Tokenizer:nt,LlamaTokenizer:qe,CodeLlamaTokenizer:Ue,XLMRobertaTokenizer:We,MPNetTokenizer:He,FalconTokenizer:Qe,GPTNeoXTokenizer:Ke,EsmTokenizer:Xe,Wav2Vec2CTCTokenizer:lt,BlenderbotTokenizer:dt,BlenderbotSmallTokenizer:ut,SpeechT5Tokenizer:ct,NougatTokenizer:pt,VitsTokenizer:mt,Qwen2Tokenizer:Je,GemmaTokenizer:Ye,Grok1Tokenizer:Ze,CohereTokenizer:ht,MgpstrTokenizer:ft,Ernie4_5_Tokenizer:_t,PreTrainedTokenizer:xe};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:s=!1,revision:o="main",legacy:a=null}={}){const[i,l]=await c(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:s,revision:o,legacy:a}),d=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let u=this.TOKENIZER_CLASS_MAPPING[d];return u||(console.warn(`Unknown tokenizer class "${d}", attempting to construct from base class.`),u=xe),new u(i,l)}}},"./src/utils/audio.js":(e,t,n)=>{n.r(t),n.d(t,{RawAudio:()=>x,hamming:()=>p,hanning:()=>c,mel_filter_bank:()=>g,read_audio:()=>d,spectrogram:()=>b,window_function:()=>y});var r=n("./src/utils/hub.js"),s=n("./src/utils/maths.js"),o=n("./src/utils/core.js"),a=n("./src/env.js"),i=n("./src/utils/tensor.js"),l=n("?7992");async function d(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await(0,r.getFile)(e)).arrayBuffer(),s=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${s.sampleRate}Hz.`);const o=await s.decodeAudioData(n);let a;if(2===o.numberOfChannels){const e=Math.sqrt(2),t=o.getChannelData(0),n=o.getChannelData(1);a=new Float32Array(t.length);for(let r=0;r<o.length;++r)a[r]=e*(t[r]+n[r])/2}else a=o.getChannelData(0);return a}function u(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),s=new Float64Array(e);for(let o=0;o<e;++o)s[o]=t-n*Math.cos(o*r);return s}function c(e){return u(e,.5)}function p(e){return u(e,.54)}const m={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function h(e,t="htk"){const n=m[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}const f={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function _(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function g(e,t,n,r,s,o=null,a="htk",i=!1){if(null!==o&&"slaney"!==o)throw new Error('norm must be one of null or "slaney"');if(e<2)throw new Error(`Require num_frequency_bins: ${e} >= 2`);if(n>r)throw new Error(`Require min_frequency: ${n} <= max_frequency: ${r}`);const l=_(h(n,a),h(r,a),t+2);let d,u=function(e,t="htk"){const n=f[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}(l,a);if(i){const t=s/(2*(e-1));d=h(Float64Array.from({length:e},((e,n)=>n*t)),a),u=l}else d=_(0,Math.floor(s/2),e);const c=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let n=0;n<e.length;++n){const s=r[n];for(let r=0;r<t.length;++r)s[r]=t[r]-e[n]}const s=t.length-2,o=Array.from({length:s},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<s;++r){const s=-e[r]/n[r],a=e[r+2]/n[r+1];o[r][t]=Math.max(0,Math.min(s,a))}}return o}(d,u);if(null!==o&&"slaney"===o)for(let n=0;n<t;++n){const t=c[n],r=2/(u[n+2]-u[n]);for(let n=0;n<e;++n)t[n]*=r}return c}function w(e,t,n,r,o){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const a=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-a);if(null!==o){if(o<=0)throw new Error("db_range must be greater than zero");const t=(0,s.max)(e)[0]-o;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function b(e,t,n,r,{fft_length:a=null,power:l=1,center:d=!0,pad_mode:u="reflect",onesided:c=!0,preemphasis:p=null,preemphasis_htk_flavor:m=!0,mel_filters:h=null,mel_floor:f=1e-10,log_mel:_=null,reference:g=1,min_value:b=1e-10,db_range:y=null,remove_dc_offset:M=null,min_num_frames:x=null,max_num_frames:v=null,do_pad:T=!0,transpose:k=!1}={}){const P=t.length;if(null===a&&(a=n),n>a)throw Error(`frame_length (${n}) may not be larger than fft_length (${a})`);if(P!==n)throw new Error(`Length of the window (${P}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===l&&null!==h)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!m)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(d){if("reflect"!==u)throw new Error(`pad_mode="${u}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),s=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[(0,o.calculateReflectOffset)(n,s)];for(let a=1;a<=n;++a)r[s+t+a]=e[(0,o.calculateReflectOffset)(s-a,s)];return r}(e,t,t)}let $=Math.floor(1+Math.floor((e.length-n)/r));null!==x&&$<x&&($=x);const C=c?Math.floor(a/2)+1:a;let S=$,F=$;null!==v&&(v>$?T&&(F=v):F=S=v);const E=new s.FFT(a),I=new Float64Array(a),A=new Float64Array(E.outputBufferSize),z=new Float32Array(C*F);for(let s=0;s<S;++s){const o=s*r,a=Math.min(e.length-o,n);a!==n&&I.fill(0,0,n);for(let t=0;t<a;++t)I[t]=e[o+t];if(M){let e=0;for(let t=0;t<a;++t)e+=I[t];const t=e/a;for(let e=0;e<a;++e)I[e]-=t}if(null!==p){for(let e=a-1;e>=1;--e)I[e]-=p*I[e-1];I[0]*=1-p}for(let e=0;e<t.length;++e)I[e]*=t[e];E.realTransform(A,I);for(let e=0;e<C;++e){const t=e<<1;z[e*F+s]=A[t]**2+A[t+1]**2}}if(null!==l&&2!==l){const e=l/2;for(let t=0;t<z.length;++t)z[t]**=e}const L=h.length;let O=await(0,i.matmul)(new i.Tensor("float32",h.flat(),[L,C]),new i.Tensor("float32",z,[C,F]));k&&(O=O.transpose(1,0));const D=O.data;for(let e=0;e<D.length;++e)D[e]=Math.max(f,D[e]);if(null!==l&&null!==_){const e=Math.min(D.length,S*L);switch(_){case"log":for(let t=0;t<e;++t)D[t]=Math.log(D[t]);break;case"log10":for(let t=0;t<e;++t)D[t]=Math.log10(D[t]);break;case"dB":if(1===l)!function(e,t=1,n=1e-5,r=null){w(e,20,t,n,r)}(D,g,b,y);else{if(2!==l)throw new Error(`Cannot use log_mel option '${_}' with power ${l}`);!function(e,t=1,n=1e-10,r=null){w(e,10,t,n,r)}(D,g,b,y)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${_}'`)}}return O}function y(e,t,{periodic:n=!0,frame_length:r=null,center:s=!0}={}){const o=n?e+1:e;let a;switch(t){case"boxcar":a=new Float64Array(o).fill(1);break;case"hann":case"hann_window":a=c(o);break;case"hamming":a=p(o);break;case"povey":a=c(o).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(a=a.subarray(0,e)),null===r)return a;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return a}function M(e,t,n){for(let r=0;r<n.length;++r)e.setUint8(t+r,n.charCodeAt(r))}class x{constructor(e,t){this.audio=e,this.sampling_rate=t}toWav(){return function(e,t){let n=44;const r=new ArrayBuffer(n+4*e.length),s=new DataView(r);M(s,0,"RIFF"),s.setUint32(4,36+4*e.length,!0),M(s,8,"WAVE"),M(s,12,"fmt "),s.setUint32(16,16,!0),s.setUint16(20,3,!0),s.setUint16(22,1,!0),s.setUint32(24,t,!0),s.setUint32(28,4*t,!0),s.setUint16(32,4,!0),s.setUint16(34,32,!0),M(s,36,"data"),s.setUint32(40,4*e.length,!0);for(let t=0;t<e.length;++t,n+=4)s.setFloat32(n,e[t],!0);return r}(this.audio,this.sampling_rate)}toBlob(){const e=this.toWav();return new Blob([e],{type:"audio/wav"})}async save(e){let t;if(a.apis.IS_BROWSER_ENV){if(a.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");t=o.saveBlob}else{if(!a.apis.IS_FS_AVAILABLE)throw new Error("Unable to save because filesystem is disabled in this environment.");t=async(e,t)=>{let n=await t.arrayBuffer();l.writeFileSync(e,Buffer.from(n))}}await t(e,this.toBlob())}}},"./src/utils/constants.js":(e,t,n)=>{n.r(t),n.d(t,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>s,FEATURE_EXTRACTOR_NAME:()=>o,GENERATION_CONFIG_NAME:()=>d,GITHUB_ISSUE_URL:()=>r,IMAGE_PROCESSOR_NAME:()=>a,PROCESSOR_NAME:()=>i});const r="https://github.com/huggingface/transformers.js/issues/new/choose",s="config.json",o="preprocessor_config.json",a=o,i="processor_config.json",l="chat_template.jinja",d="generation_config.json"},"./src/utils/core.js":(e,t,n)=>{function r(e,t){e&&e(t)}function s(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[t,e])))}function o(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function a(e){return"TypedArray"===e?.prototype?.__proto__?.constructor?.name}function i(e){return Number.isInteger(e)||"bigint"==typeof e}function l(e){return null==e||-1===e}function d(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function u(e,t,n=void 0){const r=e[t];if(void 0!==r)return delete e[t],r;if(void 0===n)throw Error(`Key ${t} does not exist in object.`);return n}function c(...e){return Array.prototype.concat.apply([],e)}function p(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function m(e,t){return Math.abs((e+t)%(2*t)-t)}function h(e,t){const n=URL.createObjectURL(t),r=document.createElement("a");r.href=n,r.download=e,r.click(),r.remove(),URL.revokeObjectURL(n)}function f(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}function _(e){let t=0;for(const n of e)++t;return t}function g(e,t){let n=0;for(const r of e)r===t&&++n;return n}n.r(t),n.d(t,{calculateDimensions:()=>d,calculateReflectOffset:()=>m,count:()=>g,dispatchCallback:()=>r,escapeRegExp:()=>o,isIntegralNumber:()=>i,isNullishDimension:()=>l,isTypedArray:()=>a,len:()=>_,mergeArrays:()=>c,pick:()=>f,pop:()=>u,product:()=>p,reverseDictionary:()=>s,saveBlob:()=>h})},"./src/utils/data-structures.js":(e,t,n)=>{n.r(t),n.d(t,{CharTrie:()=>s,DictionarySplitter:()=>l,LRUCache:()=>d,PriorityQueue:()=>r,TokenLattice:()=>a});class r{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class s{constructor(){this.root=o.default()}extend(e){for(const t of e)this.push(t)}push(e){let t=this.root;for(const n of e){let e=t.children.get(n);void 0===e&&(e=o.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root;if(void 0===t)return;let n="";for(const r of e){if(n+=r,t=t.children.get(r),void 0===t)return;t.isLeaf&&(yield n)}}}class o{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new o(!1,new Map)}}class a{constructor(e,t,n){this.chars=Array.from(e),this.len=this.chars.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new i(this.bosTokenId,0,0,0,0),s=new i(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(s.clone()),this.beginNodes[this.len].push(s),this.endNodes[0].push(r)}insert(e,t,n,r){const s=this.nodes.length,o=new i(r,s,e,t,n);this.beginNodes[e].push(o),this.endNodes[e+t].push(o),this.nodes.push(o)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let s of this.endNodes[t]){const t=s.backtraceScore+e.score;(null===r||t>n)&&(r=s.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let s=r.clone();for(;null!==s.prev;){n.push(s.clone());const e=s.clone();s=e.prev.clone()}return n.reverse(),n}piece(e){return this.chars.slice(e.pos,e.pos+e.length).join("")}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class i{constructor(e,t,n,r,s){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=s,this.prev=null,this.backtraceScore=0}clone(){const e=new i(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}class l{constructor(e){this.trie=this._buildTrie(e)}_buildTrie(e){const t=Object.create(null);for(const n of e){let e=t;for(let t=0;t<n.length;++t)e=e[n[t]]??=Object.create(null);e.end=n}return t}split(e){const t=[],n=e.length;let r=0,s=0;for(;s<n;){let o=this.trie,a=null,i=s;for(;i<n&&(o=o[e[i]]);)o.end&&(a=o.end),++i;a?(s>r&&t.push(e.slice(r,s)),t.push(a),s+=a.length,r=s):++s}return r<n&&t.push(e.slice(r)),t}}class d{constructor(e){this.capacity=e,this.cache=new Map}get(e){if(!this.cache.has(e))return;const t=this.cache.get(e);return this.cache.delete(e),this.cache.set(e,t),t}put(e,t){this.cache.has(e)&&this.cache.delete(e),this.cache.set(e,t),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}},"./src/utils/devices.js":(e,t,n)=>{n.r(t),n.d(t,{DEVICE_TYPES:()=>r});const r=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})},"./src/utils/dtypes.js":(e,t,n)=>{n.r(t),n.d(t,{DATA_TYPES:()=>a,DEFAULT_DEVICE_DTYPE_MAPPING:()=>i,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>o});var r=n("./src/env.js"),s=n("./src/utils/devices.js");const o=function(){let e;return async function(){if(void 0===e)if(r.apis.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),a=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),i=Object.freeze({[s.DEVICE_TYPES.wasm]:a.q8}),l=Object.freeze({[a.fp32]:"",[a.fp16]:"_fp16",[a.int8]:"_int8",[a.uint8]:"_uint8",[a.q8]:"_quantized",[a.q4]:"_q4",[a.q4f16]:"_q4f16",[a.bnb4]:"_bnb4"})},"./src/utils/generic.js":(e,t,n)=>{n.r(t),n.d(t,{Callable:()=>r});const r=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}}},"./src/utils/hub.js":(e,t,n)=>{n.r(t),n.d(t,{MAX_EXTERNAL_DATA_CHUNKS:()=>i,getFile:()=>p,getModelFile:()=>f,getModelJSON:()=>g,getModelText:()=>_});var r=n("?7992"),s=n("?5af5"),o=n("./src/env.js"),a=n("./src/utils/core.js");const i=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class d{constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=r.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=r.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();const n=r.createReadStream(e);this.body=new ReadableStream({start(e){n.on("data",(t=>e.enqueue(t))),n.on("end",(()=>e.close())),n.on("error",(t=>e.error(t)))},cancel(){n.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[e]??"application/octet-stream")}clone(){let e=new d(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await r.promises.readFile(this.filePath)).buffer}async blob(){const e=await r.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await r.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function u(e,t=null,n=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol))&&!(n&&!n.includes(r.hostname))}const c=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;async function p(e){if(o.env.useFS&&!u(e,["http:","https:","blob:"]))return new d(e instanceof URL?"file:"===e.protocol?e.pathname:e.toString():e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=o.env.version,r=new Headers;r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`);if(u(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const m={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class h{constructor(e){this.path=e}async match(e){let t=s.join(this.path,e),n=new d(t);return n.exists?n:void 0}async put(e,t,n=void 0){let o=s.join(this.path,e);try{const e=t.headers.get("Content-Length"),a=parseInt(e??"0");let i=0;await r.promises.mkdir(s.dirname(o),{recursive:!0});const l=r.createWriteStream(o),d=t.body.getReader();for(;;){const{done:e,value:t}=await d.read();if(e)break;await new Promise(((e,n)=>{l.write(t,(t=>{t?n(t):e()}))})),i+=t.length;const r=a?i/a*100:0;n?.({progress:r,loaded:i,total:a})}l.close()}catch(e){try{await r.promises.unlink(o)}catch{}throw e}}}async function f(e,t,n=!0,r={},s=!1){if(!o.env.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!o.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let i;if((0,a.dispatchCallback)(r.progress_callback,{status:"initiate",name:e,file:t}),!i&&o.env.useCustomCache){if(!o.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!o.env.customCache.match||!o.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");i=o.env.customCache}if(!i&&o.env.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{i=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!i&&o.env.useFSCache){if(!o.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");i=new h(r.cache_dir??o.env.cacheDir)}const l=r.revision??"main",f=w(e,t),_=(g=e,!(!c.test(g)||g.includes("..")||g.includes("--")||g.endsWith(".git")||g.endsWith(".ipynb")));var g;const b=_?w(o.env.localModelPath,f):f,y=w(o.env.remoteHost,o.env.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(l)),t);let M;const x=i instanceof h?"main"===l?f:w(e,l,t):y;let v,T=!1;i&&(v=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(i,b,x));const k=void 0!==v;if(void 0===v){if(o.env.allowLocalModels){if(u(f,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${f}.`);if(!o.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${f}.`)}else try{v=await p(b),M=b}catch(e){console.warn(`Unable to load from local path "${b}": "${e}"`)}}if(void 0===v||404===v.status){if(r.local_files_only||!o.env.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${b}".`);return null}if(!_)throw Error(`Local file missing at "${b}" and download aborted due to invalid model ID "${e}".`);if(v=await p(y),200!==v.status)return function(e,t,n){if(!n)return null;const r=m[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(v.status,y,n);M=x}T=i&&"undefined"!=typeof Response&&v instanceof Response&&200===v.status}let P;if((0,a.dispatchCallback)(r.progress_callback,{status:"download",name:e,file:t}),!o.apis.IS_NODE_ENV||!s){let n;r.progress_callback?k&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(n=new Uint8Array(await v.arrayBuffer()),(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,progress:100,loaded:n.length,total:n.length})):n=await async function(e,t){const n=e.headers.get("Content-Length");null===n&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let r=parseInt(n??"0"),s=new Uint8Array(r),o=0;const a=e.body.getReader();async function i(){const{done:e,value:n}=await a.read();if(e)return;const l=o+n.length;if(l>r){r=l;const e=new Uint8Array(r);e.set(s),s=e}s.set(n,o),o=l;return t({progress:o/r*100,loaded:o,total:r}),i()}return await i(),s}(v,(n=>{(0,a.dispatchCallback)(r.progress_callback,{status:"progress",name:e,file:t,...n})})):n=new Uint8Array(await v.arrayBuffer()),P=n}if(T&&M&&void 0===await i.match(M)&&(P?await i.put(M,new Response(P,{headers:v.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})):await i.put(M,v,r.progress_callback)),(0,a.dispatchCallback)(r.progress_callback,{status:"done",name:e,file:t}),P){if(!o.apis.IS_NODE_ENV&&s)throw new Error("Cannot return path in a browser environment.");return P}if(v instanceof d)return v.filePath;const $=await(i?.match(M));if($ instanceof d)return $.filePath;if($ instanceof Response)return new Uint8Array(await $.arrayBuffer());if("string"==typeof $)return $;throw new Error("Unable to get model file path or buffer.")}async function _(e,t,n=!0,r={}){const s=await f(e,t,n,r,!1);if(null===s)return null;return new TextDecoder("utf-8").decode(s)}async function g(e,t,n=!0,r={}){const s=await _(e,t,n,r);return null===s?{}:JSON.parse(s)}function w(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}},"./src/utils/image.js":(e,t,n)=>{n.r(t),n.d(t,{RawImage:()=>h,load_image:()=>f});var r=n("./src/utils/core.js"),s=n("./src/utils/hub.js"),o=n("./src/env.js"),a=n("./src/utils/tensor.js"),i=n("?2b25");let l,d,u;const c=o.apis.IS_BROWSER_ENV||o.apis.IS_WEBWORKER_ENV;if(c)l=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},u=self.createImageBitmap,d=self.ImageData;else{if(!i)throw new Error("Unable to load image processing library.");u=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),s=new h(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&s.convert(t),s}}const p={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},m=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class h{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof h)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);if(e instanceof Blob)return await this.fromBlob(e);if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas)return this.fromCanvas(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!c)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new h(t,e.width,e.height,4)}static async fromURL(e){const t=await(0,s.getFile)(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(c){const t=await u(e),n=l(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=i(await e.arrayBuffer());return await u(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new h(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],s=this.data[t+1],o=this.data[t+2];e[n++]=Math.round(.2989*r+.587*s+.114*o)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}putAlpha(e){if(e.width!==this.width||e.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${e.width}x${e.height}`);if(1!==e.channels)throw new Error(`Expected mask to have 1 channel, but got ${e.channels}`);const t=this.data,n=e.data,r=this.width*this.height;if(3===this.channels){const e=new Uint8ClampedArray(4*r);for(let s=0,o=0,a=0;s<r;++s)e[a++]=t[o++],e[a++]=t[o++],e[a++]=t[o++],e[a++]=n[s];return this._update(e,this.width,this.height,4)}if(4===this.channels){for(let e=0;e<r;++e)t[4*e+3]=n[e];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(e,t,{resample:n=2}={}){if(this.width===e&&this.height===t)return this;let s=p[n]??n;const o=(0,r.isNullishDimension)(e),a=(0,r.isNullishDimension)(t);if(o&&a)return this;if(o?e=t/this.height*this.width:a&&(t=e/this.width*this.height),c){const n=this.channels,r=this.toCanvas(),s=l(e,t).getContext("2d");s.drawImage(r,0,0,e,t);return new h(s.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(s){case"box":case"hamming":"box"!==s&&"hamming"!==s||(console.warn(`Resampling method ${s} is not yet supported. Using bilinear instead.`),s="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:s});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${s} is not supported.`)}return await u(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(c){const s=this.channels,o=this.toCanvas(),a=this.width+e+t,i=this.height+n+r,d=l(a,i).getContext("2d");d.drawImage(o,0,0,this.width,this.height,e,n,this.width,this.height);return new h(d.getImageData(0,0,a,i).data,a,i,4).convert(s)}{const s=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await u(s)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const s=n-e+1,o=r-t+1;if(c){const n=this.channels,r=this.toCanvas(),a=l(s,o).getContext("2d");a.drawImage(r,e,t,s,o,0,0,s,o);return new h(a.getImageData(0,0,s,o).data,s,o,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:s,height:o});return await u(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(c){const s=this.channels,o=this.toCanvas(),a=l(e,t).getContext("2d");let i=0,d=0,u=0,c=0;n>=0?i=n:u=-n,r>=0?d=r:c=-r,a.drawImage(o,i,d,e,t,u,c,e,t);return new h(a.getImageData(0,0,e,t).data,e,t,4).convert(s)}{let s=this.toSharp();if(n>=0&&r>=0)s=s.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const o=Math.floor(-r),a=Math.floor(-n);s=s.extend({top:o,left:a,right:e-this.width-a,bottom:t-this.height-o})}else{let o=[0,0],a=0;r<0?(o[0]=Math.floor(-r),o[1]=t-this.height-o[0]):a=Math.floor(r);let i=[0,0],l=0;n<0?(i[0]=Math.floor(-n),i[1]=e-this.width-i[0]):l=Math.floor(n),s=s.extend({top:o[0],bottom:o[1],left:i[0],right:i[1]}).extract({left:l,top:a,width:e,height:t})}return await u(s)}}async toBlob(e="image/png",t=1){if(!c)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new a.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!c)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=l(e.width,e.height),n=new d(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}split(){const{data:e,width:t,height:n,channels:r}=this,s=e.constructor,o=e.length/r,a=Array.from({length:r},(()=>new s(o)));for(let t=0;t<o;++t){const n=r*t;for(let s=0;s<r;++s)a[s][t]=e[n+s]}return a.map((e=>new h(e,t,n,1)))}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new h(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!c){if(o.apis.IS_FS_AVAILABLE){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=m.get(t)??"image/png",s=await this.toBlob(n);(0,r.saveBlob)(e,s)}}toSharp(){if(c)throw new Error("toSharp() is only supported in server-side environments.");return i(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const f=h.read.bind(h)},"./src/utils/maths.js":(e,t,n)=>{function r(e,[t,n,r],[s,o],a="bilinear",i=!1){const l=o/r,d=s/n,u=new e.constructor(s*o*t),c=n*r,p=s*o;for(let a=0;a<s;++a)for(let s=0;s<o;++s){const i=a*o+s,m=(s+.5)/l-.5,h=(a+.5)/d-.5;let f=Math.floor(m),_=Math.floor(h);const g=Math.min(f+1,r-1),w=Math.min(_+1,n-1);f=Math.max(f,0),_=Math.max(_,0);const b=m-f,y=h-_,M=(1-b)*(1-y),x=b*(1-y),v=(1-b)*y,T=b*y,k=_*r,P=w*r,$=k+f,C=k+g,S=P+f,F=P+g;for(let n=0;n<t;++n){const t=n*c;u[n*p+i]=M*e[t+$]+x*e[t+C]+v*e[t+S]+T*e[t+F]}}return u}function s(e,t,n){const r=new Array(n.length),s=new Array(n.length);for(let e=n.length-1,o=1;e>=0;--e)s[e]=o,r[e]=t[n[e]],o*=r[e];const o=n.map(((e,t)=>s[n.indexOf(t)])),a=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,s=n;e>=0;--e)r+=s%t[e]*o[e],s=Math.floor(s/t[e]);a[r]=e[n]}return[a,r]}function o(e){const t=c(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function a(e){const t=c(e)[0];let n=0;for(let r=0;r<e.length;++r)n+=Math.exp(e[r]-t);const r=Math.log(n);return e.map((e=>e-t-r))}function i(e,t){let n=0;for(let r=0;r<e.length;++r)n+=e[r]*t[r];return n}function l(e,t){return i(e,t)/(d(e)*d(t))}function d(e){return Math.sqrt(e.reduce(((e,t)=>e+t*t),0))}function u(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function c(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[t,n]}function p(e){return e>0&&!(e&e-1)}n.r(t),n.d(t,{FFT:()=>f,bankers_round:()=>w,cos_sim:()=>l,dot:()=>i,dynamic_time_warping:()=>b,interpolate_data:()=>r,log_softmax:()=>a,magnitude:()=>d,max:()=>c,medianFilter:()=>_,min:()=>u,permute_data:()=>s,round:()=>g,softmax:()=>o});class m{constructor(e){if(this.size=0|e,this.size<=1||!p(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let s,o,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(s=0,o=0;s<r;s+=i,++o){const n=l[o];this._singleTransform2(t,e,s,n,a)}else for(s=0,o=0;s<r;s+=i,++o){const r=l[o];this._singleTransform4(t,e,s,r,a,n)}const d=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>2;for(s=0;s<r;s+=i){const r=s+t-1;for(let o=s,i=0;o<r;o+=2,i+=a){const r=o,s=r+t,a=s+t,l=a+t,u=e[r],c=e[r+1],p=e[s],m=e[s+1],h=e[a],f=e[a+1],_=e[l],g=e[l+1],w=d[i],b=n*d[i+1],y=p*w-m*b,M=p*b+m*w,x=d[2*i],v=n*d[2*i+1],T=h*x-f*v,k=h*v+f*x,P=d[3*i],$=n*d[3*i+1],C=_*P-g*$,S=_*$+g*P,F=u+T,E=c+k,I=u-T,A=c-k,z=y+C,L=M+S,O=n*(y-C),D=n*(M-S);e[r]=F+z,e[r+1]=E+L,e[s]=I+D,e[s+1]=A-O,e[a]=F-z,e[a+1]=E-L,e[l]=I-D,e[l+1]=A+O}}}}_singleTransform2(e,t,n,r,s){const o=e[r],a=e[r+1],i=e[r+s],l=e[r+s+1];t[n]=o+i,t[n+1]=a+l,t[n+2]=o-i,t[n+3]=a-l}_singleTransform4(e,t,n,r,s,o){const a=2*s,i=3*s,l=e[r],d=e[r+1],u=e[r+s],c=e[r+s+1],p=e[r+a],m=e[r+a+1],h=e[r+i],f=e[r+i+1],_=l+p,g=d+m,w=l-p,b=d-m,y=u+h,M=c+f,x=o*(u-h),v=o*(c-f);t[n]=_+y,t[n+1]=g+M,t[n+2]=w+v,t[n+3]=b-x,t[n+4]=_-y,t[n+5]=g-M,t[n+6]=w-v,t[n+7]=b+x}_realTransform4(e,t,n){const r=this._csize;let s,o,a=1<<this._width,i=r/a<<1;const l=this._bitrev;if(4===i)for(s=0,o=0;s<r;s+=i,++o){const n=l[o];this._singleRealTransform2(t,e,s,n>>>1,a>>>1)}else for(s=0,o=0;s<r;s+=i,++o){const r=l[o];this._singleRealTransform4(t,e,s,r>>>1,a>>>1,n)}const d=this.table;for(a>>=2;a>=2;a>>=2){i=r/a<<1;const t=i>>>1,o=t>>>1,l=o>>>1;for(s=0;s<r;s+=i)for(let r=0,i=0;r<=l;r+=2,i+=a){const a=s+r,u=a+o,c=u+o,p=c+o,m=e[a],h=e[a+1],f=e[u],_=e[u+1],g=e[c],w=e[c+1],b=e[p],y=e[p+1],M=m,x=h,v=d[i],T=n*d[i+1],k=f*v-_*T,P=f*T+_*v,$=d[2*i],C=n*d[2*i+1],S=g*$-w*C,F=g*C+w*$,E=d[3*i],I=n*d[3*i+1],A=b*E-y*I,z=b*I+y*E,L=M+S,O=x+F,D=M-S,B=x-F,N=k+A,R=P+z,j=n*(k-A),V=n*(P-z);if(e[a]=L+N,e[a+1]=O+R,e[u]=D+V,e[u+1]=B-j,0===r){e[c]=L-N,e[c+1]=O-R;continue}if(r===l)continue;const G=s+o-r,q=s+t-r;e[G]=D-n*V,e[G+1]=-B-n*j,e[q]=L-n*N,e[q+1]=n*R-O}}const u=r>>>1;for(let t=2;t<u;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,n,r,s){const o=e[r],a=e[r+s];t[n]=o+a,t[n+1]=0,t[n+2]=o-a,t[n+3]=0}_singleRealTransform4(e,t,n,r,s,o){const a=2*s,i=3*s,l=e[r],d=e[r+s],u=e[r+a],c=e[r+i],p=l+u,m=l-u,h=d+c,f=o*(d-c);t[n]=p+h,t[n+1]=0,t[n+2]=m,t[n+3]=-f,t[n+4]=p-h,t[n+5]=0,t[n+6]=m,t[n+7]=f}}class h{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const s=new Float64Array(n),o=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const a=-2*Math.PI/e,i=Math.cos(a),l=Math.sin(a);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(i**2+l**2)**n,a=n*Math.atan2(l,i),d=2*t;s[d]=r*Math.cos(a),s[d+1]=r*Math.sin(a),o[d]=s[d],o[d+1]=-s[d+1]}this._slicedChirpBuffer=s.subarray(t,n),this._f=new m(r>>1),this._f.transform(this._chirpBuffer,o)}_transform(e,t,n){const r=this._buffer1,s=this._buffer2,o=this._outBuffer1,a=this._outBuffer2,i=this._chirpBuffer,l=this._slicedChirpBuffer,d=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,s=t[e>>1];r[e]=s*l[e],r[n]=s*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(o,r);for(let e=0;e<i.length;e+=2){const t=e+1;s[e]=o[e]*i[e]-o[t]*i[t],s[t]=o[e]*i[t]+o[t]*i[e]}this._f.inverseTransform(a,s);for(let t=0;t<a.length;t+=2){const n=a[t+d],r=a[t+d+1],s=l[t],o=l[t+1];e[t]=n*s-r*o,e[t+1]=n*o+r*s}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class f{constructor(e){this.fft_length=e,this.isPowerOfTwo=p(e),this.isPowerOfTwo?(this.fft=new m(e),this.outputBufferSize=2*e):(this.fft=new h(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function _(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),s=Math.floor(t/2);for(let t=0;t<e.length;++t){let o=0;for(let n=-s;n<=s;++n){let s=t+n;s<0?s=Math.abs(s):s>=e.length&&(s=2*(e.length-1)-s),r[o++]=e[s]}r.sort(),n[t]=r[s]}return n}function g(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function w(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}function b(e){const t=e.length,n=e[0].length,r=[t+1,n+1],s=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));s[0][0]=0;const o=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let n=1;n<r[0];++n){const r=s[n-1][t-1],a=s[n-1][t],i=s[n][t-1];let l,d;r<a&&r<i?(l=r,d=0):a<r&&a<i?(l=a,d=1):(l=i,d=2),s[n][t]=e[n-1][t-1]+l,o[n][t]=d}for(let e=0;e<r[1];++e)o[0][e]=2;for(let e=0;e<r[0];++e)o[e][0]=1;let a=t,i=n,l=[],d=[];for(;a>0||i>0;)switch(l.push(a-1),d.push(i-1),o[a][i]){case 0:--a,--i;break;case 1:--a;break;case 2:--i;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${a}, ${i}]. Please file a bug report.`)}return l.reverse(),d.reverse(),[l,d]}},"./src/utils/tensor.js":(e,t,n)=>{n.r(t),n.d(t,{DataTypeMap:()=>a,Tensor:()=>i,cat:()=>M,full:()=>$,full_like:()=>C,interpolate:()=>d,interpolate_4d:()=>u,layer_norm:()=>g,matmul:()=>c,mean:()=>k,mean_pooling:()=>_,ones:()=>S,ones_like:()=>F,permute:()=>l,quantize_embeddings:()=>z,rand:()=>A,rfft:()=>p,slice:()=>f,stack:()=>x,std_mean:()=>T,topk:()=>m,zeros:()=>E,zeros_like:()=>I});var r=n("./src/utils/maths.js"),s=n("./src/backends/onnx.js"),o=n("./src/ops/registry.js");const a=Object.freeze({float32:Float32Array,float16:"undefined"!=typeof Float16Array?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class i{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return(0,s.isONNXTensor)(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new s.Tensor(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=y(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new i(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,s=(e+1)*t,o="subarray"in this.data?this.data.subarray(r,s):this.data.slice(r,s);return new i(this.type,o,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length,r=t.reduce(((e,t)=>e*t));if(n!==r)throw Error(`cannot reshape array of size ${n} into shape (${t})`);let s=e;for(let e=t.length-1;e>=0;e--)s=s.reduce(((n,r)=>{let s=n[n.length-1];return s.length<t[e]?s.push(r):n.push([r]),n}),[[]]);return s[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}map(e){return this.clone().map_(e)}map_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]=e(t[n],n,t);return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}sub(e){return this.clone().sub_(e)}sub_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]-=e;return this}clone(){return new i(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let r=0;r<this.dims.length;++r){let s=e[r];if(null==s)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof s)s=y(s,this.dims[r],r),n.push([s,s+1]);else{if(!Array.isArray(s)||2!==s.length)throw new Error(`Invalid slice: ${s}`);{let[e,o]=s;if(e=null===e?0:y(e,this.dims[r],r,!1),o=null===o?this.dims[r]:y(o,this.dims[r],r,!1),e>o)throw new Error(`Invalid slice: ${s}`);const a=[Math.max(e,0),Math.min(o,this.dims[r])];n.push(a),t.push(a[1]-a[0])}}}const r=n.map((([e,t])=>t-e)),s=r.reduce(((e,t)=>e*t)),o=this.data,a=new o.constructor(s),l=this.stride();let d=!0;for(let e=1;e<r.length;++e)if(0!==n[e][0]||n[e][1]!==this.dims[e]){d=!1;break}if(d){const e=n[0][0]*l[0],t=n[0][1]*l[0];if(ArrayBuffer.isView(o))a.set(o.subarray(e,t));else{if(!Array.isArray(o))throw new Error("Unsupported data type for slicing");{const n=o.slice(e,t);for(let e=0;e<n.length;++e)a[e]=n[e]}}}else for(let e=0;e<s;++e){let t=0;for(let s=r.length-1,o=e;s>=0;--s){const e=r[s];t+=(o%e+n[s][0])*l[s],o=Math.floor(o/e)}a[e]=o[t]}return new i(this.type,a,t)}permute(...e){return l(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data,s=(t,n)=>t+n**e;if(null===t){const t=r.reduce(s,0)**(1/e);return new i(this.type,[t],[])}const[o,a,l]=v(s,this,t,n);if(1!==e)for(let t=0;t<a.length;++t)a[t]=a[t]**(1/e);return new i(o,a,l)}normalize_(e=2,t=1){t=y(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,s=n.data;for(let e=0;e<r.length;++e){let n=0;for(let r=this.dims.length-1,s=e,o=1;r>=0;--r){const e=this.dims[r];if(r!==t){n+=s%e*o,o*=this.dims[r]}s=Math.floor(s/e)}r[e]/=s[n]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new i(this.type,this.data,w(this.dims,e))}squeeze_(e=null){return this.dims=w(this.dims,e),this}unsqueeze(e=null){return new i(this.type,this.data,b(this.dims,e))}unsqueeze_(e=null){return this.dims=b(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),s=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...s],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}const n=this.data;if(-1!==t){const r=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=n.length/r}return new i(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}gt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]>e?1:0;return new i("bool",t,this.dims)}lt(e){const t=new Uint8Array(this.data.length),n=this.data;for(let r=0;r<n.length;++r)t[r]=n[r]<e?1:0;return new i("bool",t,this.dims)}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return k(this,e,t)}min(e=null,t=!1){if(null===e){const e=(0,r.min)(this.data)[0];return new i(this.type,[e],[])}const[n,s,o]=v(((e,t)=>Math.min(e,t)),this,e,t,1/0);return new i(n,s,o)}max(e=null,t=!1){if(null===e){const e=(0,r.max)(this.data)[0];return new i(this.type,[e],[])}const[n,s,o]=v(((e,t)=>Math.max(e,t)),this,e,t,-1/0);return new i(n,s,o)}argmin(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,r.min)(this.data)[1];return new i("int64",[BigInt(n)],[])}argmax(e=null,t=!1){if(null!==e)throw new Error("`dim !== null` not yet implemented.");const n=(0,r.max)(this.data)[1];return new i("int64",[BigInt(n)],[])}to(e){if(this.type===e)return this;if(!a.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);let t;const n=["int64","uint64"].includes(this.type),r=["int64","uint64"].includes(e);return n&&!r?t=Number:!n&&r&&(t=BigInt),new i(e,a[e].from(this.data,t),this.dims)}}function l(e,t){const[n,s]=(0,r.permute_data)(e.data,e.dims,t);return new i(e.type,n,s)}function d(e,[t,n],s="bilinear",o=!1){const a=e.dims.at(-3)??1,l=e.dims.at(-2),d=e.dims.at(-1);let u=(0,r.interpolate_data)(e.data,[a,l,d],[t,n],s,o);return new i(e.type,u,[a,t,n])}async function u(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,s;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("nearest"===n)s=await o.TensorOpRegistry.nearest_interpolate_4d;else if("bilinear"===n)s=await o.TensorOpRegistry.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);s=await o.TensorOpRegistry.bicubic_interpolate_4d}const a=new i("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await s({x:e,s:a})}async function c(e,t){const n=await o.TensorOpRegistry.matmul;return await n({a:e,b:t})}async function p(e,t){const n=await o.TensorOpRegistry.rfft;return await n({x:e,a:t})}async function m(e,t){const n=await o.TensorOpRegistry.top_k;return t=null==t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new i("int64",[BigInt(t)],[1])})}const h=e=>new i("int64",e,[e.length]);async function f(e,t,n,r,s){const a=await o.TensorOpRegistry.slice;return await a({x:e,s:h(t),e:h(n),a:h(r),t:h(s??new Array(r.length).fill(1))})}function _(e,t){const n=e.data,r=t.data,s=[e.dims[0],e.dims[2]],o=new n.constructor(s[0]*s[1]),[a,l,d]=e.dims;let u=0;for(let e=0;e<a;++e){const t=e*d*l;for(let s=0;s<d;++s){let a=0,i=0;const c=e*l,p=t+s;for(let e=0;e<l;++e){const t=Number(r[c+e]);i+=t,a+=n[p+e*d]*t}const m=a/i;o[u++]=m}}return new i(e.type,o,s)}function g(e,t,{eps:n=1e-5}={}){if(2!==e.dims.length)throw new Error("`layer_norm` currently only supports 2D input.");const[r,s]=e.dims;if(1!==t.length&&t[0]!==s)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[o,a]=T(e,1,0,!0),l=o.data,d=a.data,u=e.data,c=new u.constructor(u.length);for(let e=0;e<r;++e){const t=e*s;for(let r=0;r<s;++r){const s=t+r;c[s]=(u[s]-d[e])/(l[e]+n)}}return new i(e.type,c,e.dims)}function w(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function b(e,t){return t=y(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function y(e,t,n=null,r=!0){if(e<-t||e>=t){if(r)throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<-t?0:t}return e<0&&(e=(e%t+t)%t),e}function M(e,t=0){t=y(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),s=new e[0].data.constructor(r),o=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;s.set(e,t),t+=e.length}}else{let r=0;for(let o=0;o<e.length;++o){const{data:a,dims:i}=e[o];for(let e=0;e<a.length;++e){let o=0;for(let s=i.length-1,a=e,l=1;s>=0;--s){const e=i[s];let d=a%e;s===t&&(d+=r),o+=d*l,l*=n[s],a=Math.floor(a/e)}s[o]=a[e]}r+=i[t]}}return new i(o,s,n)}function x(e,t=0){return M(e.map((e=>e.unsqueeze(t))),t)}function v(e,t,n=null,r=!1,s=null){const o=t.data,a=t.dims;n=y(n,a.length);const i=a.slice();i[n]=1;const l=new o.constructor(o.length/a[n]);null!==s&&l.fill(s);for(let t=0;t<o.length;++t){let r=0;for(let e=a.length-1,s=t,o=1;e>=0;--e){const t=a[e];if(e!==n){r+=s%t*o,o*=i[e]}s=Math.floor(s/t)}l[r]=e(l[r],o[t],t,r)}return r||i.splice(n,1),[t.type,l,i]}function T(e,t=null,n=1,r=!1){const s=e.data,o=e.dims;if(null===t){const t=s.reduce(((e,t)=>e+t),0)/s.length,r=Math.sqrt(s.reduce(((e,n)=>e+(n-t)**2),0)/(s.length-n)),o=new i(e.type,[t],[]);return[new i(e.type,[r],[]),o]}const a=k(e,t=y(t,o.length),r),l=a.data,[d,u,c]=v(((e,t,n,r)=>e+(t-l[r])**2),e,t,r);for(let e=0;e<u.length;++e)u[e]=Math.sqrt(u[e]/(o[t]-n));return[new i(d,u,c),a]}function k(e,t=null,n=!1){const r=e.dims,s=e.data;if(null===t){const t=s.reduce(((e,t)=>e+t),0);return new i(e.type,[t/s.length],[])}t=y(t,r.length);const[o,a,l]=v(((e,t)=>e+t),e,t,n);if(1!==r[t])for(let e=0;e<a.length;++e)a[e]/=r[t];return new i(o,a,l)}function P(e,t,n,r){const s=e.reduce(((e,t)=>e*t),1);return new i(n,new r(s).fill(t),e)}function $(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else if("bigint"==typeof t)n="int64",r=BigInt64Array;else{if("boolean"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="bool",r=Uint8Array}return P(e,t,n,r)}function C(e,t){return $(e.dims,t)}function S(e){return P(e,1n,"int64",BigInt64Array)}function F(e){return S(e.dims)}function E(e){return P(e,0n,"int64",BigInt64Array)}function I(e){return E(e.dims)}function A(e){const t=e.reduce(((e,t)=>e*t),1);return new i("float32",Float32Array.from({length:t},(()=>Math.random())),e)}function z(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",s=n?Int8Array:Uint8Array,o=e.data,a=new s(o.length/8);for(let e=0;e<o.length;++e){const t=o[e]>0?1:0,r=Math.floor(e/8),s=e%8;a[r]|=t<<7-s,n&&0===s&&(a[r]-=128)}return new i(r,a,[e.dims[0],e.dims[1]/8])}},"./src/utils/video.js":(e,t,n)=>{n.r(t),n.d(t,{RawVideo:()=>a,RawVideoFrame:()=>o,load_video:()=>i});var r=n("./src/utils/image.js"),s=n("./src/env.js");class o{constructor(e,t){this.image=e,this.timestamp=t}}class a{constructor(e,t){e.length>0&&e[0]instanceof r.RawImage&&(e=e.map(((n,r)=>new o(n,(r+1)/(e.length+1)*t)))),this.frames=e,this.duration=t}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function i(e,{num_frames:t=null,fps:n=null}={}){if(!s.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(null==t&&null==n)throw new Error("Either num_frames or fps must be provided.");const i=[],l=document.createElement("video");if(l.crossOrigin="anonymous",l.muted=!0,"string"==typeof e)l.src=e;else if(e instanceof Blob)l.src=URL.createObjectURL(e);else{if(!(e instanceof HTMLVideoElement))throw new Error("Invalid URL or video element provided.");l.src=e.src}if(await new Promise((e=>l.onloadedmetadata=e)),l.seekable.start(0)===l.seekable.end(0)){const e=await fetch(l.src),t=await e.blob();l.src=URL.createObjectURL(t),await new Promise((e=>l.onloadedmetadata=e))}const d=l.duration;let u,c;null!=t?(u=t,c=1===t?0:d/(t-1)):(c=1/n,u=Math.floor(d/c));let p=[];for(let e=0;e<u;++e)p.push(1===t?d/2:e*c);const m=document.createElement("canvas");m.width=l.videoWidth,m.height=l.videoHeight;const h=m.getContext("2d",{willReadFrequently:!0});for(const e of p){l.currentTime=e,await new Promise((e=>{l.onseeked=e})),h.drawImage(l,0,0,m.width,m.height);const t=h.getImageData(0,0,m.width,m.height),n=new r.RawImage(t.data,m.width,m.height,4),s=new o(n,e);i.push(s)}return l.remove(),new a(i,d)}}},r={};function s(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={exports:{}};return n[e](o,o.exports,s),o.exports}t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,s.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var o=Object.create(null);s.r(o);var a={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&n;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>a[e]=()=>n[e]));return a.default=()=>n,s.d(o,a),o},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;if("string"==typeof import.meta.url&&(e=import.meta.url),!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),s.b=void 0;var o={};(()=>{s.r(o),s.d(o,{ASTFeatureExtractor:()=>m.ASTFeatureExtractor,ASTForAudioClassification:()=>n.ASTForAudioClassification,ASTModel:()=>n.ASTModel,ASTPreTrainedModel:()=>n.ASTPreTrainedModel,AlbertForMaskedLM:()=>n.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>n.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>n.AlbertForSequenceClassification,AlbertModel:()=>n.AlbertModel,AlbertPreTrainedModel:()=>n.AlbertPreTrainedModel,AlbertTokenizer:()=>r.AlbertTokenizer,ArceeForCausalLM:()=>n.ArceeForCausalLM,ArceeModel:()=>n.ArceeModel,ArceePreTrainedModel:()=>n.ArceePreTrainedModel,AudioClassificationPipeline:()=>t.AudioClassificationPipeline,AutoConfig:()=>a.AutoConfig,AutoFeatureExtractor:()=>h.AutoFeatureExtractor,AutoImageProcessor:()=>g.AutoImageProcessor,AutoModel:()=>n.AutoModel,AutoModelForAudioClassification:()=>n.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>n.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>n.AutoModelForAudioTextToText,AutoModelForCTC:()=>n.AutoModelForCTC,AutoModelForCausalLM:()=>n.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>n.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>n.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>n.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>n.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>n.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>n.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>n.AutoModelForImageTextToText,AutoModelForImageToImage:()=>n.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>n.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>n.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>n.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>n.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>n.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>n.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>n.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>n.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>n.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>n.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>n.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>n.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>n.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>n.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>n.AutoModelForVision2Seq,AutoModelForXVector:()=>n.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>n.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>y.AutoProcessor,AutoTokenizer:()=>r.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>t.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>t.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>n.BartForConditionalGeneration,BartForSequenceClassification:()=>n.BartForSequenceClassification,BartModel:()=>n.BartModel,BartPretrainedModel:()=>n.BartPretrainedModel,BartTokenizer:()=>r.BartTokenizer,BaseModelOutput:()=>n.BaseModelOutput,BaseStreamer:()=>M.BaseStreamer,BeitFeatureExtractor:()=>_.BeitFeatureExtractor,BeitForImageClassification:()=>n.BeitForImageClassification,BeitModel:()=>n.BeitModel,BeitPreTrainedModel:()=>n.BeitPreTrainedModel,BertForMaskedLM:()=>n.BertForMaskedLM,BertForQuestionAnswering:()=>n.BertForQuestionAnswering,BertForSequenceClassification:()=>n.BertForSequenceClassification,BertForTokenClassification:()=>n.BertForTokenClassification,BertModel:()=>n.BertModel,BertPreTrainedModel:()=>n.BertPreTrainedModel,BertTokenizer:()=>r.BertTokenizer,BitImageProcessor:()=>_.BitImageProcessor,BlenderbotForConditionalGeneration:()=>n.BlenderbotForConditionalGeneration,BlenderbotModel:()=>n.BlenderbotModel,BlenderbotPreTrainedModel:()=>n.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>n.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>n.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>n.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>r.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>r.BlenderbotTokenizer,BloomForCausalLM:()=>n.BloomForCausalLM,BloomModel:()=>n.BloomModel,BloomPreTrainedModel:()=>n.BloomPreTrainedModel,BloomTokenizer:()=>r.BloomTokenizer,CLIPFeatureExtractor:()=>_.CLIPFeatureExtractor,CLIPImageProcessor:()=>_.CLIPImageProcessor,CLIPModel:()=>n.CLIPModel,CLIPPreTrainedModel:()=>n.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>n.CLIPSegForImageSegmentation,CLIPSegModel:()=>n.CLIPSegModel,CLIPSegPreTrainedModel:()=>n.CLIPSegPreTrainedModel,CLIPTextModel:()=>n.CLIPTextModel,CLIPTextModelWithProjection:()=>n.CLIPTextModelWithProjection,CLIPTokenizer:()=>r.CLIPTokenizer,CLIPVisionModel:()=>n.CLIPVisionModel,CLIPVisionModelWithProjection:()=>n.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>n.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>n.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>n.CamembertForSequenceClassification,CamembertForTokenClassification:()=>n.CamembertForTokenClassification,CamembertModel:()=>n.CamembertModel,CamembertPreTrainedModel:()=>n.CamembertPreTrainedModel,CamembertTokenizer:()=>r.CamembertTokenizer,CausalLMOutput:()=>n.CausalLMOutput,CausalLMOutputWithPast:()=>n.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>_.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>n.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>n.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>n.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>m.ClapFeatureExtractor,ClapModel:()=>n.ClapModel,ClapPreTrainedModel:()=>n.ClapPreTrainedModel,ClapTextModelWithProjection:()=>n.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>v.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>n.CodeGenForCausalLM,CodeGenModel:()=>n.CodeGenModel,CodeGenPreTrainedModel:()=>n.CodeGenPreTrainedModel,CodeGenTokenizer:()=>r.CodeGenTokenizer,CodeLlamaTokenizer:()=>r.CodeLlamaTokenizer,CohereForCausalLM:()=>n.CohereForCausalLM,CohereModel:()=>n.CohereModel,CoherePreTrainedModel:()=>n.CoherePreTrainedModel,CohereTokenizer:()=>r.CohereTokenizer,ConvBertForMaskedLM:()=>n.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>n.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>n.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>n.ConvBertForTokenClassification,ConvBertModel:()=>n.ConvBertModel,ConvBertPreTrainedModel:()=>n.ConvBertPreTrainedModel,ConvBertTokenizer:()=>r.ConvBertTokenizer,ConvNextFeatureExtractor:()=>_.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>n.ConvNextForImageClassification,ConvNextImageProcessor:()=>_.ConvNextImageProcessor,ConvNextModel:()=>n.ConvNextModel,ConvNextPreTrainedModel:()=>n.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>n.ConvNextV2ForImageClassification,ConvNextV2Model:()=>n.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>n.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>n.DFineForObjectDetection,DFineModel:()=>n.DFineModel,DFinePreTrainedModel:()=>n.DFinePreTrainedModel,DINOv3ConvNextModel:()=>n.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>n.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>_.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>n.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>n.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>_.DPTFeatureExtractor,DPTForDepthEstimation:()=>n.DPTForDepthEstimation,DPTImageProcessor:()=>_.DPTImageProcessor,DPTModel:()=>n.DPTModel,DPTPreTrainedModel:()=>n.DPTPreTrainedModel,DacDecoderModel:()=>n.DacDecoderModel,DacDecoderOutput:()=>n.DacDecoderOutput,DacEncoderModel:()=>n.DacEncoderModel,DacEncoderOutput:()=>n.DacEncoderOutput,DacFeatureExtractor:()=>m.DacFeatureExtractor,DacModel:()=>n.DacModel,DacPreTrainedModel:()=>n.DacPreTrainedModel,DataTypeMap:()=>u.DataTypeMap,DebertaForMaskedLM:()=>n.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>n.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>n.DebertaForSequenceClassification,DebertaForTokenClassification:()=>n.DebertaForTokenClassification,DebertaModel:()=>n.DebertaModel,DebertaPreTrainedModel:()=>n.DebertaPreTrainedModel,DebertaTokenizer:()=>r.DebertaTokenizer,DebertaV2ForMaskedLM:()=>n.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>n.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>n.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>n.DebertaV2ForTokenClassification,DebertaV2Model:()=>n.DebertaV2Model,DebertaV2PreTrainedModel:()=>n.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>r.DebertaV2Tokenizer,DecisionTransformerModel:()=>n.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>n.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>_.DeiTFeatureExtractor,DeiTForImageClassification:()=>n.DeiTForImageClassification,DeiTImageProcessor:()=>_.DeiTImageProcessor,DeiTModel:()=>n.DeiTModel,DeiTPreTrainedModel:()=>n.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>n.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>n.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>t.DepthEstimationPipeline,DepthProForDepthEstimation:()=>n.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>n.DepthProPreTrainedModel,DetrFeatureExtractor:()=>_.DetrFeatureExtractor,DetrForObjectDetection:()=>n.DetrForObjectDetection,DetrForSegmentation:()=>n.DetrForSegmentation,DetrImageProcessor:()=>_.DetrImageProcessor,DetrModel:()=>n.DetrModel,DetrObjectDetectionOutput:()=>n.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>n.DetrPreTrainedModel,DetrSegmentationOutput:()=>n.DetrSegmentationOutput,Dinov2ForImageClassification:()=>n.Dinov2ForImageClassification,Dinov2Model:()=>n.Dinov2Model,Dinov2PreTrainedModel:()=>n.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>n.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>n.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>n.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>n.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>n.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>n.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>n.DistilBertForTokenClassification,DistilBertModel:()=>n.DistilBertModel,DistilBertPreTrainedModel:()=>n.DistilBertPreTrainedModel,DistilBertTokenizer:()=>r.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>t.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>_.DonutFeatureExtractor,DonutImageProcessor:()=>_.DonutImageProcessor,DonutSwinModel:()=>n.DonutSwinModel,DonutSwinPreTrainedModel:()=>n.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>n.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,EfficientNetModel:()=>n.EfficientNetModel,EfficientNetPreTrainedModel:()=>n.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>n.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>n.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>n.ElectraForSequenceClassification,ElectraForTokenClassification:()=>n.ElectraForTokenClassification,ElectraModel:()=>n.ElectraModel,ElectraPreTrainedModel:()=>n.ElectraPreTrainedModel,ElectraTokenizer:()=>r.ElectraTokenizer,EncodecFeatureExtractor:()=>m.EncodecFeatureExtractor,EosTokenCriteria:()=>x.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>n.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>n.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>n.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>r.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>n.EsmForMaskedLM,EsmForSequenceClassification:()=>n.EsmForSequenceClassification,EsmForTokenClassification:()=>n.EsmForTokenClassification,EsmModel:()=>n.EsmModel,EsmPreTrainedModel:()=>n.EsmPreTrainedModel,EsmTokenizer:()=>r.EsmTokenizer,ExaoneForCausalLM:()=>n.ExaoneForCausalLM,ExaoneModel:()=>n.ExaoneModel,ExaonePreTrainedModel:()=>n.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>n.FalconForCausalLM,FalconModel:()=>n.FalconModel,FalconPreTrainedModel:()=>n.FalconPreTrainedModel,FalconTokenizer:()=>r.FalconTokenizer,FastViTForImageClassification:()=>n.FastViTForImageClassification,FastViTModel:()=>n.FastViTModel,FastViTPreTrainedModel:()=>n.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>t.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>t.FillMaskPipeline,Florence2ForConditionalGeneration:()=>n.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>n.Florence2PreTrainedModel,Florence2Processor:()=>b.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>v.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>v.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>_.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>n.GLPNForDepthEstimation,GLPNModel:()=>n.GLPNModel,GLPNPreTrainedModel:()=>n.GLPNPreTrainedModel,GPT2LMHeadModel:()=>n.GPT2LMHeadModel,GPT2Model:()=>n.GPT2Model,GPT2PreTrainedModel:()=>n.GPT2PreTrainedModel,GPT2Tokenizer:()=>r.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>n.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>n.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>n.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>n.GPTJForCausalLM,GPTJModel:()=>n.GPTJModel,GPTJPreTrainedModel:()=>n.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>n.GPTNeoForCausalLM,GPTNeoModel:()=>n.GPTNeoModel,GPTNeoPreTrainedModel:()=>n.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>n.GPTNeoXForCausalLM,GPTNeoXModel:()=>n.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>n.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>r.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>n.Gemma2ForCausalLM,Gemma2Model:()=>n.Gemma2Model,Gemma2PreTrainedModel:()=>n.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>n.Gemma3ForCausalLM,Gemma3Model:()=>n.Gemma3Model,Gemma3PreTrainedModel:()=>n.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>m.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>n.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>n.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>b.Gemma3nProcessor,GemmaForCausalLM:()=>n.GemmaForCausalLM,GemmaModel:()=>n.GemmaModel,GemmaPreTrainedModel:()=>n.GemmaPreTrainedModel,GemmaTokenizer:()=>r.GemmaTokenizer,GlmForCausalLM:()=>n.GlmForCausalLM,GlmModel:()=>n.GlmModel,GlmPreTrainedModel:()=>n.GlmPreTrainedModel,GraniteForCausalLM:()=>n.GraniteForCausalLM,GraniteModel:()=>n.GraniteModel,GranitePreTrainedModel:()=>n.GranitePreTrainedModel,Grok1Tokenizer:()=>r.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>n.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>_.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>n.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>b.GroundingDinoProcessor,GroupViTModel:()=>n.GroupViTModel,GroupViTPreTrainedModel:()=>n.GroupViTPreTrainedModel,HeliumForCausalLM:()=>n.HeliumForCausalLM,HeliumModel:()=>n.HeliumModel,HeliumPreTrainedModel:()=>n.HeliumPreTrainedModel,HerbertTokenizer:()=>r.HerbertTokenizer,HieraForImageClassification:()=>n.HieraForImageClassification,HieraModel:()=>n.HieraModel,HieraPreTrainedModel:()=>n.HieraPreTrainedModel,HubertForCTC:()=>n.HubertForCTC,HubertForSequenceClassification:()=>n.HubertForSequenceClassification,HubertModel:()=>n.HubertModel,HubertPreTrainedModel:()=>n.HubertPreTrainedModel,IJepaForImageClassification:()=>n.IJepaForImageClassification,IJepaModel:()=>n.IJepaModel,IJepaPreTrainedModel:()=>n.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>n.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>_.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>n.Idefics3PreTrainedModel,Idefics3Processor:()=>b.Idefics3Processor,ImageClassificationPipeline:()=>t.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>t.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>m.ImageFeatureExtractor,ImageMattingOutput:()=>n.ImageMattingOutput,ImageProcessor:()=>f.ImageProcessor,ImageSegmentationPipeline:()=>t.ImageSegmentationPipeline,ImageToImagePipeline:()=>t.ImageToImagePipeline,ImageToTextPipeline:()=>t.ImageToTextPipeline,InterruptableStoppingCriteria:()=>x.InterruptableStoppingCriteria,JAISLMHeadModel:()=>n.JAISLMHeadModel,JAISModel:()=>n.JAISModel,JAISPreTrainedModel:()=>n.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>_.JinaCLIPImageProcessor,JinaCLIPModel:()=>n.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>n.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>b.JinaCLIPProcessor,JinaCLIPTextModel:()=>n.JinaCLIPTextModel,JinaCLIPVisionModel:()=>n.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>n.Lfm2ForCausalLM,Lfm2Model:()=>n.Lfm2Model,Lfm2PreTrainedModel:()=>n.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>n.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>n.LlamaForCausalLM,LlamaModel:()=>n.LlamaModel,LlamaPreTrainedModel:()=>n.LlamaPreTrainedModel,LlamaTokenizer:()=>r.LlamaTokenizer,LlavaForConditionalGeneration:()=>n.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>n.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>_.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>n.LlavaPreTrainedModel,LlavaProcessor:()=>b.LlavaProcessor,LlavaQwen2ForCausalLM:()=>n.LlavaQwen2ForCausalLM,LogitsProcessor:()=>v.LogitsProcessor,LogitsProcessorList:()=>v.LogitsProcessorList,LogitsWarper:()=>v.LogitsWarper,LongT5ForConditionalGeneration:()=>n.LongT5ForConditionalGeneration,LongT5Model:()=>n.LongT5Model,LongT5PreTrainedModel:()=>n.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>n.M2M100ForConditionalGeneration,M2M100Model:()=>n.M2M100Model,M2M100PreTrainedModel:()=>n.M2M100PreTrainedModel,M2M100Tokenizer:()=>r.M2M100Tokenizer,MBart50Tokenizer:()=>r.MBart50Tokenizer,MBartForCausalLM:()=>n.MBartForCausalLM,MBartForConditionalGeneration:()=>n.MBartForConditionalGeneration,MBartForSequenceClassification:()=>n.MBartForSequenceClassification,MBartModel:()=>n.MBartModel,MBartPreTrainedModel:()=>n.MBartPreTrainedModel,MBartTokenizer:()=>r.MBartTokenizer,MPNetForMaskedLM:()=>n.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>n.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>n.MPNetForSequenceClassification,MPNetForTokenClassification:()=>n.MPNetForTokenClassification,MPNetModel:()=>n.MPNetModel,MPNetPreTrainedModel:()=>n.MPNetPreTrainedModel,MPNetTokenizer:()=>r.MPNetTokenizer,MT5ForConditionalGeneration:()=>n.MT5ForConditionalGeneration,MT5Model:()=>n.MT5Model,MT5PreTrainedModel:()=>n.MT5PreTrainedModel,MarianMTModel:()=>n.MarianMTModel,MarianModel:()=>n.MarianModel,MarianPreTrainedModel:()=>n.MarianPreTrainedModel,MarianTokenizer:()=>r.MarianTokenizer,Mask2FormerImageProcessor:()=>_.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>_.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>n.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>_.MaskFormerImageProcessor,MaskFormerModel:()=>n.MaskFormerModel,MaskFormerPreTrainedModel:()=>n.MaskFormerPreTrainedModel,MaskedLMOutput:()=>n.MaskedLMOutput,MaxLengthCriteria:()=>x.MaxLengthCriteria,Metric3DForDepthEstimation:()=>n.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>n.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>n.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>n.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>n.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>n.MgpstrModelOutput,MgpstrPreTrainedModel:()=>n.MgpstrPreTrainedModel,MgpstrProcessor:()=>b.MgpstrProcessor,MgpstrTokenizer:()=>r.MgpstrTokenizer,MimiDecoderModel:()=>n.MimiDecoderModel,MimiDecoderOutput:()=>n.MimiDecoderOutput,MimiEncoderModel:()=>n.MimiEncoderModel,MimiEncoderOutput:()=>n.MimiEncoderOutput,MimiModel:()=>n.MimiModel,MimiPreTrainedModel:()=>n.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>v.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>v.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>n.MistralForCausalLM,MistralModel:()=>n.MistralModel,MistralPreTrainedModel:()=>n.MistralPreTrainedModel,MobileBertForMaskedLM:()=>n.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>n.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>n.MobileBertForSequenceClassification,MobileBertModel:()=>n.MobileBertModel,MobileBertPreTrainedModel:()=>n.MobileBertPreTrainedModel,MobileBertTokenizer:()=>r.MobileBertTokenizer,MobileLLMForCausalLM:()=>n.MobileLLMForCausalLM,MobileLLMModel:()=>n.MobileLLMModel,MobileLLMPreTrainedModel:()=>n.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>_.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>n.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>n.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>_.MobileNetV1ImageProcessor,MobileNetV1Model:()=>n.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>n.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>_.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>n.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>n.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>_.MobileNetV2ImageProcessor,MobileNetV2Model:()=>n.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>n.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>_.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>n.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>n.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>_.MobileNetV3ImageProcessor,MobileNetV3Model:()=>n.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>n.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>_.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>n.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>n.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>_.MobileNetV4ImageProcessor,MobileNetV4Model:()=>n.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>n.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>_.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>n.MobileViTForImageClassification,MobileViTImageProcessor:()=>_.MobileViTImageProcessor,MobileViTModel:()=>n.MobileViTModel,MobileViTPreTrainedModel:()=>n.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>n.MobileViTV2ForImageClassification,MobileViTV2Model:()=>n.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>n.MobileViTV2PreTrainedModel,ModelOutput:()=>n.ModelOutput,ModernBertDecoderForCausalLM:()=>n.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>n.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>n.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>n.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>n.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>n.ModernBertForTokenClassification,ModernBertModel:()=>n.ModernBertModel,ModernBertPreTrainedModel:()=>n.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>n.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>m.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>n.MoonshineForConditionalGeneration,MoonshineModel:()=>n.MoonshineModel,MoonshinePreTrainedModel:()=>n.MoonshinePreTrainedModel,MoonshineProcessor:()=>b.MoonshineProcessor,MptForCausalLM:()=>n.MptForCausalLM,MptModel:()=>n.MptModel,MptPreTrainedModel:()=>n.MptPreTrainedModel,MultiModalityCausalLM:()=>n.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>n.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>n.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>n.MusicgenForConditionalGeneration,MusicgenModel:()=>n.MusicgenModel,MusicgenPreTrainedModel:()=>n.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>n.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>n.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>n.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>n.NeoBertForTokenClassification,NeoBertModel:()=>n.NeoBertModel,NeoBertPreTrainedModel:()=>n.NeoBertPreTrainedModel,NllbTokenizer:()=>r.NllbTokenizer,NoBadWordsLogitsProcessor:()=>v.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>v.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>n.NomicBertModel,NomicBertPreTrainedModel:()=>n.NomicBertPreTrainedModel,NougatImageProcessor:()=>_.NougatImageProcessor,NougatTokenizer:()=>r.NougatTokenizer,OPTForCausalLM:()=>n.OPTForCausalLM,OPTModel:()=>n.OPTModel,OPTPreTrainedModel:()=>n.OPTPreTrainedModel,ObjectDetectionPipeline:()=>t.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>n.Olmo2ForCausalLM,Olmo2Model:()=>n.Olmo2Model,Olmo2PreTrainedModel:()=>n.Olmo2PreTrainedModel,OlmoForCausalLM:()=>n.OlmoForCausalLM,OlmoModel:()=>n.OlmoModel,OlmoPreTrainedModel:()=>n.OlmoPreTrainedModel,OpenELMForCausalLM:()=>n.OpenELMForCausalLM,OpenELMModel:()=>n.OpenELMModel,OpenELMPreTrainedModel:()=>n.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>_.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>n.OwlViTForObjectDetection,OwlViTImageProcessor:()=>_.OwlViTImageProcessor,OwlViTModel:()=>n.OwlViTModel,OwlViTPreTrainedModel:()=>n.OwlViTPreTrainedModel,OwlViTProcessor:()=>b.OwlViTProcessor,Owlv2ForObjectDetection:()=>n.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>_.Owlv2ImageProcessor,Owlv2Model:()=>n.Owlv2Model,Owlv2PreTrainedModel:()=>n.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>n.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>n.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>b.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>n.PatchTSMixerForPrediction,PatchTSMixerModel:()=>n.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>n.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>n.PatchTSTForPrediction,PatchTSTModel:()=>n.PatchTSTModel,PatchTSTPreTrainedModel:()=>n.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>n.Phi3ForCausalLM,Phi3Model:()=>n.Phi3Model,Phi3PreTrainedModel:()=>n.Phi3PreTrainedModel,Phi3VForCausalLM:()=>n.Phi3VForCausalLM,Phi3VImageProcessor:()=>_.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>n.Phi3VPreTrainedModel,Phi3VProcessor:()=>b.Phi3VProcessor,PhiForCausalLM:()=>n.PhiForCausalLM,PhiModel:()=>n.PhiModel,PhiPreTrainedModel:()=>n.PhiPreTrainedModel,Pipeline:()=>t.Pipeline,PreTrainedModel:()=>n.PreTrainedModel,PreTrainedTokenizer:()=>r.PreTrainedTokenizer,PretrainedConfig:()=>a.PretrainedConfig,PretrainedMixin:()=>n.PretrainedMixin,Processor:()=>w.Processor,PvtForImageClassification:()=>n.PvtForImageClassification,PvtImageProcessor:()=>_.PvtImageProcessor,PvtModel:()=>n.PvtModel,PvtPreTrainedModel:()=>n.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>m.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>n.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>n.PyAnnoteModel,PyAnnotePreTrainedModel:()=>n.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>b.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>n.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>t.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>n.Qwen2ForCausalLM,Qwen2Model:()=>n.Qwen2Model,Qwen2PreTrainedModel:()=>n.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>r.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>n.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>_.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>n.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>b.Qwen2VLProcessor,Qwen3ForCausalLM:()=>n.Qwen3ForCausalLM,Qwen3Model:()=>n.Qwen3Model,Qwen3PreTrainedModel:()=>n.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>n.RFDetrForObjectDetection,RFDetrModel:()=>n.RFDetrModel,RFDetrObjectDetectionOutput:()=>n.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>n.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>n.RTDetrForObjectDetection,RTDetrImageProcessor:()=>_.RTDetrImageProcessor,RTDetrModel:()=>n.RTDetrModel,RTDetrObjectDetectionOutput:()=>n.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>n.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>n.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>n.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>n.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>n.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>l.RawImage,RawVideo:()=>d.RawVideo,RawVideoFrame:()=>d.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>v.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>n.ResNetForImageClassification,ResNetModel:()=>n.ResNetModel,ResNetPreTrainedModel:()=>n.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>n.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>n.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>n.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>n.RoFormerForTokenClassification,RoFormerModel:()=>n.RoFormerModel,RoFormerPreTrainedModel:()=>n.RoFormerPreTrainedModel,RoFormerTokenizer:()=>r.RoFormerTokenizer,RobertaForMaskedLM:()=>n.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>n.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>n.RobertaForSequenceClassification,RobertaForTokenClassification:()=>n.RobertaForTokenClassification,RobertaModel:()=>n.RobertaModel,RobertaPreTrainedModel:()=>n.RobertaPreTrainedModel,RobertaTokenizer:()=>r.RobertaTokenizer,SamImageProcessor:()=>_.SamImageProcessor,SamImageSegmentationOutput:()=>n.SamImageSegmentationOutput,SamModel:()=>n.SamModel,SamPreTrainedModel:()=>n.SamPreTrainedModel,SamProcessor:()=>b.SamProcessor,SapiensForDepthEstimation:()=>n.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>n.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>n.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>n.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>m.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>_.SegformerFeatureExtractor,SegformerForImageClassification:()=>n.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>n.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>_.SegformerImageProcessor,SegformerModel:()=>n.SegformerModel,SegformerPreTrainedModel:()=>n.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>n.Seq2SeqLMOutput,SequenceClassifierOutput:()=>n.SequenceClassifierOutput,SiglipImageProcessor:()=>_.SiglipImageProcessor,SiglipModel:()=>n.SiglipModel,SiglipPreTrainedModel:()=>n.SiglipPreTrainedModel,SiglipTextModel:()=>n.SiglipTextModel,SiglipTokenizer:()=>r.SiglipTokenizer,SiglipVisionModel:()=>n.SiglipVisionModel,SmolLM3ForCausalLM:()=>n.SmolLM3ForCausalLM,SmolLM3Model:()=>n.SmolLM3Model,SmolLM3PreTrainedModel:()=>n.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>n.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>_.SmolVLMImageProcessor,SmolVLMProcessor:()=>b.SmolVLMProcessor,SnacDecoderModel:()=>n.SnacDecoderModel,SnacEncoderModel:()=>n.SnacEncoderModel,SnacFeatureExtractor:()=>m.SnacFeatureExtractor,SnacModel:()=>n.SnacModel,SnacPreTrainedModel:()=>n.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>m.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>n.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>n.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>n.SpeechT5HifiGan,SpeechT5Model:()=>n.SpeechT5Model,SpeechT5PreTrainedModel:()=>n.SpeechT5PreTrainedModel,SpeechT5Processor:()=>b.SpeechT5Processor,SpeechT5Tokenizer:()=>r.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>n.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>n.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>n.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>n.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>n.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>r.SqueezeBertTokenizer,StableLmForCausalLM:()=>n.StableLmForCausalLM,StableLmModel:()=>n.StableLmModel,StableLmPreTrainedModel:()=>n.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>n.Starcoder2ForCausalLM,Starcoder2Model:()=>n.Starcoder2Model,Starcoder2PreTrainedModel:()=>n.Starcoder2PreTrainedModel,StoppingCriteria:()=>x.StoppingCriteria,StoppingCriteriaList:()=>x.StoppingCriteriaList,StyleTextToSpeech2Model:()=>n.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>n.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>t.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>v.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>n.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>_.Swin2SRImageProcessor,Swin2SRModel:()=>n.Swin2SRModel,Swin2SRPreTrainedModel:()=>n.Swin2SRPreTrainedModel,SwinForImageClassification:()=>n.SwinForImageClassification,SwinForSemanticSegmentation:()=>n.SwinForSemanticSegmentation,SwinModel:()=>n.SwinModel,SwinPreTrainedModel:()=>n.SwinPreTrainedModel,T5ForConditionalGeneration:()=>n.T5ForConditionalGeneration,T5Model:()=>n.T5Model,T5PreTrainedModel:()=>n.T5PreTrainedModel,T5Tokenizer:()=>r.T5Tokenizer,TableTransformerForObjectDetection:()=>n.TableTransformerForObjectDetection,TableTransformerModel:()=>n.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>n.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>n.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>v.TemperatureLogitsWarper,Tensor:()=>u.Tensor,Text2TextGenerationPipeline:()=>t.Text2TextGenerationPipeline,TextClassificationPipeline:()=>t.TextClassificationPipeline,TextGenerationPipeline:()=>t.TextGenerationPipeline,TextStreamer:()=>M.TextStreamer,TextToAudioPipeline:()=>t.TextToAudioPipeline,TokenClassificationPipeline:()=>t.TokenClassificationPipeline,TokenClassifierOutput:()=>n.TokenClassifierOutput,TokenizerModel:()=>r.TokenizerModel,TopKLogitsWarper:()=>v.TopKLogitsWarper,TopPLogitsWarper:()=>v.TopPLogitsWarper,TrOCRForCausalLM:()=>n.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>n.TrOCRPreTrainedModel,TranslationPipeline:()=>t.TranslationPipeline,UltravoxModel:()=>n.UltravoxModel,UltravoxPreTrainedModel:()=>n.UltravoxPreTrainedModel,UltravoxProcessor:()=>b.UltravoxProcessor,UniSpeechForCTC:()=>n.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>n.UniSpeechForSequenceClassification,UniSpeechModel:()=>n.UniSpeechModel,UniSpeechPreTrainedModel:()=>n.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>n.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>n.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>n.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>n.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>n.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>b.VLChatProcessor,VLMImageProcessor:()=>_.VLMImageProcessor,ViTFeatureExtractor:()=>_.ViTFeatureExtractor,ViTForImageClassification:()=>n.ViTForImageClassification,ViTImageProcessor:()=>_.ViTImageProcessor,ViTMAEModel:()=>n.ViTMAEModel,ViTMAEPreTrainedModel:()=>n.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>n.ViTMSNForImageClassification,ViTMSNModel:()=>n.ViTMSNModel,ViTMSNPreTrainedModel:()=>n.ViTMSNPreTrainedModel,ViTModel:()=>n.ViTModel,ViTPreTrainedModel:()=>n.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>n.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>n.VitMatteForImageMatting,VitMatteImageProcessor:()=>_.VitMatteImageProcessor,VitMattePreTrainedModel:()=>n.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>n.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>_.VitPoseImageProcessor,VitPosePreTrainedModel:()=>n.VitPosePreTrainedModel,VitsModel:()=>n.VitsModel,VitsModelOutput:()=>n.VitsModelOutput,VitsPreTrainedModel:()=>n.VitsPreTrainedModel,VitsTokenizer:()=>r.VitsTokenizer,VoxtralForConditionalGeneration:()=>n.VoxtralForConditionalGeneration,VoxtralProcessor:()=>b.VoxtralProcessor,Wav2Vec2BertForCTC:()=>n.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>n.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>n.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>n.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>r.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>m.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>n.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>n.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>n.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>n.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>n.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>b.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>b.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>n.WavLMForAudioFrameClassification,WavLMForCTC:()=>n.WavLMForCTC,WavLMForSequenceClassification:()=>n.WavLMForSequenceClassification,WavLMForXVector:()=>n.WavLMForXVector,WavLMModel:()=>n.WavLMModel,WavLMPreTrainedModel:()=>n.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>m.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>n.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>n.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>m.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>n.WhisperForConditionalGeneration,WhisperModel:()=>n.WhisperModel,WhisperPreTrainedModel:()=>n.WhisperPreTrainedModel,WhisperProcessor:()=>b.WhisperProcessor,WhisperTextStreamer:()=>M.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>v.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>r.WhisperTokenizer,XLMForQuestionAnswering:()=>n.XLMForQuestionAnswering,XLMForSequenceClassification:()=>n.XLMForSequenceClassification,XLMForTokenClassification:()=>n.XLMForTokenClassification,XLMModel:()=>n.XLMModel,XLMPreTrainedModel:()=>n.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>n.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>n.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>n.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>n.XLMRobertaForTokenClassification,XLMRobertaModel:()=>n.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>n.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>r.XLMRobertaTokenizer,XLMTokenizer:()=>r.XLMTokenizer,XLMWithLMHeadModel:()=>n.XLMWithLMHeadModel,XVectorOutput:()=>n.XVectorOutput,YolosFeatureExtractor:()=>_.YolosFeatureExtractor,YolosForObjectDetection:()=>n.YolosForObjectDetection,YolosImageProcessor:()=>_.YolosImageProcessor,YolosModel:()=>n.YolosModel,YolosObjectDetectionOutput:()=>n.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>n.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>t.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>t.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>t.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>t.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>u.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>u.full,full_like:()=>u.full_like,getCacheShapes:()=>a.getCacheShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>u.interpolate,interpolate_4d:()=>u.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>r.is_chinese_char,layer_norm:()=>u.layer_norm,load_image:()=>l.load_image,load_video:()=>d.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>u.matmul,max:()=>c.max,mean:()=>u.mean,mean_pooling:()=>u.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>c.min,ones:()=>u.ones,ones_like:()=>u.ones_like,permute:()=>u.permute,permute_data:()=>c.permute_data,pipeline:()=>t.pipeline,quantize_embeddings:()=>u.quantize_embeddings,rand:()=>u.rand,read_audio:()=>i.read_audio,rfft:()=>u.rfft,round:()=>c.round,slice:()=>u.slice,softmax:()=>c.softmax,spectrogram:()=>i.spectrogram,stack:()=>u.stack,std_mean:()=>u.std_mean,topk:()=>u.topk,window_function:()=>i.window_function,zeros:()=>u.zeros,zeros_like:()=>u.zeros_like});var e=s("./src/env.js"),t=s("./src/pipelines.js"),n=s("./src/models.js"),r=s("./src/tokenizers.js"),a=s("./src/configs.js"),i=s("./src/utils/audio.js"),l=s("./src/utils/image.js"),d=s("./src/utils/video.js"),u=s("./src/utils/tensor.js"),c=s("./src/utils/maths.js"),p=s("./src/base/feature_extraction_utils.js"),m=s("./src/models/feature_extractors.js"),h=s("./src/models/auto/feature_extraction_auto.js"),f=s("./src/base/image_processors_utils.js"),_=s("./src/models/image_processors.js"),g=s("./src/models/auto/image_processing_auto.js"),w=s("./src/base/processing_utils.js"),b=s("./src/models/processors.js"),y=s("./src/models/auto/processing_auto.js"),M=s("./src/generation/streamers.js"),x=s("./src/generation/stopping_criteria.js"),v=s("./src/generation/logits_process.js")})();var a=o.ASTFeatureExtractor,i=o.ASTForAudioClassification,l=o.ASTModel,d=o.ASTPreTrainedModel,u=o.AlbertForMaskedLM,c=o.AlbertForQuestionAnswering,p=o.AlbertForSequenceClassification,m=o.AlbertModel,h=o.AlbertPreTrainedModel,f=o.AlbertTokenizer,_=o.ArceeForCausalLM,g=o.ArceeModel,w=o.ArceePreTrainedModel,b=o.AudioClassificationPipeline,y=o.AutoConfig,M=o.AutoFeatureExtractor,x=o.AutoImageProcessor,v=o.AutoModel,T=o.AutoModelForAudioClassification,k=o.AutoModelForAudioFrameClassification,P=o.AutoModelForAudioTextToText,$=o.AutoModelForCTC,C=o.AutoModelForCausalLM,S=o.AutoModelForDepthEstimation,F=o.AutoModelForDocumentQuestionAnswering,E=o.AutoModelForImageClassification,I=o.AutoModelForImageFeatureExtraction,A=o.AutoModelForImageMatting,z=o.AutoModelForImageSegmentation,L=o.AutoModelForImageTextToText,O=o.AutoModelForImageToImage,D=o.AutoModelForMaskGeneration,B=o.AutoModelForMaskedLM,N=o.AutoModelForNormalEstimation,R=o.AutoModelForObjectDetection,j=o.AutoModelForPoseEstimation,V=o.AutoModelForQuestionAnswering,G=o.AutoModelForSemanticSegmentation,q=o.AutoModelForSeq2SeqLM,U=o.AutoModelForSequenceClassification,W=o.AutoModelForSpeechSeq2Seq,H=o.AutoModelForTextToSpectrogram,Q=o.AutoModelForTextToWaveform,K=o.AutoModelForTokenClassification,X=o.AutoModelForUniversalSegmentation,J=o.AutoModelForVision2Seq,Y=o.AutoModelForXVector,Z=o.AutoModelForZeroShotObjectDetection,ee=o.AutoProcessor,te=o.AutoTokenizer,ne=o.AutomaticSpeechRecognitionPipeline,re=o.BackgroundRemovalPipeline,se=o.BartForConditionalGeneration,oe=o.BartForSequenceClassification,ae=o.BartModel,ie=o.BartPretrainedModel,le=o.BartTokenizer,de=o.BaseModelOutput,ue=o.BaseStreamer,ce=o.BeitFeatureExtractor,pe=o.BeitForImageClassification,me=o.BeitModel,he=o.BeitPreTrainedModel,fe=o.BertForMaskedLM,_e=o.BertForQuestionAnswering,ge=o.BertForSequenceClassification,we=o.BertForTokenClassification,be=o.BertModel,ye=o.BertPreTrainedModel,Me=o.BertTokenizer,xe=o.BitImageProcessor,ve=o.BlenderbotForConditionalGeneration,Te=o.BlenderbotModel,ke=o.BlenderbotPreTrainedModel,Pe=o.BlenderbotSmallForConditionalGeneration,$e=o.BlenderbotSmallModel,Ce=o.BlenderbotSmallPreTrainedModel,Se=o.BlenderbotSmallTokenizer,Fe=o.BlenderbotTokenizer,Ee=o.BloomForCausalLM,Ie=o.BloomModel,Ae=o.BloomPreTrainedModel,ze=o.BloomTokenizer,Le=o.CLIPFeatureExtractor,Oe=o.CLIPImageProcessor,De=o.CLIPModel,Be=o.CLIPPreTrainedModel,Ne=o.CLIPSegForImageSegmentation,Re=o.CLIPSegModel,je=o.CLIPSegPreTrainedModel,Ve=o.CLIPTextModel,Ge=o.CLIPTextModelWithProjection,qe=o.CLIPTokenizer,Ue=o.CLIPVisionModel,We=o.CLIPVisionModelWithProjection,He=o.CamembertForMaskedLM,Qe=o.CamembertForQuestionAnswering,Ke=o.CamembertForSequenceClassification,Xe=o.CamembertForTokenClassification,Je=o.CamembertModel,Ye=o.CamembertPreTrainedModel,Ze=o.CamembertTokenizer,et=o.CausalLMOutput,tt=o.CausalLMOutputWithPast,nt=o.ChineseCLIPFeatureExtractor,rt=o.ChineseCLIPModel,st=o.ChineseCLIPPreTrainedModel,ot=o.ClapAudioModelWithProjection,at=o.ClapFeatureExtractor,it=o.ClapModel,lt=o.ClapPreTrainedModel,dt=o.ClapTextModelWithProjection,ut=o.ClassifierFreeGuidanceLogitsProcessor,ct=o.CodeGenForCausalLM,pt=o.CodeGenModel,mt=o.CodeGenPreTrainedModel,ht=o.CodeGenTokenizer,ft=o.CodeLlamaTokenizer,_t=o.CohereForCausalLM,gt=o.CohereModel,wt=o.CoherePreTrainedModel,bt=o.CohereTokenizer,yt=o.ConvBertForMaskedLM,Mt=o.ConvBertForQuestionAnswering,xt=o.ConvBertForSequenceClassification,vt=o.ConvBertForTokenClassification,Tt=o.ConvBertModel,kt=o.ConvBertPreTrainedModel,Pt=o.ConvBertTokenizer,$t=o.ConvNextFeatureExtractor,Ct=o.ConvNextForImageClassification,St=o.ConvNextImageProcessor,Ft=o.ConvNextModel,Et=o.ConvNextPreTrainedModel,It=o.ConvNextV2ForImageClassification,At=o.ConvNextV2Model,zt=o.ConvNextV2PreTrainedModel,Lt=o.DFineForObjectDetection,Ot=o.DFineModel,Dt=o.DFinePreTrainedModel,Bt=o.DINOv3ConvNextModel,Nt=o.DINOv3ConvNextPreTrainedModel,Rt=o.DINOv3ViTImageProcessor,jt=o.DINOv3ViTModel,Vt=o.DINOv3ViTPreTrainedModel,Gt=o.DPTFeatureExtractor,qt=o.DPTForDepthEstimation,Ut=o.DPTImageProcessor,Wt=o.DPTModel,Ht=o.DPTPreTrainedModel,Qt=o.DacDecoderModel,Kt=o.DacDecoderOutput,Xt=o.DacEncoderModel,Jt=o.DacEncoderOutput,Yt=o.DacFeatureExtractor,Zt=o.DacModel,en=o.DacPreTrainedModel,tn=o.DataTypeMap,nn=o.DebertaForMaskedLM,rn=o.DebertaForQuestionAnswering,sn=o.DebertaForSequenceClassification,on=o.DebertaForTokenClassification,an=o.DebertaModel,ln=o.DebertaPreTrainedModel,dn=o.DebertaTokenizer,un=o.DebertaV2ForMaskedLM,cn=o.DebertaV2ForQuestionAnswering,pn=o.DebertaV2ForSequenceClassification,mn=o.DebertaV2ForTokenClassification,hn=o.DebertaV2Model,fn=o.DebertaV2PreTrainedModel,_n=o.DebertaV2Tokenizer,gn=o.DecisionTransformerModel,wn=o.DecisionTransformerPreTrainedModel,bn=o.DeiTFeatureExtractor,yn=o.DeiTForImageClassification,Mn=o.DeiTImageProcessor,xn=o.DeiTModel,vn=o.DeiTPreTrainedModel,Tn=o.DepthAnythingForDepthEstimation,kn=o.DepthAnythingPreTrainedModel,Pn=o.DepthEstimationPipeline,$n=o.DepthProForDepthEstimation,Cn=o.DepthProPreTrainedModel,Sn=o.DetrFeatureExtractor,Fn=o.DetrForObjectDetection,En=o.DetrForSegmentation,In=o.DetrImageProcessor,An=o.DetrModel,zn=o.DetrObjectDetectionOutput,Ln=o.DetrPreTrainedModel,On=o.DetrSegmentationOutput,Dn=o.Dinov2ForImageClassification,Bn=o.Dinov2Model,Nn=o.Dinov2PreTrainedModel,Rn=o.Dinov2WithRegistersForImageClassification,jn=o.Dinov2WithRegistersModel,Vn=o.Dinov2WithRegistersPreTrainedModel,Gn=o.DistilBertForMaskedLM,qn=o.DistilBertForQuestionAnswering,Un=o.DistilBertForSequenceClassification,Wn=o.DistilBertForTokenClassification,Hn=o.DistilBertModel,Qn=o.DistilBertPreTrainedModel,Kn=o.DistilBertTokenizer,Xn=o.DocumentQuestionAnsweringPipeline,Jn=o.DonutFeatureExtractor,Yn=o.DonutImageProcessor,Zn=o.DonutSwinModel,er=o.DonutSwinPreTrainedModel,tr=o.EfficientNetForImageClassification,nr=o.EfficientNetImageProcessor,rr=o.EfficientNetModel,sr=o.EfficientNetPreTrainedModel,or=o.ElectraForMaskedLM,ar=o.ElectraForQuestionAnswering,ir=o.ElectraForSequenceClassification,lr=o.ElectraForTokenClassification,dr=o.ElectraModel,ur=o.ElectraPreTrainedModel,cr=o.ElectraTokenizer,pr=o.EncodecFeatureExtractor,mr=o.EosTokenCriteria,hr=o.Ernie4_5_ForCausalLM,fr=o.Ernie4_5_Model,_r=o.Ernie4_5_PretrainedModel,gr=o.Ernie4_5_Tokenizer,wr=o.EsmForMaskedLM,br=o.EsmForSequenceClassification,yr=o.EsmForTokenClassification,Mr=o.EsmModel,xr=o.EsmPreTrainedModel,vr=o.EsmTokenizer,Tr=o.ExaoneForCausalLM,kr=o.ExaoneModel,Pr=o.ExaonePreTrainedModel,$r=o.FFT,Cr=o.FalconForCausalLM,Sr=o.FalconModel,Fr=o.FalconPreTrainedModel,Er=o.FalconTokenizer,Ir=o.FastViTForImageClassification,Ar=o.FastViTModel,zr=o.FastViTPreTrainedModel,Lr=o.FeatureExtractionPipeline,Or=o.FeatureExtractor,Dr=o.FillMaskPipeline,Br=o.Florence2ForConditionalGeneration,Nr=o.Florence2PreTrainedModel,Rr=o.Florence2Processor,jr=o.ForcedBOSTokenLogitsProcessor,Vr=o.ForcedEOSTokenLogitsProcessor,Gr=o.GLPNFeatureExtractor,qr=o.GLPNForDepthEstimation,Ur=o.GLPNModel,Wr=o.GLPNPreTrainedModel,Hr=o.GPT2LMHeadModel,Qr=o.GPT2Model,Kr=o.GPT2PreTrainedModel,Xr=o.GPT2Tokenizer,Jr=o.GPTBigCodeForCausalLM,Yr=o.GPTBigCodeModel,Zr=o.GPTBigCodePreTrainedModel,es=o.GPTJForCausalLM,ts=o.GPTJModel,ns=o.GPTJPreTrainedModel,rs=o.GPTNeoForCausalLM,ss=o.GPTNeoModel,os=o.GPTNeoPreTrainedModel,as=o.GPTNeoXForCausalLM,is=o.GPTNeoXModel,ls=o.GPTNeoXPreTrainedModel,ds=o.GPTNeoXTokenizer,us=o.Gemma2ForCausalLM,cs=o.Gemma2Model,ps=o.Gemma2PreTrainedModel,ms=o.Gemma3ForCausalLM,hs=o.Gemma3Model,fs=o.Gemma3PreTrainedModel,_s=o.Gemma3nAudioFeatureExtractor,gs=o.Gemma3nForConditionalGeneration,ws=o.Gemma3nPreTrainedModel,bs=o.Gemma3nProcessor,ys=o.GemmaForCausalLM,Ms=o.GemmaModel,xs=o.GemmaPreTrainedModel,vs=o.GemmaTokenizer,Ts=o.GlmForCausalLM,ks=o.GlmModel,Ps=o.GlmPreTrainedModel,$s=o.GraniteForCausalLM,Cs=o.GraniteModel,Ss=o.GranitePreTrainedModel,Fs=o.Grok1Tokenizer,Es=o.GroundingDinoForObjectDetection,Is=o.GroundingDinoImageProcessor,As=o.GroundingDinoPreTrainedModel,zs=o.GroundingDinoProcessor,Ls=o.GroupViTModel,Os=o.GroupViTPreTrainedModel,Ds=o.HeliumForCausalLM,Bs=o.HeliumModel,Ns=o.HeliumPreTrainedModel,Rs=o.HerbertTokenizer,js=o.HieraForImageClassification,Vs=o.HieraModel,Gs=o.HieraPreTrainedModel,qs=o.HubertForCTC,Us=o.HubertForSequenceClassification,Ws=o.HubertModel,Hs=o.HubertPreTrainedModel,Qs=o.IJepaForImageClassification,Ks=o.IJepaModel,Xs=o.IJepaPreTrainedModel,Js=o.Idefics3ForConditionalGeneration,Ys=o.Idefics3ImageProcessor,Zs=o.Idefics3PreTrainedModel,eo=o.Idefics3Processor,to=o.ImageClassificationPipeline,no=o.ImageFeatureExtractionPipeline,ro=o.ImageFeatureExtractor,so=o.ImageMattingOutput,oo=o.ImageProcessor,ao=o.ImageSegmentationPipeline,io=o.ImageToImagePipeline,lo=o.ImageToTextPipeline,uo=o.InterruptableStoppingCriteria,co=o.JAISLMHeadModel,po=o.JAISModel,mo=o.JAISPreTrainedModel,ho=o.JinaCLIPImageProcessor,fo=o.JinaCLIPModel,_o=o.JinaCLIPPreTrainedModel,go=o.JinaCLIPProcessor,wo=o.JinaCLIPTextModel,bo=o.JinaCLIPVisionModel,yo=o.Lfm2ForCausalLM,Mo=o.Lfm2Model,xo=o.Lfm2PreTrainedModel,vo=o.LiteWhisperForConditionalGeneration,To=o.LlamaForCausalLM,ko=o.LlamaModel,Po=o.LlamaPreTrainedModel,$o=o.LlamaTokenizer,Co=o.LlavaForConditionalGeneration,So=o.LlavaOnevisionForConditionalGeneration,Fo=o.LlavaOnevisionImageProcessor,Eo=o.LlavaPreTrainedModel,Io=o.LlavaProcessor,Ao=o.LlavaQwen2ForCausalLM,zo=o.LogitsProcessor,Lo=o.LogitsProcessorList,Oo=o.LogitsWarper,Do=o.LongT5ForConditionalGeneration,Bo=o.LongT5Model,No=o.LongT5PreTrainedModel,Ro=o.M2M100ForConditionalGeneration,jo=o.M2M100Model,Vo=o.M2M100PreTrainedModel,Go=o.M2M100Tokenizer,qo=o.MBart50Tokenizer,Uo=o.MBartForCausalLM,Wo=o.MBartForConditionalGeneration,Ho=o.MBartForSequenceClassification,Qo=o.MBartModel,Ko=o.MBartPreTrainedModel,Xo=o.MBartTokenizer,Jo=o.MPNetForMaskedLM,Yo=o.MPNetForQuestionAnswering,Zo=o.MPNetForSequenceClassification,ea=o.MPNetForTokenClassification,ta=o.MPNetModel,na=o.MPNetPreTrainedModel,ra=o.MPNetTokenizer,sa=o.MT5ForConditionalGeneration,oa=o.MT5Model,aa=o.MT5PreTrainedModel,ia=o.MarianMTModel,la=o.MarianModel,da=o.MarianPreTrainedModel,ua=o.MarianTokenizer,ca=o.Mask2FormerImageProcessor,pa=o.MaskFormerFeatureExtractor,ma=o.MaskFormerForInstanceSegmentation,ha=o.MaskFormerImageProcessor,fa=o.MaskFormerModel,_a=o.MaskFormerPreTrainedModel,ga=o.MaskedLMOutput,wa=o.MaxLengthCriteria,ba=o.Metric3DForDepthEstimation,ya=o.Metric3DPreTrainedModel,Ma=o.Metric3Dv2ForDepthEstimation,xa=o.Metric3Dv2PreTrainedModel,va=o.MgpstrForSceneTextRecognition,Ta=o.MgpstrModelOutput,ka=o.MgpstrPreTrainedModel,Pa=o.MgpstrProcessor,$a=o.MgpstrTokenizer,Ca=o.MimiDecoderModel,Sa=o.MimiDecoderOutput,Fa=o.MimiEncoderModel,Ea=o.MimiEncoderOutput,Ia=o.MimiModel,Aa=o.MimiPreTrainedModel,za=o.MinLengthLogitsProcessor,La=o.MinNewTokensLengthLogitsProcessor,Oa=o.MistralForCausalLM,Da=o.MistralModel,Ba=o.MistralPreTrainedModel,Na=o.MobileBertForMaskedLM,Ra=o.MobileBertForQuestionAnswering,ja=o.MobileBertForSequenceClassification,Va=o.MobileBertModel,Ga=o.MobileBertPreTrainedModel,qa=o.MobileBertTokenizer,Ua=o.MobileLLMForCausalLM,Wa=o.MobileLLMModel,Ha=o.MobileLLMPreTrainedModel,Qa=o.MobileNetV1FeatureExtractor,Ka=o.MobileNetV1ForImageClassification,Xa=o.MobileNetV1ForSemanticSegmentation,Ja=o.MobileNetV1ImageProcessor,Ya=o.MobileNetV1Model,Za=o.MobileNetV1PreTrainedModel,ei=o.MobileNetV2FeatureExtractor,ti=o.MobileNetV2ForImageClassification,ni=o.MobileNetV2ForSemanticSegmentation,ri=o.MobileNetV2ImageProcessor,si=o.MobileNetV2Model,oi=o.MobileNetV2PreTrainedModel,ai=o.MobileNetV3FeatureExtractor,ii=o.MobileNetV3ForImageClassification,li=o.MobileNetV3ForSemanticSegmentation,di=o.MobileNetV3ImageProcessor,ui=o.MobileNetV3Model,ci=o.MobileNetV3PreTrainedModel,pi=o.MobileNetV4FeatureExtractor,mi=o.MobileNetV4ForImageClassification,hi=o.MobileNetV4ForSemanticSegmentation,fi=o.MobileNetV4ImageProcessor,_i=o.MobileNetV4Model,gi=o.MobileNetV4PreTrainedModel,wi=o.MobileViTFeatureExtractor,bi=o.MobileViTForImageClassification,yi=o.MobileViTImageProcessor,Mi=o.MobileViTModel,xi=o.MobileViTPreTrainedModel,vi=o.MobileViTV2ForImageClassification,Ti=o.MobileViTV2Model,ki=o.MobileViTV2PreTrainedModel,Pi=o.ModelOutput,$i=o.ModernBertDecoderForCausalLM,Ci=o.ModernBertDecoderModel,Si=o.ModernBertDecoderPreTrainedModel,Fi=o.ModernBertForMaskedLM,Ei=o.ModernBertForSequenceClassification,Ii=o.ModernBertForTokenClassification,Ai=o.ModernBertModel,zi=o.ModernBertPreTrainedModel,Li=o.Moondream1ForConditionalGeneration,Oi=o.MoonshineFeatureExtractor,Di=o.MoonshineForConditionalGeneration,Bi=o.MoonshineModel,Ni=o.MoonshinePreTrainedModel,Ri=o.MoonshineProcessor,ji=o.MptForCausalLM,Vi=o.MptModel,Gi=o.MptPreTrainedModel,qi=o.MultiModalityCausalLM,Ui=o.MultiModalityPreTrainedModel,Wi=o.MusicgenForCausalLM,Hi=o.MusicgenForConditionalGeneration,Qi=o.MusicgenModel,Ki=o.MusicgenPreTrainedModel,Xi=o.NeoBertForMaskedLM,Ji=o.NeoBertForQuestionAnswering,Yi=o.NeoBertForSequenceClassification,Zi=o.NeoBertForTokenClassification,el=o.NeoBertModel,tl=o.NeoBertPreTrainedModel,nl=o.NllbTokenizer,rl=o.NoBadWordsLogitsProcessor,sl=o.NoRepeatNGramLogitsProcessor,ol=o.NomicBertModel,al=o.NomicBertPreTrainedModel,il=o.NougatImageProcessor,ll=o.NougatTokenizer,dl=o.OPTForCausalLM,ul=o.OPTModel,cl=o.OPTPreTrainedModel,pl=o.ObjectDetectionPipeline,ml=o.Olmo2ForCausalLM,hl=o.Olmo2Model,fl=o.Olmo2PreTrainedModel,_l=o.OlmoForCausalLM,gl=o.OlmoModel,wl=o.OlmoPreTrainedModel,bl=o.OpenELMForCausalLM,yl=o.OpenELMModel,Ml=o.OpenELMPreTrainedModel,xl=o.OwlViTFeatureExtractor,vl=o.OwlViTForObjectDetection,Tl=o.OwlViTImageProcessor,kl=o.OwlViTModel,Pl=o.OwlViTPreTrainedModel,$l=o.OwlViTProcessor,Cl=o.Owlv2ForObjectDetection,Sl=o.Owlv2ImageProcessor,Fl=o.Owlv2Model,El=o.Owlv2PreTrainedModel,Il=o.PaliGemmaForConditionalGeneration,Al=o.PaliGemmaPreTrainedModel,zl=o.PaliGemmaProcessor,Ll=o.PatchTSMixerForPrediction,Ol=o.PatchTSMixerModel,Dl=o.PatchTSMixerPreTrainedModel,Bl=o.PatchTSTForPrediction,Nl=o.PatchTSTModel,Rl=o.PatchTSTPreTrainedModel,jl=o.Phi3ForCausalLM,Vl=o.Phi3Model,Gl=o.Phi3PreTrainedModel,ql=o.Phi3VForCausalLM,Ul=o.Phi3VImageProcessor,Wl=o.Phi3VPreTrainedModel,Hl=o.Phi3VProcessor,Ql=o.PhiForCausalLM,Kl=o.PhiModel,Xl=o.PhiPreTrainedModel,Jl=o.Pipeline,Yl=o.PreTrainedModel,Zl=o.PreTrainedTokenizer,ed=o.PretrainedConfig,td=o.PretrainedMixin,nd=o.Processor,rd=o.PvtForImageClassification,sd=o.PvtImageProcessor,od=o.PvtModel,ad=o.PvtPreTrainedModel,id=o.PyAnnoteFeatureExtractor,ld=o.PyAnnoteForAudioFrameClassification,dd=o.PyAnnoteModel,ud=o.PyAnnotePreTrainedModel,cd=o.PyAnnoteProcessor,pd=o.QuestionAnsweringModelOutput,md=o.QuestionAnsweringPipeline,hd=o.Qwen2ForCausalLM,fd=o.Qwen2Model,_d=o.Qwen2PreTrainedModel,gd=o.Qwen2Tokenizer,wd=o.Qwen2VLForConditionalGeneration,bd=o.Qwen2VLImageProcessor,yd=o.Qwen2VLPreTrainedModel,Md=o.Qwen2VLProcessor,xd=o.Qwen3ForCausalLM,vd=o.Qwen3Model,Td=o.Qwen3PreTrainedModel,kd=o.RFDetrForObjectDetection,Pd=o.RFDetrModel,$d=o.RFDetrObjectDetectionOutput,Cd=o.RFDetrPreTrainedModel,Sd=o.RTDetrForObjectDetection,Fd=o.RTDetrImageProcessor,Ed=o.RTDetrModel,Id=o.RTDetrObjectDetectionOutput,Ad=o.RTDetrPreTrainedModel,zd=o.RTDetrV2ForObjectDetection,Ld=o.RTDetrV2Model,Od=o.RTDetrV2ObjectDetectionOutput,Dd=o.RTDetrV2PreTrainedModel,Bd=o.RawAudio,Nd=o.RawImage,Rd=o.RawVideo,jd=o.RawVideoFrame,Vd=o.RepetitionPenaltyLogitsProcessor,Gd=o.ResNetForImageClassification,qd=o.ResNetModel,Ud=o.ResNetPreTrainedModel,Wd=o.RoFormerForMaskedLM,Hd=o.RoFormerForQuestionAnswering,Qd=o.RoFormerForSequenceClassification,Kd=o.RoFormerForTokenClassification,Xd=o.RoFormerModel,Jd=o.RoFormerPreTrainedModel,Yd=o.RoFormerTokenizer,Zd=o.RobertaForMaskedLM,eu=o.RobertaForQuestionAnswering,tu=o.RobertaForSequenceClassification,nu=o.RobertaForTokenClassification,ru=o.RobertaModel,su=o.RobertaPreTrainedModel,ou=o.RobertaTokenizer,au=o.SamImageProcessor,iu=o.SamImageSegmentationOutput,lu=o.SamModel,du=o.SamPreTrainedModel,uu=o.SamProcessor,cu=o.SapiensForDepthEstimation,pu=o.SapiensForNormalEstimation,mu=o.SapiensForSemanticSegmentation,hu=o.SapiensPreTrainedModel,fu=o.SeamlessM4TFeatureExtractor,_u=o.SegformerFeatureExtractor,gu=o.SegformerForImageClassification,wu=o.SegformerForSemanticSegmentation,bu=o.SegformerImageProcessor,yu=o.SegformerModel,Mu=o.SegformerPreTrainedModel,xu=o.Seq2SeqLMOutput,vu=o.SequenceClassifierOutput,Tu=o.SiglipImageProcessor,ku=o.SiglipModel,Pu=o.SiglipPreTrainedModel,$u=o.SiglipTextModel,Cu=o.SiglipTokenizer,Su=o.SiglipVisionModel,Fu=o.SmolLM3ForCausalLM,Eu=o.SmolLM3Model,Iu=o.SmolLM3PreTrainedModel,Au=o.SmolVLMForConditionalGeneration,zu=o.SmolVLMImageProcessor,Lu=o.SmolVLMProcessor,Ou=o.SnacDecoderModel,Du=o.SnacEncoderModel,Bu=o.SnacFeatureExtractor,Nu=o.SnacModel,Ru=o.SnacPreTrainedModel,ju=o.SpeechT5FeatureExtractor,Vu=o.SpeechT5ForSpeechToText,Gu=o.SpeechT5ForTextToSpeech,qu=o.SpeechT5HifiGan,Uu=o.SpeechT5Model,Wu=o.SpeechT5PreTrainedModel,Hu=o.SpeechT5Processor,Qu=o.SpeechT5Tokenizer,Ku=o.SqueezeBertForMaskedLM,Xu=o.SqueezeBertForQuestionAnswering,Ju=o.SqueezeBertForSequenceClassification,Yu=o.SqueezeBertModel,Zu=o.SqueezeBertPreTrainedModel,ec=o.SqueezeBertTokenizer,tc=o.StableLmForCausalLM,nc=o.StableLmModel,rc=o.StableLmPreTrainedModel,sc=o.Starcoder2ForCausalLM,oc=o.Starcoder2Model,ac=o.Starcoder2PreTrainedModel,ic=o.StoppingCriteria,lc=o.StoppingCriteriaList,dc=o.StyleTextToSpeech2Model,uc=o.StyleTextToSpeech2PreTrainedModel,cc=o.SummarizationPipeline,pc=o.SuppressTokensAtBeginLogitsProcessor,mc=o.Swin2SRForImageSuperResolution,hc=o.Swin2SRImageProcessor,fc=o.Swin2SRModel,_c=o.Swin2SRPreTrainedModel,gc=o.SwinForImageClassification,wc=o.SwinForSemanticSegmentation,bc=o.SwinModel,yc=o.SwinPreTrainedModel,Mc=o.T5ForConditionalGeneration,xc=o.T5Model,vc=o.T5PreTrainedModel,Tc=o.T5Tokenizer,kc=o.TableTransformerForObjectDetection,Pc=o.TableTransformerModel,$c=o.TableTransformerObjectDetectionOutput,Cc=o.TableTransformerPreTrainedModel,Sc=o.TemperatureLogitsWarper,Fc=o.Tensor,Ec=o.Text2TextGenerationPipeline,Ic=o.TextClassificationPipeline,Ac=o.TextGenerationPipeline,zc=o.TextStreamer,Lc=o.TextToAudioPipeline,Oc=o.TokenClassificationPipeline,Dc=o.TokenClassifierOutput,Bc=o.TokenizerModel,Nc=o.TopKLogitsWarper,Rc=o.TopPLogitsWarper,jc=o.TrOCRForCausalLM,Vc=o.TrOCRPreTrainedModel,Gc=o.TranslationPipeline,qc=o.UltravoxModel,Uc=o.UltravoxPreTrainedModel,Wc=o.UltravoxProcessor,Hc=o.UniSpeechForCTC,Qc=o.UniSpeechForSequenceClassification,Kc=o.UniSpeechModel,Xc=o.UniSpeechPreTrainedModel,Jc=o.UniSpeechSatForAudioFrameClassification,Yc=o.UniSpeechSatForCTC,Zc=o.UniSpeechSatForSequenceClassification,ep=o.UniSpeechSatModel,tp=o.UniSpeechSatPreTrainedModel,np=o.VLChatProcessor,rp=o.VLMImageProcessor,sp=o.ViTFeatureExtractor,op=o.ViTForImageClassification,ap=o.ViTImageProcessor,ip=o.ViTMAEModel,lp=o.ViTMAEPreTrainedModel,dp=o.ViTMSNForImageClassification,up=o.ViTMSNModel,cp=o.ViTMSNPreTrainedModel,pp=o.ViTModel,mp=o.ViTPreTrainedModel,hp=o.VisionEncoderDecoderModel,fp=o.VitMatteForImageMatting,_p=o.VitMatteImageProcessor,gp=o.VitMattePreTrainedModel,wp=o.VitPoseForPoseEstimation,bp=o.VitPoseImageProcessor,yp=o.VitPosePreTrainedModel,Mp=o.VitsModel,xp=o.VitsModelOutput,vp=o.VitsPreTrainedModel,Tp=o.VitsTokenizer,kp=o.VoxtralForConditionalGeneration,Pp=o.VoxtralProcessor,$p=o.Wav2Vec2BertForCTC,Cp=o.Wav2Vec2BertForSequenceClassification,Sp=o.Wav2Vec2BertModel,Fp=o.Wav2Vec2BertPreTrainedModel,Ep=o.Wav2Vec2CTCTokenizer,Ip=o.Wav2Vec2FeatureExtractor,Ap=o.Wav2Vec2ForAudioFrameClassification,zp=o.Wav2Vec2ForCTC,Lp=o.Wav2Vec2ForSequenceClassification,Op=o.Wav2Vec2Model,Dp=o.Wav2Vec2PreTrainedModel,Bp=o.Wav2Vec2Processor,Np=o.Wav2Vec2ProcessorWithLM,Rp=o.WavLMForAudioFrameClassification,jp=o.WavLMForCTC,Vp=o.WavLMForSequenceClassification,Gp=o.WavLMForXVector,qp=o.WavLMModel,Up=o.WavLMPreTrainedModel,Wp=o.WeSpeakerFeatureExtractor,Hp=o.WeSpeakerResNetModel,Qp=o.WeSpeakerResNetPreTrainedModel,Kp=o.WhisperFeatureExtractor,Xp=o.WhisperForConditionalGeneration,Jp=o.WhisperModel,Yp=o.WhisperPreTrainedModel,Zp=o.WhisperProcessor,em=o.WhisperTextStreamer,tm=o.WhisperTimeStampLogitsProcessor,nm=o.WhisperTokenizer,rm=o.XLMForQuestionAnswering,sm=o.XLMForSequenceClassification,om=o.XLMForTokenClassification,am=o.XLMModel,im=o.XLMPreTrainedModel,lm=o.XLMRobertaForMaskedLM,dm=o.XLMRobertaForQuestionAnswering,um=o.XLMRobertaForSequenceClassification,cm=o.XLMRobertaForTokenClassification,pm=o.XLMRobertaModel,mm=o.XLMRobertaPreTrainedModel,hm=o.XLMRobertaTokenizer,fm=o.XLMTokenizer,_m=o.XLMWithLMHeadModel,gm=o.XVectorOutput,wm=o.YolosFeatureExtractor,bm=o.YolosForObjectDetection,ym=o.YolosImageProcessor,Mm=o.YolosModel,xm=o.YolosObjectDetectionOutput,vm=o.YolosPreTrainedModel,Tm=o.ZeroShotAudioClassificationPipeline,km=o.ZeroShotClassificationPipeline,Pm=o.ZeroShotImageClassificationPipeline,$m=o.ZeroShotObjectDetectionPipeline,Cm=o.bankers_round,Sm=o.cat,Fm=o.cos_sim,Em=o.dot,Im=o.dynamic_time_warping,Am=o.env,zm=o.full,Lm=o.full_like,Om=o.getCacheShapes,Dm=o.hamming,Bm=o.hanning,Nm=o.interpolate,Rm=o.interpolate_4d,jm=o.interpolate_data,Vm=o.is_chinese_char,Gm=o.layer_norm,qm=o.load_image,Um=o.load_video,Wm=o.log_softmax,Hm=o.magnitude,Qm=o.matmul,Km=o.max,Xm=o.mean,Jm=o.mean_pooling,Ym=o.medianFilter,Zm=o.mel_filter_bank,eh=o.min,th=o.ones,nh=o.ones_like,rh=o.permute,sh=o.permute_data,oh=o.pipeline,ah=o.quantize_embeddings,ih=o.rand,lh=o.read_audio,dh=o.rfft,uh=o.round,ch=o.slice,ph=o.softmax,mh=o.spectrogram,hh=o.stack,fh=o.std_mean,_h=o.topk,gh=o.window_function,wh=o.zeros,bh=o.zeros_like;export{a as ASTFeatureExtractor,i as ASTForAudioClassification,l as ASTModel,d as ASTPreTrainedModel,u as AlbertForMaskedLM,c as AlbertForQuestionAnswering,p as AlbertForSequenceClassification,m as AlbertModel,h as AlbertPreTrainedModel,f as AlbertTokenizer,_ as ArceeForCausalLM,g as ArceeModel,w as ArceePreTrainedModel,b as AudioClassificationPipeline,y as AutoConfig,M as AutoFeatureExtractor,x as AutoImageProcessor,v as AutoModel,T as AutoModelForAudioClassification,k as AutoModelForAudioFrameClassification,P as AutoModelForAudioTextToText,$ as AutoModelForCTC,C as AutoModelForCausalLM,S as AutoModelForDepthEstimation,F as AutoModelForDocumentQuestionAnswering,E as AutoModelForImageClassification,I as AutoModelForImageFeatureExtraction,A as AutoModelForImageMatting,z as AutoModelForImageSegmentation,L as AutoModelForImageTextToText,O as AutoModelForImageToImage,D as AutoModelForMaskGeneration,B as AutoModelForMaskedLM,N as AutoModelForNormalEstimation,R as AutoModelForObjectDetection,j as AutoModelForPoseEstimation,V as AutoModelForQuestionAnswering,G as AutoModelForSemanticSegmentation,q as AutoModelForSeq2SeqLM,U as AutoModelForSequenceClassification,W as AutoModelForSpeechSeq2Seq,H as AutoModelForTextToSpectrogram,Q as AutoModelForTextToWaveform,K as AutoModelForTokenClassification,X as AutoModelForUniversalSegmentation,J as AutoModelForVision2Seq,Y as AutoModelForXVector,Z as AutoModelForZeroShotObjectDetection,ee as AutoProcessor,te as AutoTokenizer,ne as AutomaticSpeechRecognitionPipeline,re as BackgroundRemovalPipeline,se as BartForConditionalGeneration,oe as BartForSequenceClassification,ae as BartModel,ie as BartPretrainedModel,le as BartTokenizer,de as BaseModelOutput,ue as BaseStreamer,ce as BeitFeatureExtractor,pe as BeitForImageClassification,me as BeitModel,he as BeitPreTrainedModel,fe as BertForMaskedLM,_e as BertForQuestionAnswering,ge as BertForSequenceClassification,we as BertForTokenClassification,be as BertModel,ye as BertPreTrainedModel,Me as BertTokenizer,xe as BitImageProcessor,ve as BlenderbotForConditionalGeneration,Te as BlenderbotModel,ke as BlenderbotPreTrainedModel,Pe as BlenderbotSmallForConditionalGeneration,$e as BlenderbotSmallModel,Ce as BlenderbotSmallPreTrainedModel,Se as BlenderbotSmallTokenizer,Fe as BlenderbotTokenizer,Ee as BloomForCausalLM,Ie as BloomModel,Ae as BloomPreTrainedModel,ze as BloomTokenizer,Le as CLIPFeatureExtractor,Oe as CLIPImageProcessor,De as CLIPModel,Be as CLIPPreTrainedModel,Ne as CLIPSegForImageSegmentation,Re as CLIPSegModel,je as CLIPSegPreTrainedModel,Ve as CLIPTextModel,Ge as CLIPTextModelWithProjection,qe as CLIPTokenizer,Ue as CLIPVisionModel,We as CLIPVisionModelWithProjection,He as CamembertForMaskedLM,Qe as CamembertForQuestionAnswering,Ke as CamembertForSequenceClassification,Xe as CamembertForTokenClassification,Je as CamembertModel,Ye as CamembertPreTrainedModel,Ze as CamembertTokenizer,et as CausalLMOutput,tt as CausalLMOutputWithPast,nt as ChineseCLIPFeatureExtractor,rt as ChineseCLIPModel,st as ChineseCLIPPreTrainedModel,ot as ClapAudioModelWithProjection,at as ClapFeatureExtractor,it as ClapModel,lt as ClapPreTrainedModel,dt as ClapTextModelWithProjection,ut as ClassifierFreeGuidanceLogitsProcessor,ct as CodeGenForCausalLM,pt as CodeGenModel,mt as CodeGenPreTrainedModel,ht as CodeGenTokenizer,ft as CodeLlamaTokenizer,_t as CohereForCausalLM,gt as CohereModel,wt as CoherePreTrainedModel,bt as CohereTokenizer,yt as ConvBertForMaskedLM,Mt as ConvBertForQuestionAnswering,xt as ConvBertForSequenceClassification,vt as ConvBertForTokenClassification,Tt as ConvBertModel,kt as ConvBertPreTrainedModel,Pt as ConvBertTokenizer,$t as ConvNextFeatureExtractor,Ct as ConvNextForImageClassification,St as ConvNextImageProcessor,Ft as ConvNextModel,Et as ConvNextPreTrainedModel,It as ConvNextV2ForImageClassification,At as ConvNextV2Model,zt as ConvNextV2PreTrainedModel,Lt as DFineForObjectDetection,Ot as DFineModel,Dt as DFinePreTrainedModel,Bt as DINOv3ConvNextModel,Nt as DINOv3ConvNextPreTrainedModel,Rt as DINOv3ViTImageProcessor,jt as DINOv3ViTModel,Vt as DINOv3ViTPreTrainedModel,Gt as DPTFeatureExtractor,qt as DPTForDepthEstimation,Ut as DPTImageProcessor,Wt as DPTModel,Ht as DPTPreTrainedModel,Qt as DacDecoderModel,Kt as DacDecoderOutput,Xt as DacEncoderModel,Jt as DacEncoderOutput,Yt as DacFeatureExtractor,Zt as DacModel,en as DacPreTrainedModel,tn as DataTypeMap,nn as DebertaForMaskedLM,rn as DebertaForQuestionAnswering,sn as DebertaForSequenceClassification,on as DebertaForTokenClassification,an as DebertaModel,ln as DebertaPreTrainedModel,dn as DebertaTokenizer,un as DebertaV2ForMaskedLM,cn as DebertaV2ForQuestionAnswering,pn as DebertaV2ForSequenceClassification,mn as DebertaV2ForTokenClassification,hn as DebertaV2Model,fn as DebertaV2PreTrainedModel,_n as DebertaV2Tokenizer,gn as DecisionTransformerModel,wn as DecisionTransformerPreTrainedModel,bn as DeiTFeatureExtractor,yn as DeiTForImageClassification,Mn as DeiTImageProcessor,xn as DeiTModel,vn as DeiTPreTrainedModel,Tn as DepthAnythingForDepthEstimation,kn as DepthAnythingPreTrainedModel,Pn as DepthEstimationPipeline,$n as DepthProForDepthEstimation,Cn as DepthProPreTrainedModel,Sn as DetrFeatureExtractor,Fn as DetrForObjectDetection,En as DetrForSegmentation,In as DetrImageProcessor,An as DetrModel,zn as DetrObjectDetectionOutput,Ln as DetrPreTrainedModel,On as DetrSegmentationOutput,Dn as Dinov2ForImageClassification,Bn as Dinov2Model,Nn as Dinov2PreTrainedModel,Rn as Dinov2WithRegistersForImageClassification,jn as Dinov2WithRegistersModel,Vn as Dinov2WithRegistersPreTrainedModel,Gn as DistilBertForMaskedLM,qn as DistilBertForQuestionAnswering,Un as DistilBertForSequenceClassification,Wn as DistilBertForTokenClassification,Hn as DistilBertModel,Qn as DistilBertPreTrainedModel,Kn as DistilBertTokenizer,Xn as DocumentQuestionAnsweringPipeline,Jn as DonutFeatureExtractor,Yn as DonutImageProcessor,Zn as DonutSwinModel,er as DonutSwinPreTrainedModel,tr as EfficientNetForImageClassification,nr as EfficientNetImageProcessor,rr as EfficientNetModel,sr as EfficientNetPreTrainedModel,or as ElectraForMaskedLM,ar as ElectraForQuestionAnswering,ir as ElectraForSequenceClassification,lr as ElectraForTokenClassification,dr as ElectraModel,ur as ElectraPreTrainedModel,cr as ElectraTokenizer,pr as EncodecFeatureExtractor,mr as EosTokenCriteria,hr as Ernie4_5_ForCausalLM,fr as Ernie4_5_Model,_r as Ernie4_5_PretrainedModel,gr as Ernie4_5_Tokenizer,wr as EsmForMaskedLM,br as EsmForSequenceClassification,yr as EsmForTokenClassification,Mr as EsmModel,xr as EsmPreTrainedModel,vr as EsmTokenizer,Tr as ExaoneForCausalLM,kr as ExaoneModel,Pr as ExaonePreTrainedModel,$r as FFT,Cr as FalconForCausalLM,Sr as FalconModel,Fr as FalconPreTrainedModel,Er as FalconTokenizer,Ir as FastViTForImageClassification,Ar as FastViTModel,zr as FastViTPreTrainedModel,Lr as FeatureExtractionPipeline,Or as FeatureExtractor,Dr as FillMaskPipeline,Br as Florence2ForConditionalGeneration,Nr as Florence2PreTrainedModel,Rr as Florence2Processor,jr as ForcedBOSTokenLogitsProcessor,Vr as ForcedEOSTokenLogitsProcessor,Gr as GLPNFeatureExtractor,qr as GLPNForDepthEstimation,Ur as GLPNModel,Wr as GLPNPreTrainedModel,Hr as GPT2LMHeadModel,Qr as GPT2Model,Kr as GPT2PreTrainedModel,Xr as GPT2Tokenizer,Jr as GPTBigCodeForCausalLM,Yr as GPTBigCodeModel,Zr as GPTBigCodePreTrainedModel,es as GPTJForCausalLM,ts as GPTJModel,ns as GPTJPreTrainedModel,rs as GPTNeoForCausalLM,ss as GPTNeoModel,os as GPTNeoPreTrainedModel,as as GPTNeoXForCausalLM,is as GPTNeoXModel,ls as GPTNeoXPreTrainedModel,ds as GPTNeoXTokenizer,us as Gemma2ForCausalLM,cs as Gemma2Model,ps as Gemma2PreTrainedModel,ms as Gemma3ForCausalLM,hs as Gemma3Model,fs as Gemma3PreTrainedModel,_s as Gemma3nAudioFeatureExtractor,gs as Gemma3nForConditionalGeneration,ws as Gemma3nPreTrainedModel,bs as Gemma3nProcessor,ys as GemmaForCausalLM,Ms as GemmaModel,xs as GemmaPreTrainedModel,vs as GemmaTokenizer,Ts as GlmForCausalLM,ks as GlmModel,Ps as GlmPreTrainedModel,$s as GraniteForCausalLM,Cs as GraniteModel,Ss as GranitePreTrainedModel,Fs as Grok1Tokenizer,Es as GroundingDinoForObjectDetection,Is as GroundingDinoImageProcessor,As as GroundingDinoPreTrainedModel,zs as GroundingDinoProcessor,Ls as GroupViTModel,Os as GroupViTPreTrainedModel,Ds as HeliumForCausalLM,Bs as HeliumModel,Ns as HeliumPreTrainedModel,Rs as HerbertTokenizer,js as HieraForImageClassification,Vs as HieraModel,Gs as HieraPreTrainedModel,qs as HubertForCTC,Us as HubertForSequenceClassification,Ws as HubertModel,Hs as HubertPreTrainedModel,Qs as IJepaForImageClassification,Ks as IJepaModel,Xs as IJepaPreTrainedModel,Js as Idefics3ForConditionalGeneration,Ys as Idefics3ImageProcessor,Zs as Idefics3PreTrainedModel,eo as Idefics3Processor,to as ImageClassificationPipeline,no as ImageFeatureExtractionPipeline,ro as ImageFeatureExtractor,so as ImageMattingOutput,oo as ImageProcessor,ao as ImageSegmentationPipeline,io as ImageToImagePipeline,lo as ImageToTextPipeline,uo as InterruptableStoppingCriteria,co as JAISLMHeadModel,po as JAISModel,mo as JAISPreTrainedModel,ho as JinaCLIPImageProcessor,fo as JinaCLIPModel,_o as JinaCLIPPreTrainedModel,go as JinaCLIPProcessor,wo as JinaCLIPTextModel,bo as JinaCLIPVisionModel,yo as Lfm2ForCausalLM,Mo as Lfm2Model,xo as Lfm2PreTrainedModel,vo as LiteWhisperForConditionalGeneration,To as LlamaForCausalLM,ko as LlamaModel,Po as LlamaPreTrainedModel,$o as LlamaTokenizer,Co as LlavaForConditionalGeneration,So as LlavaOnevisionForConditionalGeneration,Fo as LlavaOnevisionImageProcessor,Eo as LlavaPreTrainedModel,Io as LlavaProcessor,Ao as LlavaQwen2ForCausalLM,zo as LogitsProcessor,Lo as LogitsProcessorList,Oo as LogitsWarper,Do as LongT5ForConditionalGeneration,Bo as LongT5Model,No as LongT5PreTrainedModel,Ro as M2M100ForConditionalGeneration,jo as M2M100Model,Vo as M2M100PreTrainedModel,Go as M2M100Tokenizer,qo as MBart50Tokenizer,Uo as MBartForCausalLM,Wo as MBartForConditionalGeneration,Ho as MBartForSequenceClassification,Qo as MBartModel,Ko as MBartPreTrainedModel,Xo as MBartTokenizer,Jo as MPNetForMaskedLM,Yo as MPNetForQuestionAnswering,Zo as MPNetForSequenceClassification,ea as MPNetForTokenClassification,ta as MPNetModel,na as MPNetPreTrainedModel,ra as MPNetTokenizer,sa as MT5ForConditionalGeneration,oa as MT5Model,aa as MT5PreTrainedModel,ia as MarianMTModel,la as MarianModel,da as MarianPreTrainedModel,ua as MarianTokenizer,ca as Mask2FormerImageProcessor,pa as MaskFormerFeatureExtractor,ma as MaskFormerForInstanceSegmentation,ha as MaskFormerImageProcessor,fa as MaskFormerModel,_a as MaskFormerPreTrainedModel,ga as MaskedLMOutput,wa as MaxLengthCriteria,ba as Metric3DForDepthEstimation,ya as Metric3DPreTrainedModel,Ma as Metric3Dv2ForDepthEstimation,xa as Metric3Dv2PreTrainedModel,va as MgpstrForSceneTextRecognition,Ta as MgpstrModelOutput,ka as MgpstrPreTrainedModel,Pa as MgpstrProcessor,$a as MgpstrTokenizer,Ca as MimiDecoderModel,Sa as MimiDecoderOutput,Fa as MimiEncoderModel,Ea as MimiEncoderOutput,Ia as MimiModel,Aa as MimiPreTrainedModel,za as MinLengthLogitsProcessor,La as MinNewTokensLengthLogitsProcessor,Oa as MistralForCausalLM,Da as MistralModel,Ba as MistralPreTrainedModel,Na as MobileBertForMaskedLM,Ra as MobileBertForQuestionAnswering,ja as MobileBertForSequenceClassification,Va as MobileBertModel,Ga as MobileBertPreTrainedModel,qa as MobileBertTokenizer,Ua as MobileLLMForCausalLM,Wa as MobileLLMModel,Ha as MobileLLMPreTrainedModel,Qa as MobileNetV1FeatureExtractor,Ka as MobileNetV1ForImageClassification,Xa as MobileNetV1ForSemanticSegmentation,Ja as MobileNetV1ImageProcessor,Ya as MobileNetV1Model,Za as MobileNetV1PreTrainedModel,ei as MobileNetV2FeatureExtractor,ti as MobileNetV2ForImageClassification,ni as MobileNetV2ForSemanticSegmentation,ri as MobileNetV2ImageProcessor,si as MobileNetV2Model,oi as MobileNetV2PreTrainedModel,ai as MobileNetV3FeatureExtractor,ii as MobileNetV3ForImageClassification,li as MobileNetV3ForSemanticSegmentation,di as MobileNetV3ImageProcessor,ui as MobileNetV3Model,ci as MobileNetV3PreTrainedModel,pi as MobileNetV4FeatureExtractor,mi as MobileNetV4ForImageClassification,hi as MobileNetV4ForSemanticSegmentation,fi as MobileNetV4ImageProcessor,_i as MobileNetV4Model,gi as MobileNetV4PreTrainedModel,wi as MobileViTFeatureExtractor,bi as MobileViTForImageClassification,yi as MobileViTImageProcessor,Mi as MobileViTModel,xi as MobileViTPreTrainedModel,vi as MobileViTV2ForImageClassification,Ti as MobileViTV2Model,ki as MobileViTV2PreTrainedModel,Pi as ModelOutput,$i as ModernBertDecoderForCausalLM,Ci as ModernBertDecoderModel,Si as ModernBertDecoderPreTrainedModel,Fi as ModernBertForMaskedLM,Ei as ModernBertForSequenceClassification,Ii as ModernBertForTokenClassification,Ai as ModernBertModel,zi as ModernBertPreTrainedModel,Li as Moondream1ForConditionalGeneration,Oi as MoonshineFeatureExtractor,Di as MoonshineForConditionalGeneration,Bi as MoonshineModel,Ni as MoonshinePreTrainedModel,Ri as MoonshineProcessor,ji as MptForCausalLM,Vi as MptModel,Gi as MptPreTrainedModel,qi as MultiModalityCausalLM,Ui as MultiModalityPreTrainedModel,Wi as MusicgenForCausalLM,Hi as MusicgenForConditionalGeneration,Qi as MusicgenModel,Ki as MusicgenPreTrainedModel,Xi as NeoBertForMaskedLM,Ji as NeoBertForQuestionAnswering,Yi as NeoBertForSequenceClassification,Zi as NeoBertForTokenClassification,el as NeoBertModel,tl as NeoBertPreTrainedModel,nl as NllbTokenizer,rl as NoBadWordsLogitsProcessor,sl as NoRepeatNGramLogitsProcessor,ol as NomicBertModel,al as NomicBertPreTrainedModel,il as NougatImageProcessor,ll as NougatTokenizer,dl as OPTForCausalLM,ul as OPTModel,cl as OPTPreTrainedModel,pl as ObjectDetectionPipeline,ml as Olmo2ForCausalLM,hl as Olmo2Model,fl as Olmo2PreTrainedModel,_l as OlmoForCausalLM,gl as OlmoModel,wl as OlmoPreTrainedModel,bl as OpenELMForCausalLM,yl as OpenELMModel,Ml as OpenELMPreTrainedModel,xl as OwlViTFeatureExtractor,vl as OwlViTForObjectDetection,Tl as OwlViTImageProcessor,kl as OwlViTModel,Pl as OwlViTPreTrainedModel,$l as OwlViTProcessor,Cl as Owlv2ForObjectDetection,Sl as Owlv2ImageProcessor,Fl as Owlv2Model,El as Owlv2PreTrainedModel,Il as PaliGemmaForConditionalGeneration,Al as PaliGemmaPreTrainedModel,zl as PaliGemmaProcessor,Ll as PatchTSMixerForPrediction,Ol as PatchTSMixerModel,Dl as PatchTSMixerPreTrainedModel,Bl as PatchTSTForPrediction,Nl as PatchTSTModel,Rl as PatchTSTPreTrainedModel,jl as Phi3ForCausalLM,Vl as Phi3Model,Gl as Phi3PreTrainedModel,ql as Phi3VForCausalLM,Ul as Phi3VImageProcessor,Wl as Phi3VPreTrainedModel,Hl as Phi3VProcessor,Ql as PhiForCausalLM,Kl as PhiModel,Xl as PhiPreTrainedModel,Jl as Pipeline,Yl as PreTrainedModel,Zl as PreTrainedTokenizer,ed as PretrainedConfig,td as PretrainedMixin,nd as Processor,rd as PvtForImageClassification,sd as PvtImageProcessor,od as PvtModel,ad as PvtPreTrainedModel,id as PyAnnoteFeatureExtractor,ld as PyAnnoteForAudioFrameClassification,dd as PyAnnoteModel,ud as PyAnnotePreTrainedModel,cd as PyAnnoteProcessor,pd as QuestionAnsweringModelOutput,md as QuestionAnsweringPipeline,hd as Qwen2ForCausalLM,fd as Qwen2Model,_d as Qwen2PreTrainedModel,gd as Qwen2Tokenizer,wd as Qwen2VLForConditionalGeneration,bd as Qwen2VLImageProcessor,yd as Qwen2VLPreTrainedModel,Md as Qwen2VLProcessor,xd as Qwen3ForCausalLM,vd as Qwen3Model,Td as Qwen3PreTrainedModel,kd as RFDetrForObjectDetection,Pd as RFDetrModel,$d as RFDetrObjectDetectionOutput,Cd as RFDetrPreTrainedModel,Sd as RTDetrForObjectDetection,Fd as RTDetrImageProcessor,Ed as RTDetrModel,Id as RTDetrObjectDetectionOutput,Ad as RTDetrPreTrainedModel,zd as RTDetrV2ForObjectDetection,Ld as RTDetrV2Model,Od as RTDetrV2ObjectDetectionOutput,Dd as RTDetrV2PreTrainedModel,Bd as RawAudio,Nd as RawImage,Rd as RawVideo,jd as RawVideoFrame,Vd as RepetitionPenaltyLogitsProcessor,Gd as ResNetForImageClassification,qd as ResNetModel,Ud as ResNetPreTrainedModel,Wd as RoFormerForMaskedLM,Hd as RoFormerForQuestionAnswering,Qd as RoFormerForSequenceClassification,Kd as RoFormerForTokenClassification,Xd as RoFormerModel,Jd as RoFormerPreTrainedModel,Yd as RoFormerTokenizer,Zd as RobertaForMaskedLM,eu as RobertaForQuestionAnswering,tu as RobertaForSequenceClassification,nu as RobertaForTokenClassification,ru as RobertaModel,su as RobertaPreTrainedModel,ou as RobertaTokenizer,au as SamImageProcessor,iu as SamImageSegmentationOutput,lu as SamModel,du as SamPreTrainedModel,uu as SamProcessor,cu as SapiensForDepthEstimation,pu as SapiensForNormalEstimation,mu as SapiensForSemanticSegmentation,hu as SapiensPreTrainedModel,fu as SeamlessM4TFeatureExtractor,_u as SegformerFeatureExtractor,gu as SegformerForImageClassification,wu as SegformerForSemanticSegmentation,bu as SegformerImageProcessor,yu as SegformerModel,Mu as SegformerPreTrainedModel,xu as Seq2SeqLMOutput,vu as SequenceClassifierOutput,Tu as SiglipImageProcessor,ku as SiglipModel,Pu as SiglipPreTrainedModel,$u as SiglipTextModel,Cu as SiglipTokenizer,Su as SiglipVisionModel,Fu as SmolLM3ForCausalLM,Eu as SmolLM3Model,Iu as SmolLM3PreTrainedModel,Au as SmolVLMForConditionalGeneration,zu as SmolVLMImageProcessor,Lu as SmolVLMProcessor,Ou as SnacDecoderModel,Du as SnacEncoderModel,Bu as SnacFeatureExtractor,Nu as SnacModel,Ru as SnacPreTrainedModel,ju as SpeechT5FeatureExtractor,Vu as SpeechT5ForSpeechToText,Gu as SpeechT5ForTextToSpeech,qu as SpeechT5HifiGan,Uu as SpeechT5Model,Wu as SpeechT5PreTrainedModel,Hu as SpeechT5Processor,Qu as SpeechT5Tokenizer,Ku as SqueezeBertForMaskedLM,Xu as SqueezeBertForQuestionAnswering,Ju as SqueezeBertForSequenceClassification,Yu as SqueezeBertModel,Zu as SqueezeBertPreTrainedModel,ec as SqueezeBertTokenizer,tc as StableLmForCausalLM,nc as StableLmModel,rc as StableLmPreTrainedModel,sc as Starcoder2ForCausalLM,oc as Starcoder2Model,ac as Starcoder2PreTrainedModel,ic as StoppingCriteria,lc as StoppingCriteriaList,dc as StyleTextToSpeech2Model,uc as StyleTextToSpeech2PreTrainedModel,cc as SummarizationPipeline,pc as SuppressTokensAtBeginLogitsProcessor,mc as Swin2SRForImageSuperResolution,hc as Swin2SRImageProcessor,fc as Swin2SRModel,_c as Swin2SRPreTrainedModel,gc as SwinForImageClassification,wc as SwinForSemanticSegmentation,bc as SwinModel,yc as SwinPreTrainedModel,Mc as T5ForConditionalGeneration,xc as T5Model,vc as T5PreTrainedModel,Tc as T5Tokenizer,kc as TableTransformerForObjectDetection,Pc as TableTransformerModel,$c as TableTransformerObjectDetectionOutput,Cc as TableTransformerPreTrainedModel,Sc as TemperatureLogitsWarper,Fc as Tensor,Ec as Text2TextGenerationPipeline,Ic as TextClassificationPipeline,Ac as TextGenerationPipeline,zc as TextStreamer,Lc as TextToAudioPipeline,Oc as TokenClassificationPipeline,Dc as TokenClassifierOutput,Bc as TokenizerModel,Nc as TopKLogitsWarper,Rc as TopPLogitsWarper,jc as TrOCRForCausalLM,Vc as TrOCRPreTrainedModel,Gc as TranslationPipeline,qc as UltravoxModel,Uc as UltravoxPreTrainedModel,Wc as UltravoxProcessor,Hc as UniSpeechForCTC,Qc as UniSpeechForSequenceClassification,Kc as UniSpeechModel,Xc as UniSpeechPreTrainedModel,Jc as UniSpeechSatForAudioFrameClassification,Yc as UniSpeechSatForCTC,Zc as UniSpeechSatForSequenceClassification,ep as UniSpeechSatModel,tp as UniSpeechSatPreTrainedModel,np as VLChatProcessor,rp as VLMImageProcessor,sp as ViTFeatureExtractor,op as ViTForImageClassification,ap as ViTImageProcessor,ip as ViTMAEModel,lp as ViTMAEPreTrainedModel,dp as ViTMSNForImageClassification,up as ViTMSNModel,cp as ViTMSNPreTrainedModel,pp as ViTModel,mp as ViTPreTrainedModel,hp as VisionEncoderDecoderModel,fp as VitMatteForImageMatting,_p as VitMatteImageProcessor,gp as VitMattePreTrainedModel,wp as VitPoseForPoseEstimation,bp as VitPoseImageProcessor,yp as VitPosePreTrainedModel,Mp as VitsModel,xp as VitsModelOutput,vp as VitsPreTrainedModel,Tp as VitsTokenizer,kp as VoxtralForConditionalGeneration,Pp as VoxtralProcessor,$p as Wav2Vec2BertForCTC,Cp as Wav2Vec2BertForSequenceClassification,Sp as Wav2Vec2BertModel,Fp as Wav2Vec2BertPreTrainedModel,Ep as Wav2Vec2CTCTokenizer,Ip as Wav2Vec2FeatureExtractor,Ap as Wav2Vec2ForAudioFrameClassification,zp as Wav2Vec2ForCTC,Lp as Wav2Vec2ForSequenceClassification,Op as Wav2Vec2Model,Dp as Wav2Vec2PreTrainedModel,Bp as Wav2Vec2Processor,Np as Wav2Vec2ProcessorWithLM,Rp as WavLMForAudioFrameClassification,jp as WavLMForCTC,Vp as WavLMForSequenceClassification,Gp as WavLMForXVector,qp as WavLMModel,Up as WavLMPreTrainedModel,Wp as WeSpeakerFeatureExtractor,Hp as WeSpeakerResNetModel,Qp as WeSpeakerResNetPreTrainedModel,Kp as WhisperFeatureExtractor,Xp as WhisperForConditionalGeneration,Jp as WhisperModel,Yp as WhisperPreTrainedModel,Zp as WhisperProcessor,em as WhisperTextStreamer,tm as WhisperTimeStampLogitsProcessor,nm as WhisperTokenizer,rm as XLMForQuestionAnswering,sm as XLMForSequenceClassification,om as XLMForTokenClassification,am as XLMModel,im as XLMPreTrainedModel,lm as XLMRobertaForMaskedLM,dm as XLMRobertaForQuestionAnswering,um as XLMRobertaForSequenceClassification,cm as XLMRobertaForTokenClassification,pm as XLMRobertaModel,mm as XLMRobertaPreTrainedModel,hm as XLMRobertaTokenizer,fm as XLMTokenizer,_m as XLMWithLMHeadModel,gm as XVectorOutput,wm as YolosFeatureExtractor,bm as YolosForObjectDetection,ym as YolosImageProcessor,Mm as YolosModel,xm as YolosObjectDetectionOutput,vm as YolosPreTrainedModel,Tm as ZeroShotAudioClassificationPipeline,km as ZeroShotClassificationPipeline,Pm as ZeroShotImageClassificationPipeline,$m as ZeroShotObjectDetectionPipeline,Cm as bankers_round,Sm as cat,Fm as cos_sim,Em as dot,Im as dynamic_time_warping,Am as env,zm as full,Lm as full_like,Om as getCacheShapes,Dm as hamming,Bm as hanning,Nm as interpolate,Rm as interpolate_4d,jm as interpolate_data,Vm as is_chinese_char,Gm as layer_norm,qm as load_image,Um as load_video,Wm as log_softmax,Hm as magnitude,Qm as matmul,Km as max,Xm as mean,Jm as mean_pooling,Ym as medianFilter,Zm as mel_filter_bank,eh as min,th as ones,nh as ones_like,rh as permute,sh as permute_data,oh as pipeline,ah as quantize_embeddings,ih as rand,lh as read_audio,dh as rfft,uh as round,ch as slice,ph as softmax,mh as spectrogram,hh as stack,fh as std_mean,_h as topk,gh as window_function,wh as zeros,bh as zeros_like};
//# sourceMappingURL=transformers.min.js.map